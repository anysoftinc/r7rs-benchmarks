
****************************
Benchmarking TR7 on Sat 6 Jul 16:11:32 CEST 2024 under Linux h4nex 6.9.7-arch1-1 #1 SMP PREEMPT_DYNAMIC Fri, 28 Jun 2024 04:32:50 +0000 x86_64 GNU/Linux

Testing browse under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/browse.scm /tmp/r7rs-benchmarks/TR7/browse.scm
Running...
Running browse:2000
Elapsed time: 42.366 seconds (42.366) for browse:2000
+!CSVLINE!+tr7-unknown,browse:2000,42.366

real	0m42.445s
user	0m42.183s
sys	0m0.210s

Testing deriv under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/deriv.scm /tmp/r7rs-benchmarks/TR7/deriv.scm
Running...
Running deriv:10000000
Elapsed time: 26.091 seconds (26.091) for deriv:10000000
+!CSVLINE!+tr7-unknown,deriv:10000000,26.091

real	0m26.116s
user	0m25.930s
sys	0m0.156s

Testing destruc under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/destruc.scm /tmp/r7rs-benchmarks/TR7/destruc.scm
Running...
Running destruc:600:50:4000
Elapsed time: 43.049 seconds (43.049) for destruc:600:50:4000
+!CSVLINE!+tr7-unknown,destruc:600:50:4000,43.049

real	0m43.078s
user	0m42.898s
sys	0m0.153s

Testing diviter under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/diviter.scm /tmp/r7rs-benchmarks/TR7/diviter.scm
Running...
Running diviter:1000:1000000
Elapsed time: 30.521 seconds (30.52) for diviter:1000:1000000
+!CSVLINE!+tr7-unknown,diviter:1000:1000000,30.521

real	0m30.542s
user	0m30.386s
sys	0m0.130s

Testing divrec under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/divrec.scm /tmp/r7rs-benchmarks/TR7/divrec.scm
Running...
Running divrec:1000:1000000
Elapsed time: 41.964 seconds (41.964) for divrec:1000:1000000
+!CSVLINE!+tr7-unknown,divrec:1000:1000000,41.964

real	0m41.985s
user	0m41.786s
sys	0m0.150s

Testing puzzle under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/puzzle.scm /tmp/r7rs-benchmarks/TR7/puzzle.scm
Running...
Running puzzle:1000
Elapsed time: 76.657 seconds (76.658) for puzzle:1000
+!CSVLINE!+tr7-unknown,puzzle:1000,76.657

real	1m16.683s
user	1m16.507s
sys	0m0.134s

Testing triangl under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/triangl.scm /tmp/r7rs-benchmarks/TR7/triangl.scm
Running...
Running triangl:22:1:50
Elapsed time: 61.77 seconds (61.77) for triangl:22:1:50
+!CSVLINE!+tr7-unknown,triangl:22:1:50,61.77

real	1m1.791s
user	1m1.607s
sys	0m0.134s

Testing tak under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/tak.scm /tmp/r7rs-benchmarks/TR7/tak.scm
Running...
Running tak:40:20:11:1
Elapsed time: 62.571 seconds (62.57) for tak:40:20:11:1
+!CSVLINE!+tr7-unknown,tak:40:20:11:1,62.571

real	1m2.592s
user	1m2.391s
sys	0m0.130s

Testing takl under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/takl.scm /tmp/r7rs-benchmarks/TR7/takl.scm
Running...
Running takl:40:20:12:1
Elapsed time: 175.869 seconds (175.869) for takl:40:20:12:1
+!CSVLINE!+tr7-unknown,takl:40:20:12:1,175.869

real	2m55.890s
user	2m55.559s
sys	0m0.134s

Testing ntakl under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/ntakl.scm /tmp/r7rs-benchmarks/TR7/ntakl.scm
Running...
Running ntakl:40:20:12:1
Elapsed time: 154.076 seconds (154.077) for ntakl:40:20:12:1
+!CSVLINE!+tr7-unknown,ntakl:40:20:12:1,154.076

real	2m34.105s
user	2m33.786s
sys	0m0.150s

Testing cpstak under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/cpstak.scm /tmp/r7rs-benchmarks/TR7/cpstak.scm
Running...
Running cpstak:40:20:11:1
Elapsed time: 81.271 seconds (81.271) for cpstak:40:20:11:1
+!CSVLINE!+tr7-unknown,cpstak:40:20:11:1,81.271

real	1m21.292s
user	1m21.011s
sys	0m0.160s

Testing ctak under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/ctak.scm /tmp/r7rs-benchmarks/TR7/ctak.scm
Running...
Running ctak:32:16:8:1
Elapsed time: 11.261 seconds (11.261) for ctak:32:16:8:1
+!CSVLINE!+tr7-unknown,ctak:32:16:8:1,11.261

real	0m11.282s
user	0m11.130s
sys	0m0.120s

Testing fib under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/fib.scm /tmp/r7rs-benchmarks/TR7/fib.scm
Running...
Running fib:40:5
Elapsed time: 139.101 seconds (139.101) for fib:40:5
+!CSVLINE!+tr7-unknown,fib:40:5,139.101

real	2m19.122s
user	2m18.817s
sys	0m0.167s

Testing fibc under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/fibc.scm /tmp/r7rs-benchmarks/TR7/fibc.scm
Running...
Running fibc:30:10
Elapsed time: 19.924 seconds (19.923) for fibc:30:10
+!CSVLINE!+tr7-unknown,fibc:30:10,19.924

real	0m19.953s
user	0m19.756s
sys	0m0.153s

Testing fibfp under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/fibfp.scm /tmp/r7rs-benchmarks/TR7/fibfp.scm
Running...
Running fibfp:35.0:10
Elapsed time: 28.889 seconds (28.889) for fibfp:35.0:10
+!CSVLINE!+tr7-unknown,fibfp:35.0:10,28.889

real	0m28.906s
user	0m28.726s
sys	0m0.150s

Testing sum under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/sum.scm /tmp/r7rs-benchmarks/TR7/sum.scm
Running...
Running sum:10000:200000
Elapsed time: 166.37 seconds (166.37) for sum:10000:200000
+!CSVLINE!+tr7-unknown,sum:10000:200000,166.37

real	2m46.391s
user	2m45.861s
sys	0m0.360s

Testing sumfp under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/sumfp.scm /tmp/r7rs-benchmarks/TR7/sumfp.scm
Running...
Running sumfp:1000000.0:500
Elapsed time: 46.304 seconds (46.304) for sumfp:1000000.0:500
+!CSVLINE!+tr7-unknown,sumfp:1000000.0:500,46.304

real	0m46.334s
user	0m46.137s
sys	0m0.147s

Testing fft under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/fft.scm /tmp/r7rs-benchmarks/TR7/fft.scm
Running...
Running fft:65536:100
Elapsed time: 20.123 seconds (20.123) for fft:65536:100
+!CSVLINE!+tr7-unknown,fft:65536:100,20.123

real	0m20.144s
user	0m19.987s
sys	0m0.136s

Testing mbrot under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/mbrot.scm /tmp/r7rs-benchmarks/TR7/mbrot.scm
Running...
Running mbrot:75:1000
Elapsed time: 48.046 seconds (48.047) for mbrot:75:1000
+!CSVLINE!+tr7-unknown,mbrot:75:1000,48.046

real	0m48.067s
user	0m47.814s
sys	0m0.150s

Testing mbrotZ under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/mbrotZ.scm /tmp/r7rs-benchmarks/TR7/mbrotZ.scm
Running...
Error: unable to locate library: (scheme complex)
Running mbrotZ:75:1000
Error: unbound variable: jiffies-per-second
   #0 in run-r7rs-benchmark at /tmp/r7rs-benchmarks/TR7/mbrotZ.scm:0 args ("mbrotZ:75:1000" 1000 #<LAMBDA> #<LAMBDA>)

real	0m0.029s
user	0m0.010s
sys	0m0.012s

Testing nucleic under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/nucleic.scm /tmp/r7rs-benchmarks/TR7/nucleic.scm
Running...
Running nucleic:50
Elapsed time: 31.31 seconds (31.309) for nucleic:50
+!CSVLINE!+tr7-unknown,nucleic:50,31.31

real	0m31.333s
user	0m31.155s
sys	0m0.144s

Testing pi under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/pi.scm /tmp/r7rs-benchmarks/TR7/pi.scm
Running...
Running pi:50:500:50:100
./bench: line 496: 385361 Killed                  ${TR7I} "$1" < "$2"

real	5m0.315s
user	4m59.856s
sys	0m0.114s
+!CSVLINE!+tr7,pi,ULIMITKILLED

Testing pnpoly under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/pnpoly.scm /tmp/r7rs-benchmarks/TR7/pnpoly.scm
Running...
Running pnpoly:1000000
Elapsed time: 64.157 seconds (64.158) for pnpoly:1000000
+!CSVLINE!+tr7-unknown,pnpoly:1000000,64.157

real	1m4.178s
user	1m4.039s
sys	0m0.087s

Testing ray under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/ray.scm /tmp/r7rs-benchmarks/TR7/ray.scm
Running...
Running ray:50
Elapsed time: 35.353 seconds (35.353) for ray:50
+!CSVLINE!+tr7-unknown,ray:50,35.353

real	0m35.375s
user	0m35.145s
sys	0m0.147s

Testing simplex under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/simplex.scm /tmp/r7rs-benchmarks/TR7/simplex.scm
Running...
Running simplex:1000000
Elapsed time: 58.514 seconds (58.514) for simplex:1000000
+!CSVLINE!+tr7-unknown,simplex:1000000,58.514

real	0m58.535s
user	0m58.280s
sys	0m0.133s

Testing ack under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/ack.scm /tmp/r7rs-benchmarks/TR7/ack.scm
Running...
Running ack:3:12:2
Elapsed time: 127.15 seconds (127.151) for ack:3:12:2
+!CSVLINE!+tr7-unknown,ack:3:12:2,127.15

real	2m7.172s
user	2m6.888s
sys	0m0.140s

Testing array1 under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/array1.scm /tmp/r7rs-benchmarks/TR7/array1.scm
Running...
Running array1:1000000:500
Elapsed time: 76.175 seconds (76.176) for array1:1000000:500
+!CSVLINE!+tr7-unknown,array1:1000000:500,76.175

real	1m16.196s
user	1m15.989s
sys	0m0.144s

Testing string under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/string.scm /tmp/r7rs-benchmarks/TR7/string.scm
Running...
Running string:500000:100
Elapsed time: 4.995 seconds (4.994) for string:500000:100
+!CSVLINE!+tr7-unknown,string:500000:100,4.995

real	0m5.224s
user	0m4.108s
sys	0m1.104s

Testing sum1 under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/sum1.scm /tmp/r7rs-benchmarks/TR7/sum1.scm
Running...
Running sum1:25
Elapsed time: 0.85 seconds (0.851) for sum1:25
+!CSVLINE!+tr7-unknown,sum1:25,0.85

real	0m0.871s
user	0m0.809s
sys	0m0.060s

Testing cat under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/cat.scm /tmp/r7rs-benchmarks/TR7/cat.scm
Running...
Running cat:50
Elapsed time: 18.774 seconds (18.775) for cat:50
+!CSVLINE!+tr7-unknown,cat:50,18.774

real	0m18.797s
user	0m18.472s
sys	0m0.303s

Testing tail under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/tail.scm /tmp/r7rs-benchmarks/TR7/tail.scm
Running...
Running tail:50
Elapsed time: 4.859 seconds (4.858) for tail:50
+!CSVLINE!+tr7-unknown,tail:50,4.859

real	0m4.953s
user	0m4.649s
sys	0m0.297s

Testing wc under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/wc.scm /tmp/r7rs-benchmarks/TR7/wc.scm
Running...
Running wc:inputs/bib:50
Elapsed time: 31.096 seconds (31.096) for wc:inputs/bib:50
+!CSVLINE!+tr7-unknown,wc:inputs/bib:50,31.096

real	0m31.121s
user	0m30.913s
sys	0m0.166s

Testing read1 under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/read1.scm /tmp/r7rs-benchmarks/TR7/read1.scm
Running...
Running read1:2500
Elapsed time: 0.995 seconds (0.995) for read1:2500
+!CSVLINE!+tr7-unknown,read1:2500,0.995

real	0m1.011s
user	0m0.956s
sys	0m0.054s

Testing compiler under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/compiler.scm /tmp/r7rs-benchmarks/TR7/compiler.scm
Running...
Error: unable to locate library: (scheme complex)
Running compiler:2000
Error: when calling list-ref, argument 2 must be non-negative integer: ((#(#1=(var-tag) ret #t () () #f #f) #2=#(#1# x #3=#(#4=(prc-tag) #5=#(#6=(app-tag) #7=#(#4# #8=#(#6# #9=#(#4# #10=#(#6# #11=#(#4# #12=#(#13=(def-tag) #f (#11#) #t #14=#(((#15=#(#1# > #f (#16=#(#17=(ref-tag) #18=#(#6# #19=#(#20=(tst-tag) #21=#(#4# #22=#(#6# #23=#(#4# #24=#(#13# #f (#23#) #t #14# #((#(define #(expr define #f)) #((#25=#(go #(expr go #f)) . #26=(#27=#(n #(expr n #f)))) #(expr #28=(go n) #f)) . #29=(#30=#((#(let #(expr let #f)) #31=#(loop #(expr loop #f)) #((#((#32=#(repeat #(expr repeat #f)) #33=#(100 #(expr 100 #f))) #(expr #34=(repeat 100) #f)) #((#35=#(result #(expr result #f)) #36=#(0 #(expr 0 #f))) #(expr #37=(result 0) #f))) #(expr #38=(#34# #37#) #f)) #39=#((#(if #(expr if #f)) #40=#((#41=#(> #(expr > #f)) #42=#(repeat #(expr repeat #f)) #43=#(0 #(expr 0 #f))) #(expr #44=(> repeat 0) #f)) #45=#((#46=#(loop #(expr loop #f)) #47=#((#48=#(- #(expr - #f)) #49=#(repeat #(expr repeat #f)) #50=#(1 #(expr 1 #f))) #(expr #51=(- repeat 1) #f)) #52=#((#53=#(my-try #(expr my-try #f)) #54=#(n #(expr n #f))) #(expr #55=(my-try n) #f))) #(expr #56=(loop #51# #55#) #f)) #57=#(result #(expr result #f))) #(expr #58=(if #44# #56# result) #f))) #(expr #59=(let loop #38# #58#) #f)))) #60=#(expr (define #28# #59#) #f)) #61=#(#1# go #f (#62=#(#17# #63=#(#6# #64=#(#6# #f (#65=#(#17# #64# () #t #14# #66=#(+ #(expr + #f)) #67=#(#1# + #f (#65# #68=#(#17# #69=#(#6# #70=#(#6# #71=#(#4# #72=#(#6# #73=#(#20# #74=#(#4# #75=#(#6# #76=#(#4# #77=#(#6# #78=#(#4# #79=#(#13# #f (#78#) #t #14# #((#(define #(expr define #f)) #((#80=#(create-x #(expr create-x #f)) . #81=(#82=#(n #(expr n #f)))) #(expr #83=(create-x n) #f)) . #84=(#((#(define #(expr define #f)) #85=#(result #(expr result #f)) #86=#((#87=#(make-vector #(expr make-vector #f)) #88=#(n #(expr n #f))) #(expr #89=(make-vector n) #f))) #(expr #90=(define result #89#) #f)) #91=#((#(do #(expr do #f)) #((#((#92=#(i #(expr i #f)) #93=#(0 #(expr 0 #f)) #94=#((#95=#(+ #(expr + #f)) #96=#(i #(expr i #f)) #97=#(1 #(expr 1 #f))) #(expr #98=(+ i 1) #f))) #(expr #99=(i 0 #98#) #f))) #(expr #100=(#99#) #f)) #((#101=#((#102=#(>= #(expr >= #f)) #103=#(i #(expr i #f)) #104=#(n #(expr n #f))) #(expr #105=(>= i n) #f)) #106=#(result #(expr result #f))) #(expr #107=(#105# result) #f)) #108=#((#109=#(vector-set! #(expr vector-set! #f)) #110=#(result #(expr result #f)) #111=#(i #(expr i #f)) #112=#(i #(expr i #f))) #(expr #113=(vector-set! result i i) #f))) #(expr #114=(do #100# #107# #113#) #f)))) #115=#(expr (define #83# #90# #114#) #f)) #116=#(#1# create-x #f (#117=#(#17# #118=#(#6# #119=#(#6# #120=#(#6# #121=#(#4# #122=#(#13# #f (#121#) #t #14# #((#(define #(expr define #f)) #((#123=#(my-try #(expr my-try #f)) . #124=(#125=#(n #(expr n #f)))) #(expr #126=(my-try n) #f)) . #127=(#128=#((#129=#(vector-length #(expr vector-length #f)) #130=#((#131=#(create-y #(expr create-y #f)) #132=#((#133=#(create-x #(expr create-x #f)) #134=#(n #(expr n #f))) #(expr #135=(create-x n) #f))) #(expr #136=(create-y #135#) #f))) #(expr #137=(vector-length #136#) #f)))) #138=#(expr (define #126# #137#) #f)) #139=#(#1# my-try #f (#140=#(#17# #141=#(#6# #142=#(#6# #19# (#143=#(#17# #142# () #t #144=#((() . #f) () () #145=#(((#146=#(#1# loop #147=#(#4# #22# (#148=#(#6# #147# (#149=#(#17# #148# () #t #145# #30# #146#) #150=#(#17# #148# () #t #145# #27# #151=#(#1# n #23# (#150#) () #27# #f)) #(#152=(cst-tag) #148# () #t #153=#((() . #f) () () #((#154=(#151#) . #f) () () #14#)) #33# 100) #(#152# #148# () #t #153# #36# 0)) #t #145# #30#)) #t #145# #30# #f 1 #f (#146#)) (#149# #143#) () #31# #f)) . #f) () () #((#155=(#156=#(#1# repeat #21# (#157=#(#17# #158=#(#6# #142# (#159=#(#17# #158# () #t #144# #48# #160=#(#1# - #f (#159# #161=#(#17# #162=#(#6# #163=#(#6# #164=#(#4# #5# (#163#) (#165=#(#1# x #11# (#166=#(#17# #163# () (#165#) #167=#((#168=(#169=#(#1# i #3# (#170=#(#17# #171=#(#6# #172=#(#6# #173=#(#4# #174=#(#6# #175=#(#20# #3# (#176=#(#6# #175# (#177=#(#17# #176# () () #167# #178=#(< #(expr < #f)) #179=#(#1# < #f (#177# #180=#(#17# #181=#(#6# #182=#(#6# #183=#(#20# #184=#(#4# #185=#(#13# #f (#184#) #t #14# #((#(define #(expr define #f)) #((#186=#(tak #(expr tak #f)) . #187=(#188=#(x #(expr x #f)) #189=#(y #(expr y #f)) #190=#(z #(expr z #f)))) #(expr #191=(tak x y z) #f)) . #192=(#193=#((#(if #(expr if #f)) #194=#((#195=#(not #(expr not #f)) #196=#((#197=#(< #(expr < #f)) #198=#(y #(expr y #f)) #199=#(x #(expr x #f))) #(expr #200=(< y x) #f))) #(expr #201=(not #200#) #f)) #202=#(z #(expr z #f)) #203=#((#204=#(tak #(expr tak #f)) #205=#((#206=#(tak #(expr tak #f)) #207=#((#208=#(- #(expr - #f)) #209=#(x #(expr x #f)) #210=#(1 #(expr 1 #f))) #(expr #211=(- x 1) #f)) #212=#(y #(expr y #f)) #213=#(z #(expr z #f))) #(expr #214=(tak #211# y z) #f)) #215=#((#216=#(tak #(expr tak #f)) #217=#((#218=#(- #(expr - #f)) #219=#(y #(expr y #f)) #220=#(1 #(expr 1 #f))) #(expr #221=(- y 1) #f)) #222=#(z #(expr z #f)) #223=#(x #(expr x #f))) #(expr #224=(tak #221# z x) #f)) #225=#((#226=#(tak #(expr tak #f)) #227=#((#228=#(- #(expr - #f)) #229=#(z #(expr z #f)) #230=#(1 #(expr 1 #f))) #(expr #231=(- z 1) #f)) #232=#(x #(expr x #f)) #233=#(y #(expr y #f))) #(expr #234=(tak #231# x y) #f))) #(expr #235=(tak #214# #224# #234#) #f))) #(expr #236=(if #201# z #235#) #f)))) #237=#(expr (define #191# #236#) #f)) #238=#(#1# tak #f (#239=#(#17# #240=#(#6# #64# (#239# #(#152# #240# () #t #14# #241=#(18 #(expr 18 #f)) 18) #(#152# #240# () #t #14# #242=#(12 #(expr 12 #f)) 12) #(#152# #240# () #t #14# #243=#(6 #(expr 6 #f)) 6)) #t #14# #244=#((#245=#(tak #(expr tak #f)) #241# #242# #243#) #(expr #246=(tak 18 12 6) #f))) () #t #14# #245# #238#) #247=#(#17# #248=#(#6# #183# (#247# #249=#(#6# #248# (#250=#(#17# #249# () () #251=#((() . #f) () () #((#252=(#253=#(#1# x #184# (#254=#(#17# #255=#(#6# #248# (#256=#(#17# #255# () () #251# #226# #238#) #257=#(#6# #255# (#258=#(#17# #257# () () #251# #228# #160#) #259=#(#17# #257# () (#260=#(#1# z #184# (#261=#(#17# #183# () (#260#) #251# #202# #260#) #259# #262=#(#17# #263=#(#6# #248# (#264=#(#17# #263# () () #251# #216# #238#) #265=#(#6# #263# (#266=#(#17# #265# () () #251# #218# #160#) #267=#(#17# #265# () (#268=#(#1# y #184# (#269=#(#17# #255# () #270=(#268#) #251# #233# #268#) #267# #271=#(#17# #249# () (#268#) #251# #212# #268#) #272=#(#17# #181# () (#268#) #251# #198# #268#)) () #189# #f)) #251# #219# #268#) #(#152# #265# () () #251# #220# 1)) (#268#) #251# #217#) #262# #273=#(#17# #263# () #274=(#253#) #251# #223# #253#)) (#268# #260# . #274#) #251# #215#) () (#260#) #251# #222# #260#) #275=#(#17# #249# () #276=(#260#) #251# #213# #260#)) () #190# #f)) #251# #229# #260#) #(#152# #257# () () #251# #230# 1)) (#260#) #251# #227#) #254# #269#) #277=(#260# #253# . #270#) #251# #225#) () (#253#) #251# #232# #253#) #273# #278=#(#17# #279=#(#6# #249# (#280=#(#17# #279# () () #251# #208# #160#) #278# #(#152# #279# () () #251# #210# 1)) (#253#) #251# #207#) () (#253#) #251# #209# #253#) #281=#(#17# #181# () #282=(#253#) #251# #199# #253#)) () #188# #f) #268# #260#) . #f) () () #14#)) #206# #238#) #279# #271# #275#) (#253# #268# . #276#) #251# #205#) #263# #255#) #277# #251# #203#) () () #251# #204# #238#) #256# #264# #250#) (#185#) #186# #f)) (#183#) #t #14# #((#(lambda #237#) #(#187# #237#) . #192#) #237#) "tak" 3 #f #252#) (#182# #261# #248#) #277# #251# #193#) (#283=#(#17# #182# () () #251# #195# #284=#(#1# not #f (#283#) () #195# #f)) #181#) #285=(#268# . #282#) #251# #194#) (#180# #272# #281#) #285# #251# #196#) () () #251# #197# #179#) #286=#(#17# #287=#(#6# #288=#(#20# #289=#(#4# #290=#(#13# #f (#289#) #t #14# #((#(define #(expr define #f)) #((#291=#(fib #(expr fib #f)) . #292=(#293=#(n #(expr n #f)))) #(expr #294=(fib n) #f)) . #295=(#296=#((#(if #(expr if #f)) #297=#((#298=#(< #(expr < #f)) #299=#(n #(expr n #f)) #300=#(2 #(expr 2 #f))) #(expr #301=(< n 2) #f)) #302=#(n #(expr n #f)) #303=#((#304=#(+ #(expr + #f)) #305=#((#306=#(fib #(expr fib #f)) #307=#((#308=#(- #(expr - #f)) #309=#(n #(expr n #f)) #310=#(1 #(expr 1 #f))) #(expr #311=(- n 1) #f))) #(expr #312=(fib #311#) #f)) #313=#((#314=#(fib #(expr fib #f)) #315=#((#316=#(- #(expr - #f)) #317=#(n #(expr n #f)) #318=#(2 #(expr 2 #f))) #(expr #319=(- n 2) #f))) #(expr #320=(fib #319#) #f))) #(expr #321=(+ #312# #320#) #f))) #(expr #322=(if #301# n #321#) #f)))) #323=#(expr (define #294# #322#) #f)) #324=#(#1# fib #f (#325=#(#17# #326=#(#6# #64# (#325# #(#152# #326# () #t #14# #327=#(20 #(expr 20 #f)) 20)) #t #14# #328=#((#329=#(fib #(expr fib #f)) #327#) #(expr #330=(fib 20) #f))) () #t #14# #329# #324#) #331=#(#17# #332=#(#6# #333=#(#6# #288# (#334=#(#17# #333# () () #335=#((() . #f) () () #((#336=(#337=#(#1# n #289# (#338=#(#17# #288# () (#337#) #335# #302# #337#) #339=#(#17# #340=#(#6# #332# (#341=#(#17# #340# () () #335# #316# #160#) #339# #(#152# #340# () () #335# #318# 2)) #342=(#337#) #335# #315#) () (#337#) #335# #317# #337#) #343=#(#17# #344=#(#6# #345=#(#6# #333# (#346=#(#17# #345# () () #335# #306# #324#) #344#) #347=(#337#) #335# #305#) (#348=#(#17# #344# () () #335# #308# #160#) #343# #(#152# #344# () () #335# #310# 1)) #347# #335# #307#) () (#337#) #335# #309# #337#) #349=#(#17# #287# () (#337#) #335# #299# #337#)) () #293# #f)) . #f) () () #14#)) #304# #67#) #345# #332#) #342# #335# #303#) (#331# #340#) #342# #335# #313#) () () #335# #314# #324#) #346#) (#290#) #291# #f)) (#288#) #t #14# #((#(lambda #323#) #(#292# #323#) . #295#) #323#) "fib" 1 #f #336#) (#287# #338# #333#) #342# #335# #296#) (#286# #349# #(#152# #287# () () #335# #300# 2)) (#337#) #335# #297#) () () #335# #298# #179#)) () #298# #f)) #350=#(#17# #176# () (#169#) #167# #351=#(i #(expr i #f)) #169#) #(#152# #176# () () #167# #352=#(0 #(expr 0 #f)) 0)) (#169#) #167# #353=#((#178# #351# #352#) #(expr #354=(< i 0) #f))) #355=#(#17# #175# () (#356=#(#1# result #3# (#357=#(#17# #358=#(#6# #174# (#359=#(#17# #358# () () #167# #360=#(vector-set! #(expr vector-set! #f)) #361=#(#1# vector-set! #f (#359# #362=#(#17# #363=#(#6# #72# (#362# #364=#(#17# #363# () (#365=#(#1# result #74# (#364# #366=#(#17# #70# () (#365#) #367=#((#368=(#369=#(#1# i #74# (#370=#(#17# #69# () (#369#) #367# #96# #369#) #371=#(#17# #363# () #372=(#369#) #367# #112# #369#) #373=#(#17# #363# () (#369#) #367# #111# #369#) #374=#(#17# #375=#(#6# #73# (#376=#(#17# #375# () () #367# #102# #377=#(#1# >= #f (#376#) () #102# #f)) #374# #378=#(#17# #375# () #379=(#380=#(#1# n #74# (#381=#(#17# #70# () (#380#) #367# #82# #380#) #378#) () #82# #f)) #367# #104# #380#)) (#369# . #379#) #367# #101#) () (#369#) #367# #103# #369#)) () #92# #f)) . #f) () () #382=#((() . #f) () () #383=#(((#384=#(#1# result #76# (#385=#(#17# #386=#(#6# #387=#(#4# #75# (#386#) (#388=#(#1# n #78# (#389=#(#17# #386# () (#388#) #367# #82# #388#) #390=#(#17# #391=#(#6# #77# (#392=#(#17# #391# () () #383# #87# #393=#(#1# make-vector #f (#394=#(#17# #395=#(#6# #8# (#394# #396=#(#17# #395# () #397=(#398=#(#1# n #9# (#399=#(#17# #162# () (#398#) #400=#((() . #f) () () #401=#(((#402=#(#1# result #7# (#403=#(#17# #163# () (#402#) #167# #404=#(result #(expr result #f)) #402#)) () #404# #f)) . #f) () () #405=#(((#398#) . #f) () () #406=#((() . #f) () () #((#407=(#165#) . #f) () () #14#))))) #408=#(n #(expr n #f)) #398#) #396#) () #409=#(n #(expr n #f)) #f)) #405# #410=#(n #(expr n #f)) #398#)) #397# #405# #411=#((#412=#(make-vector #(expr make-vector #f)) #410#) #(expr #413=(make-vector n) #f))) () () #405# #412# #393#) #392#) () #87# #f)) #390#) #414=(#388#) #383# #86#) () #414# #383# #88# #388#)) () #82# #f) #384#) #367# #91# #f 1 #f (#415=#(#1# loop #387# (#416=#(#17# #386# () (#415#) #367# #91# #415#) #417=#(#17# #70# () (#415#) #367# #91# #415#)) () #91# #f))) (#416# #389# #385# #(#152# #386# () () #382# #93# 0)) (#415# #388# #384#) #367# #91#) () (#384#) #367# #85# #384#)) () #85# #f)) . #f) () () #((#418=(#388#) . #f) () () #14#)))) #85# #365#) #419=#(#17# #73# () (#365#) #367# #106# #365#)) () #85# #f)) #367# #110# #365#) #373# #371#) (#365# . #372#) #367# #108#) () () #367# #109# #361#)) () #109# #f)) #357# #420=#(#17# #358# () (#169#) #167# #421=#(i #(expr i #f)) #169#) #422=#(#6# #358# (#423=#(#17# #422# () () #167# #424=#(vector-ref #(expr vector-ref #f)) #425=#(#1# vector-ref #f (#423#) () #424# #f)) #426=#(#17# #422# () (#2#) #167# #427=#(x #(expr x #f)) #2#) #428=#(#17# #422# () #429=(#169#) #167# #430=#(i #(expr i #f)) #169#)) #431=(#2# . #429#) #167# #432=#((#424# #427# #430#) #(expr #433=(vector-ref x i) #f)))) (#356# . #431#) #167# #434=#((#360# #435=#(result #(expr result #f)) #421# #432#) #(expr #436=(vector-set! result i #433#) #f))) () (#356#) #167# #435# #356#) #437=#(#17# #172# () (#356#) #167# #404# #356#) #355#) () #404# #f)) #167# #438=#(result #(expr result #f)) #356#) #174#) #439=(#440=#(#1# loop #164# (#441=#(#17# #163# () (#440#) #167# #442=#((#(do #(expr do #f)) #((#((#443=#(i #(expr i #f)) #444=#((#445=#(- #(expr - #f)) #408# #446=#(1 #(expr 1 #f))) #(expr #447=(- n 1) #f)) #448=#((#449=#(- #(expr - #f)) #450=#(i #(expr i #f)) #451=#(1 #(expr 1 #f))) #(expr #452=(- i 1) #f))) #(expr #453=(i #447# #452#) #f))) #(expr #454=(#453#) #f)) #((#353# #438#) #(expr #455=(#354# result) #f)) #434#) #(expr #456=(do #454# #455# #436#) #f)) #440#) #457=#(#17# #172# () (#440#) #167# #442# #440#)) () #442# #f) #356# #2# #169#) #167# #442#) (#173# #358#) #439# #167# #442#) (#172#) (#440# #2# #356# #169#) #167# #442# #f 1 #f (#(#1# temp #173# () () #442# #f))) (#457# #458=#(#17# #172# () (#2#) #167# #459=#(x #(expr x #f)) #2#) #437# #171#) (#440# #2# #356# . #460=(#169#)) #167# #442#) (#461=#(#17# #171# () () #167# #449# #160#) #170# #(#152# #171# () () #167# #451# 1)) #460# #167# #448#) () (#169#) #167# #450# #169#) #428# #420# #350#) () #443# #f)) . #f) () () #400#) #459# #165#) #462=#(#17# #463=#(#6# #10# (#464=#(#17# #463# () () #406# #465=#(vector-length #(expr vector-length #f)) #466=#(#1# vector-length #f (#467=#(#17# #120# () #t #468=#((() . #f) () () #((#469=(#470=#(#1# n #121# (#471=#(#17# #118# () #t #468# #134# #470#)) () #125# #f)) . #f) () () #14#)) #129# #466#) #464#) () #465# #f)) #462#) #472=(#165#) #406# #473=#((#465# #474=#(x #(expr x #f))) #(expr #475=(vector-length x) #f))) () #472# #406# #474# #165#)) () #459# #f) #402# #398#) #167# #442# #f 1 #f (#440#)) (#441# #166# #403# #162#) (#440# #165# #402# . #476=(#398#)) #167# #442#) (#161# #399# #(#152# #162# () () #400# #446# 1)) #476# #400# #444#) () () #400# #445# #160#) #461# #477=#(#17# #478=#(#6# #479=#(#6# #480=#(#20# #481=#(#20# #482=#(#4# #483=#(#13# #f (#482#) #t #14# #((#(define #(expr define #f)) #((#484=#(ack #(expr ack #f)) . #485=(#486=#(m #(expr m #f)) #487=#(n #(expr n #f)))) #(expr #488=(ack m n) #f)) . #489=(#((#(cond #(expr cond #f)) #490=#((#491=#((#492=#(= #(expr = #f)) #493=#(m #(expr m #f)) #494=#(0 #(expr 0 #f))) #(expr #495=(= m 0) #f)) #496=#((#497=#(+ #(expr + #f)) #498=#(n #(expr n #f)) #499=#(1 #(expr 1 #f))) #(expr #500=(+ n 1) #f))) #(expr #501=(#495# #500#) #f)) #502=#((#503=#((#504=#(= #(expr = #f)) #505=#(n #(expr n #f)) #506=#(0 #(expr 0 #f))) #(expr #507=(= n 0) #f)) #508=#((#509=#(ack #(expr ack #f)) #510=#((#511=#(- #(expr - #f)) #512=#(m #(expr m #f)) #513=#(1 #(expr 1 #f))) #(expr #514=(- m 1) #f)) #515=#(1 #(expr 1 #f))) #(expr #516=(ack #514# 1) #f))) #(expr #517=(#507# #516#) #f)) #((#(else #(expr else #f)) #518=#((#519=#(ack #(expr ack #f)) #520=#((#521=#(- #(expr - #f)) #522=#(m #(expr m #f)) #523=#(1 #(expr 1 #f))) #(expr #524=(- m 1) #f)) #525=#((#526=#(ack #(expr ack #f)) #527=#(m #(expr m #f)) #528=#((#529=#(- #(expr - #f)) #530=#(n #(expr n #f)) #531=#(1 #(expr 1 #f))) #(expr #532=(- n 1) #f))) #(expr #533=(ack m #532#) #f))) #(expr #534=(ack #524# #533#) #f))) #(expr #535=(else #534#) #f))) #(expr #536=(cond #501# #517# #535#) #f)))) #537=#(expr (define #488# #536#) #f)) #538=#(#1# ack #f (#539=#(#17# #540=#(#6# #64# (#539# #(#152# #540# () #t #14# #541=#(3 #(expr 3 #f)) 3) #(#152# #540# () #t #14# #542=#(9 #(expr 9 #f)) 9)) #t #14# #543=#((#544=#(ack #(expr ack #f)) #541# #542#) #(expr #545=(ack 3 9) #f))) () #t #14# #544# #538#) #546=#(#17# #479# () () #547=#((() . #f) () () #((#548=(#549=#(#1# m #482# (#550=#(#17# #478# () (#549#) #547# #512# #549#) #551=#(#17# #552=#(#6# #553=#(#6# #480# (#554=#(#17# #553# () () #547# #519# #538#) #555=#(#6# #553# (#556=#(#17# #555# () () #547# #521# #160#) #557=#(#17# #555# () (#549#) #547# #522# #549#) #(#152# #555# () () #547# #523# 1)) (#549#) #547# #520#) #552#) #558=(#549# . #559=(#560=#(#1# n #482# (#561=#(#17# #562=#(#6# #481# (#563=#(#17# #562# () () #547# #497# #67#) #561# #(#152# #562# () () #547# #499# 1)) (#560#) #547# #496#) () (#560#) #547# #498# #560#) #564=#(#17# #565=#(#6# #552# (#566=#(#17# #565# () () #547# #529# #160#) #564# #(#152# #565# () () #547# #531# 1)) #559# #547# #528#) () (#560#) #547# #530# #560#) #567=#(#17# #568=#(#6# #480# (#569=#(#17# #568# () () #547# #504# #570=#(#1# = #f (#569# #571=#(#17# #572=#(#6# #481# (#571# #573=#(#17# #572# () (#549#) #547# #493# #549#) #(#152# #572# () () #547# #494# 0)) (#549#) #547# #491#) () () #547# #492# #570#)) () #504# #f)) #567# #(#152# #568# () () #547# #506# 0)) (#560#) #547# #503#) () (#560#) #547# #505# #560#)) () #487# #f))) #547# #518#) (#574=#(#17# #552# () () #547# #526# #538#) #551# #565#) #558# #547# #525#) () (#549#) #547# #527# #549#) #557# #573#) () #486# #f) #560#) . #f) () () #14#)) #509# #538#) #554# #574#) (#483#) #484# #f)) (#481#) #t #14# #((#(lambda #537#) #(#485# #537#) . #489#) #537#) "ack" 2 #f #548#) (#572# #562# #480#) #558# #547# #490#) (#568# #479# #553#) #558# #547# #502#) (#546# #478# #(#152# #479# () () #547# #515# 1)) (#549#) #547# #508#) (#477# #550# #(#152# #478# () () #547# #513# 1)) (#549#) #547# #510#) () () #547# #511# #160#) #566# #556# #258# #266# #280# #341# #348#) () #308# #f)) #157# #(#152# #158# () #t #144# #50# 1)) #t #144# #47#) () #t #144# #49# #156#) #575=#(#17# #18# () #t #144# #42# #156#)) () #32# #f) #576=#(#1# result #21# (#577=#(#17# #19# () #t #144# #57# #576#)) () #35# #f)) . #f) () () #153#))) #46# #146#) #578=#(#17# #142# () #t #145# #27# #579=#(#1# n #21# (#580=#(#17# #141# () #t #144# #54# #579#) #578#) () #27# #f)) #158# #141#) #t #144# #45#) (#140# #580#) #t #144# #52#) () #t #144# #53# #139#)) (#122#) #123# #f)) (#120#) #t #14# #((#(lambda #138#) #(#124# #138#) . #127#) #138#) "my-try" 1 #f #469#) (#467# #119#) #t #468# #128#) (#581=#(#17# #119# () #t #468# #131# #582=#(#1# create-y #f (#581#) (#12#) #583=#(create-y #(expr create-y #f)) #f)) #118#) #t #468# #130#) (#117# #471#) #t #468# #132#) () #t #468# #133# #116#)) (#79#) #80# #f)) (#77#) #t #14# #584=#((#(lambda #115#) #(#81# #115#) . #84#) #115#) "create-x" 1 #f #418#) (#76# #391#) (#388#) #383# #584#) (#75#) (#388#) #383# #584# #f 1 #f (#384#)) (#387# #74#) (#388# #384#) #367# #91#) (#73#) (#415#) #367# #91# #f 3 #f (#380# #365# . #368#)) (#375# #419# #72#) #585=(#415# #380# #365# #369#) #367# #91#) (#71# #363#) #585# #367# #91#) (#70#) (#415# #380# #365# #369#) #367# #91# #f 1 #f (#(#1# temp #71# () () #91# #f))) (#417# #381# #366# #69#) (#415# #380# #365# . #586=(#369#)) #367# #91#) (#68# #370# #(#152# #69# () () #367# #97# 1)) #586# #367# #94#) () () #367# #95# #67#) #563# #334#) () #304# #f)) #326# #240# #540# #63#) #t #14# #((#66# #328# #244# #543# #587=#((#588=#(go #(expr go #f)) #589=#(200000 #(expr 200000 #f))) #(expr #590=(go 200000) #f))) #(expr (+ #330# #246# #545# #590#) #f))) (#62# #(#152# #63# () #t #14# #589# 200000)) #t #14# #587#) () #t #14# #588# #61#)) (#24#) #25# #f)) (#22#) #t #14# #((#(lambda #60#) #(#26# #60#) . #29#) #60#) "go" 1 #f #154#) (#147# #21#) #t #145# #30#) (#19#) #t #145# #30# "loop" 3 #f (#579# . #155#)) (#18# #142# #577#) #t #144# #39#) (#16# #575# #(#152# #18# () #t #144# #43# 0)) #t #144# #40#) () #t #144# #41# #15#)) () #41# #f) #61# #139# #425# #466# #582# #377# #361# #393# #116# #570# #538# #284# #238# #179# #160# #67# #324#) . #f) () ((compilation-strategy block) (safe #f) (arith fixnum) (standard-bindings #t)) #f) #((#(define #(expr define #f)) #((#583# . #591=(#459#)) #(expr #592=(create-y x) #f)) . #593=(#((#(let* #(expr let* #f)) #((#594=#((#409# #473#) #(expr #595=(n #475#) #f)) #596=#((#404# #411#) #(expr #597=(result #413#) #f))) #(expr #598=(#595# #597#) #f)) #442#) #(expr #599=(let* #598# #456#) #f)))) #600=#(expr (define #592# #599#) #f)) #582#) (#10#) #t #14# #((#(lambda #600#) #(#591# #600#) . #593#) #600#) "create-y" 1 #f #407#) (#9# #463#) (#165#) #405# #594#) (#8#) (#165#) #405# #594# #f 1 #f (#398#)) (#7# #395#) (#165# #398#) #401# #596#) (#5#) (#165# #398#) #401# #596# #f 1 #f (#402#)) (#164# #3#) (#165# #402# #398#) #167# #442#) (#175#) (#440#) #167# #442# #f 3 #f (#2# #356# . #168#)) (#426# #458#) () #459# #f) #356# #169# #601=#(#1# #f #t () () #f #fresult #t () () #f #f)) 10017.0)
   #0 in get-var at /tmp/r7rs-benchmarks/TR7/compiler.scm:5329 args (17.0)
   #1 in loop at /tmp/r7rs-benchmarks/TR7/compiler.scm:5966 args (((#1=#(#2=(app-tag) #3=#(#2# #4=#(#2# #5=#(#6=(tst-tag) #7=#(#8=(prc-tag) #9=#(#2# #10=#(#8# #11=#(#2# #12=#(#8# #13=#(#2# #14=#(#8# #15=#(#16=(def-tag) #f (#14#) #t #17=#(((#18=#(#19=(var-tag) > #f (#20=#(#21=(ref-tag) #22=#(#2# #23=#(#6# #24=#(#8# #25=#(#2# #26=#(#8# #27=#(#16# #f (#26#) #t #17# #((#(define #(expr define #f)) #((#28=#(go #(expr go #f)) . #29=(#30=#(n #(expr n #f)))) #(expr #31=(go n) #f)) . #32=(#33=#((#(let #(expr let #f)) #34=#(loop #(expr loop #f)) #((#((#35=#(repeat #(expr repeat #f)) #36=#(100 #(expr 100 #f))) #(expr #37=(repeat 100) #f)) #((#38=#(result #(expr result #f)) #39=#(0 #(expr 0 #f))) #(expr #40=(result 0) #f))) #(expr #41=(#37# #40#) #f)) #42=#((#(if #(expr if #f)) #43=#((#44=#(> #(expr > #f)) #45=#(repeat #(expr repeat #f)) #46=#(0 #(expr 0 #f))) #(expr #47=(> repeat 0) #f)) #48=#((#49=#(loop #(expr loop #f)) #50=#((#51=#(- #(expr - #f)) #52=#(repeat #(expr repeat #f)) #53=#(1 #(expr 1 #f))) #(expr #54=(- repeat 1) #f)) #55=#((#56=#(my-try #(expr my-try #f)) #57=#(n #(expr n #f))) #(expr #58=(my-try n) #f))) #(expr #59=(loop #54# #58#) #f)) #60=#(result #(expr result #f))) #(expr #61=(if #47# #59# result) #f))) #(expr #62=(let loop #41# #61#) #f)))) #63=#(expr (define #31# #62#) #f)) #64=#(#19# go #f (#65=#(#21# #66=#(#2# #67=#(#2# #f (#68=#(#21# #67# () #t #17# #69=#(+ #(expr + #f)) #70=#(#19# + #f (#68# #71=#(#21# #72=#(#2# #73=#(#2# #74=#(#8# #75=#(#2# #76=#(#6# #77=#(#8# #78=#(#2# #79=#(#8# #80=#(#2# #81=#(#8# #82=#(#16# #f (#81#) #t #17# #((#(define #(expr define #f)) #((#83=#(create-x #(expr create-x #f)) . #84=(#85=#(n #(expr n #f)))) #(expr #86=(create-x n) #f)) . #87=(#((#(define #(expr define #f)) #88=#(result #(expr result #f)) #89=#((#90=#(make-vector #(expr make-vector #f)) #91=#(n #(expr n #f))) #(expr #92=(make-vector n) #f))) #(expr #93=(define result #92#) #f)) #94=#((#(do #(expr do #f)) #((#((#95=#(i #(expr i #f)) #96=#(0 #(expr 0 #f)) #97=#((#98=#(+ #(expr + #f)) #99=#(i #(expr i #f)) #100=#(1 #(expr 1 #f))) #(expr #101=(+ i 1) #f))) #(expr #102=(i 0 #101#) #f))) #(expr #103=(#102#) #f)) #((#104=#((#105=#(>= #(expr >= #f)) #106=#(i #(expr i #f)) #107=#(n #(expr n #f))) #(expr #108=(>= i n) #f)) #109=#(result #(expr result #f))) #(expr #110=(#108# result) #f)) #111=#((#112=#(vector-set! #(expr vector-set! #f)) #113=#(result #(expr result #f)) #114=#(i #(expr i #f)) #115=#(i #(expr i #f))) #(expr #116=(vector-set! result i i) #f))) #(expr #117=(do #103# #110# #116#) #f)))) #118=#(expr (define #86# #93# #117#) #f)) #119=#(#19# create-x #f (#120=#(#21# #121=#(#2# #122=#(#2# #123=#(#2# #124=#(#8# #125=#(#16# #f (#124#) #t #17# #((#(define #(expr define #f)) #((#126=#(my-try #(expr my-try #f)) . #127=(#128=#(n #(expr n #f)))) #(expr #129=(my-try n) #f)) . #130=(#131=#((#132=#(vector-length #(expr vector-length #f)) #133=#((#134=#(create-y #(expr create-y #f)) #135=#((#136=#(create-x #(expr create-x #f)) #137=#(n #(expr n #f))) #(expr #138=(create-x n) #f))) #(expr #139=(create-y #138#) #f))) #(expr #140=(vector-length #139#) #f)))) #141=#(expr (define #129# #140#) #f)) #142=#(#19# my-try #f (#143=#(#21# #144=#(#2# #145=#(#2# #23# (#146=#(#21# #145# () #t #147=#((() . #f) () () #148=#(((#149=#(#19# loop #150=#(#8# #25# (#151=#(#2# #150# (#152=#(#21# #151# () #t #148# #33# #149#) #153=#(#21# #151# () #t #148# #30# #154=#(#19# n #26# (#153#) () #30# #f)) #(#155=(cst-tag) #151# () #t #156=#((() . #f) () () #((#157=(#154#) . #f) () () #17#)) #36# 100) #(#155# #151# () #t #156# #39# 0)) #t #148# #33#)) #t #148# #33# #f 1 #f (#149#)) (#152# #146#) () #34# #f)) . #f) () () #((#158=(#159=#(#19# repeat #24# (#160=#(#21# #161=#(#2# #145# (#162=#(#21# #161# () #t #147# #51# #163=#(#19# - #f (#162# #164=#(#21# #165=#(#2# #166=#(#2# #167=#(#8# #9# (#166#) (#168=#(#19# x #14# (#169=#(#21# #166# () (#168#) #170=#((#171=(#172=#(#19# i #7# (#173=#(#21# #174=#(#2# #175=#(#2# #176=#(#8# #4# (#175#) (#177=#(#19# loop #167# (#178=#(#21# #166# () (#177#) #170# #179=#((#(do #(expr do #f)) #((#((#180=#(i #(expr i #f)) #181=#((#182=#(- #(expr - #f)) #183=#(n #(expr n #f)) #184=#(1 #(expr 1 #f))) #(expr #185=(- n 1) #f)) #186=#((#187=#(- #(expr - #f)) #188=#(i #(expr i #f)) #189=#(1 #(expr 1 #f))) #(expr #190=(- i 1) #f))) #(expr #191=(i #185# #190#) #f))) #(expr #192=(#191#) #f)) #((#193=#((#194=#(< #(expr < #f)) #195=#(i #(expr i #f)) #196=#(0 #(expr 0 #f))) #(expr #197=(< i 0) #f)) #198=#(result #(expr result #f))) #(expr #199=(#197# result) #f)) #200=#((#201=#(vector-set! #(expr vector-set! #f)) #202=#(result #(expr result #f)) #203=#(i #(expr i #f)) #204=#((#205=#(vector-ref #(expr vector-ref #f)) #206=#(x #(expr x #f)) #207=#(i #(expr i #f))) #(expr #208=(vector-ref x i) #f))) #(expr #209=(vector-set! result i #208#) #f))) #(expr #210=(do #192# #199# #209#) #f)) #177#) #211=#(#21# #175# () (#177#) #170# #179# #177#)) () #179# #f) #212=#(#19# x #7# (#213=#(#21# #1# () (#212#) #170# #206# #212#) #214=#(#21# #175# () (#212#) #170# #215=#(x #(expr x #f)) #212#)) () #215# #f) #216=#(#19# result #7# (#217=#(#21# #3# () (#216#) #170# #202# #216#) #218=#(#21# #175# () (#216#) #170# #219=#(result #(expr result #f)) #216#) #220=#(#21# #5# () (#216#) #170# #198# #216#)) () #219# #f) #172#) #170# #179# #f 1 #f (#(#19# temp #176# () () #179# #f))) (#211# #214# #218# #174#) #221=(#177# #212# #216# . #222=(#172#)) #170# #179#) (#223=#(#21# #174# () () #170# #187# #163#) #173# #(#155# #174# () () #170# #189# 1)) #222# #170# #186#) () (#172#) #170# #188# #172#) #224=#(#21# #1# () #225=(#172#) #170# #207# #172#) #226=#(#21# #3# () (#172#) #170# #203# #172#) #227=#(#21# #228=#(#2# #5# (#229=#(#21# #228# () () #170# #194# #230=#(#19# < #f (#229# #231=#(#21# #232=#(#2# #233=#(#2# #234=#(#6# #235=#(#8# #236=#(#16# #f (#235#) #t #17# #((#(define #(expr define #f)) #((#237=#(tak #(expr tak #f)) . #238=(#239=#(x #(expr x #f)) #240=#(y #(expr y #f)) #241=#(z #(expr z #f)))) #(expr #242=(tak x y z) #f)) . #243=(#244=#((#(if #(expr if #f)) #245=#((#246=#(not #(expr not #f)) #247=#((#248=#(< #(expr < #f)) #249=#(y #(expr y #f)) #250=#(x #(expr x #f))) #(expr #251=(< y x) #f))) #(expr #252=(not #251#) #f)) #253=#(z #(expr z #f)) #254=#((#255=#(tak #(expr tak #f)) #256=#((#257=#(tak #(expr tak #f)) #258=#((#259=#(- #(expr - #f)) #260=#(x #(expr x #f)) #261=#(1 #(expr 1 #f))) #(expr #262=(- x 1) #f)) #263=#(y #(expr y #f)) #264=#(z #(expr z #f))) #(expr #265=(tak #262# y z) #f)) #266=#((#267=#(tak #(expr tak #f)) #268=#((#269=#(- #(expr - #f)) #270=#(y #(expr y #f)) #271=#(1 #(expr 1 #f))) #(expr #272=(- y 1) #f)) #273=#(z #(expr z #f)) #274=#(x #(expr x #f))) #(expr #275=(tak #272# z x) #f)) #276=#((#277=#(tak #(expr tak #f)) #278=#((#279=#(- #(expr - #f)) #280=#(z #(expr z #f)) #281=#(1 #(expr 1 #f))) #(expr #282=(- z 1) #f)) #283=#(x #(expr x #f)) #284=#(y #(expr y #f))) #(expr #285=(tak #282# x y) #f))) #(expr #286=(tak #265# #275# #285#) #f))) #(expr #287=(if #252# z #286#) #f)))) #288=#(expr (define #242# #287#) #f)) #289=#(#19# tak #f (#290=#(#21# #291=#(#2# #67# (#290# #(#155# #291# () #t #17# #292=#(18 #(expr 18 #f)) 18) #(#155# #291# () #t #17# #293=#(12 #(expr 12 #f)) 12) #(#155# #291# () #t #17# #294=#(6 #(expr 6 #f)) 6)) #t #17# #295=#((#296=#(tak #(expr tak #f)) #292# #293# #294#) #(expr #297=(tak 18 12 6) #f))) () #t #17# #296# #289#) #298=#(#21# #299=#(#2# #234# (#298# #300=#(#2# #299# (#301=#(#21# #300# () () #302=#((() . #f) () () #((#303=(#304=#(#19# x #235# (#305=#(#21# #306=#(#2# #299# (#307=#(#21# #306# () () #302# #277# #289#) #308=#(#2# #306# (#309=#(#21# #308# () () #302# #279# #163#) #310=#(#21# #308# () (#311=#(#19# z #235# (#312=#(#21# #234# () (#311#) #302# #253# #311#) #310# #313=#(#21# #314=#(#2# #299# (#315=#(#21# #314# () () #302# #267# #289#) #316=#(#2# #314# (#317=#(#21# #316# () () #302# #269# #163#) #318=#(#21# #316# () (#319=#(#19# y #235# (#320=#(#21# #306# () #321=(#319#) #302# #284# #319#) #318# #322=#(#21# #300# () (#319#) #302# #263# #319#) #323=#(#21# #232# () (#319#) #302# #249# #319#)) () #240# #f)) #302# #270# #319#) #(#155# #316# () () #302# #271# 1)) (#319#) #302# #268#) #313# #324=#(#21# #314# () #325=(#304#) #302# #274# #304#)) (#319# #311# . #325#) #302# #266#) () (#311#) #302# #273# #311#) #326=#(#21# #300# () #327=(#311#) #302# #264# #311#)) () #241# #f)) #302# #280# #311#) #(#155# #308# () () #302# #281# 1)) (#311#) #302# #278#) #305# #320#) #328=(#311# #304# . #321#) #302# #276#) () (#304#) #302# #283# #304#) #324# #329=#(#21# #330=#(#2# #300# (#331=#(#21# #330# () () #302# #259# #163#) #329# #(#155# #330# () () #302# #261# 1)) (#304#) #302# #258#) () (#304#) #302# #260# #304#) #332=#(#21# #232# () #333=(#304#) #302# #250# #304#)) () #239# #f) #319# #311#) . #f) () () #17#)) #257# #289#) #330# #322# #326#) (#304# #319# . #327#) #302# #256#) #314# #306#) #328# #302# #254#) () () #302# #255# #289#) #307# #315# #301#) (#236#) #237# #f)) (#234#) #t #17# #((#(lambda #288#) #(#238# #288#) . #243#) #288#) "tak" 3 #f #303#) (#233# #312# #299#) #328# #302# #244#) (#334=#(#21# #233# () () #302# #246# #335=#(#19# not #f (#334#) () #246# #f)) #232#) #336=(#319# . #333#) #302# #245#) (#231# #323# #332#) #336# #302# #247#) () () #302# #248# #230#) #337=#(#21# #338=#(#2# #339=#(#6# #340=#(#8# #341=#(#16# #f (#340#) #t #17# #((#(define #(expr define #f)) #((#342=#(fib #(expr fib #f)) . #343=(#344=#(n #(expr n #f)))) #(expr #345=(fib n) #f)) . #346=(#347=#((#(if #(expr if #f)) #348=#((#349=#(< #(expr < #f)) #350=#(n #(expr n #f)) #351=#(2 #(expr 2 #f))) #(expr #352=(< n 2) #f)) #353=#(n #(expr n #f)) #354=#((#355=#(+ #(expr + #f)) #356=#((#357=#(fib #(expr fib #f)) #358=#((#359=#(- #(expr - #f)) #360=#(n #(expr n #f)) #361=#(1 #(expr 1 #f))) #(expr #362=(- n 1) #f))) #(expr #363=(fib #362#) #f)) #364=#((#365=#(fib #(expr fib #f)) #366=#((#367=#(- #(expr - #f)) #368=#(n #(expr n #f)) #369=#(2 #(expr 2 #f))) #(expr #370=(- n 2) #f))) #(expr #371=(fib #370#) #f))) #(expr #372=(+ #363# #371#) #f))) #(expr #373=(if #352# n #372#) #f)))) #374=#(expr (define #345# #373#) #f)) #375=#(#19# fib #f (#376=#(#21# #377=#(#2# #67# (#376# #(#155# #377# () #t #17# #378=#(20 #(expr 20 #f)) 20)) #t #17# #379=#((#380=#(fib #(expr fib #f)) #378#) #(expr #381=(fib 20) #f))) () #t #17# #380# #375#) #382=#(#21# #383=#(#2# #384=#(#2# #339# (#385=#(#21# #384# () () #386=#((() . #f) () () #((#387=(#388=#(#19# n #340# (#389=#(#21# #339# () (#388#) #386# #353# #388#) #390=#(#21# #391=#(#2# #383# (#392=#(#21# #391# () () #386# #367# #163#) #390# #(#155# #391# () () #386# #369# 2)) #393=(#388#) #386# #366#) () (#388#) #386# #368# #388#) #394=#(#21# #395=#(#2# #396=#(#2# #384# (#397=#(#21# #396# () () #386# #357# #375#) #395#) #398=(#388#) #386# #356#) (#399=#(#21# #395# () () #386# #359# #163#) #394# #(#155# #395# () () #386# #361# 1)) #398# #386# #358#) () (#388#) #386# #360# #388#) #400=#(#21# #338# () (#388#) #386# #350# #388#)) () #344# #f)) . #f) () () #17#)) #355# #70#) #396# #383#) #393# #386# #354#) (#382# #391#) #393# #386# #364#) () () #386# #365# #375#) #397#) (#341#) #342# #f)) (#339#) #t #17# #((#(lambda #374#) #(#343# #374#) . #346#) #374#) "fib" 1 #f #387#) (#338# #389# #384#) #393# #386# #347#) (#337# #400# #(#155# #338# () () #386# #351# 2)) (#388#) #386# #348#) () () #386# #349# #230#)) () #349# #f)) #227# #(#155# #228# () () #170# #196# 0)) (#172#) #170# #193#) () (#172#) #170# #195# #172#)) () #180# #f)) . #f) () () #401=#((() . #f) () () #402=#(((#403=#(#19# result #10# (#404=#(#21# #166# () (#403#) #170# #219# #403#)) () #219# #f)) . #f) () () #405=#(((#406=#(#19# n #12# (#407=#(#21# #165# () (#406#) #401# #183# #406#) #408=#(#21# #409=#(#2# #11# (#410=#(#21# #409# () () #405# #411=#(make-vector #(expr make-vector #f)) #412=#(#19# make-vector #f (#410# #413=#(#21# #414=#(#2# #80# (#413# #415=#(#21# #414# () #416=(#417=#(#19# n #81# (#418=#(#21# #419=#(#2# #420=#(#8# #78# (#419#) (#417# #421=#(#19# result #79# (#422=#(#21# #419# () (#421#) #423=#((#424=(#425=#(#19# i #77# (#426=#(#21# #72# () (#425#) #423# #99# #425#) #427=#(#21# #428=#(#2# #75# (#429=#(#21# #428# () () #423# #112# #430=#(#19# vector-set! #f (#431=#(#21# #3# () () #170# #201# #430#) #429#) () #112# #f)) #432=#(#21# #428# () (#433=#(#19# result #77# (#432# #434=#(#21# #73# () (#433#) #423# #88# #433#) #435=#(#21# #76# () (#433#) #423# #109# #433#)) () #88# #f)) #423# #113# #433#) #436=#(#21# #428# () (#425#) #423# #114# #425#) #427#) (#433# . #437=(#425#)) #423# #111#) () #437# #423# #115# #425#) #436# #438=#(#21# #439=#(#2# #76# (#440=#(#21# #439# () () #423# #105# #441=#(#19# >= #f (#440#) () #105# #f)) #438# #442=#(#21# #439# () #443=(#444=#(#19# n #77# (#445=#(#21# #73# () (#444#) #423# #85# #444#) #442#) () #85# #f)) #423# #107# #444#)) (#425# . #443#) #423# #104#) () (#425#) #423# #106# #425#)) () #95# #f)) . #f) () () #446=#((() . #f) () () #447=#(((#421#) . #f) () () #((#448=(#417#) . #f) () () #17#)))) #88# #421#)) () #88# #f)) #423# #94# #f 1 #f (#449=#(#19# loop #420# (#450=#(#21# #419# () (#449#) #423# #94# #449#) #451=#(#21# #73# () (#449#) #423# #94# #449#)) () #94# #f))) (#450# #418# #422# #(#155# #419# () () #446# #96# 0)) (#449# #417# #421#) #423# #94#) () (#417#) #423# #85# #417#) #415#) () #85# #f)) #447# #91# #417#)) #416# #447# #89#) () () #447# #90# #412#)) () #90# #f)) #408#) #452=(#406#) #405# #453=#((#411# #454=#(n #(expr n #f))) #(expr #455=(make-vector n) #f))) () #452# #405# #454# #406#)) () #456=#(n #(expr n #f)) #f)) . #f) () () #457=#((() . #f) () () #((#458=(#168#) . #f) () () #17#)))))) #215# #168#) #459=#(#21# #460=#(#2# #13# (#461=#(#21# #460# () () #457# #462=#(vector-length #(expr vector-length #f)) #463=#(#19# vector-length #f (#464=#(#21# #123# () #t #465=#((() . #f) () () #((#466=(#467=#(#19# n #124# (#468=#(#21# #121# () #t #465# #137# #467#)) () #128# #f)) . #f) () () #17#)) #132# #463#) #461#) () #462# #f)) #459#) #469=(#168#) #457# #470=#((#462# #471=#(x #(expr x #f))) #(expr #472=(vector-length x) #f))) () #469# #457# #471# #168#)) () #215# #f) #403# #406#) #170# #179# #f 1 #f (#177#)) (#178# #169# #404# #165#) (#177# #168# #403# . #473=(#406#)) #170# #179#) (#164# #407# #(#155# #165# () () #401# #184# 1)) #473# #401# #181#) () () #401# #182# #163#) #223# #474=#(#21# #475=#(#2# #476=#(#2# #477=#(#6# #478=#(#6# #479=#(#8# #480=#(#16# #f (#479#) #t #17# #((#(define #(expr define #f)) #((#481=#(ack #(expr ack #f)) . #482=(#483=#(m #(expr m #f)) #484=#(n #(expr n #f)))) #(expr #485=(ack m n) #f)) . #486=(#((#(cond #(expr cond #f)) #487=#((#488=#((#489=#(= #(expr = #f)) #490=#(m #(expr m #f)) #491=#(0 #(expr 0 #f))) #(expr #492=(= m 0) #f)) #493=#((#494=#(+ #(expr + #f)) #495=#(n #(expr n #f)) #496=#(1 #(expr 1 #f))) #(expr #497=(+ n 1) #f))) #(expr #498=(#492# #497#) #f)) #499=#((#500=#((#501=#(= #(expr = #f)) #502=#(n #(expr n #f)) #503=#(0 #(expr 0 #f))) #(expr #504=(= n 0) #f)) #505=#((#506=#(ack #(expr ack #f)) #507=#((#508=#(- #(expr - #f)) #509=#(m #(expr m #f)) #510=#(1 #(expr 1 #f))) #(expr #511=(- m 1) #f)) #512=#(1 #(expr 1 #f))) #(expr #513=(ack #511# 1) #f))) #(expr #514=(#504# #513#) #f)) #((#(else #(expr else #f)) #515=#((#516=#(ack #(expr ack #f)) #517=#((#518=#(- #(expr - #f)) #519=#(m #(expr m #f)) #520=#(1 #(expr 1 #f))) #(expr #521=(- m 1) #f)) #522=#((#523=#(ack #(expr ack #f)) #524=#(m #(expr m #f)) #525=#((#526=#(- #(expr - #f)) #527=#(n #(expr n #f)) #528=#(1 #(expr 1 #f))) #(expr #529=(- n 1) #f))) #(expr #530=(ack m #529#) #f))) #(expr #531=(ack #521# #530#) #f))) #(expr #532=(else #531#) #f))) #(expr #533=(cond #498# #514# #532#) #f)))) #534=#(expr (define #485# #533#) #f)) #535=#(#19# ack #f (#536=#(#21# #537=#(#2# #67# (#536# #(#155# #537# () #t #17# #538=#(3 #(expr 3 #f)) 3) #(#155# #537# () #t #17# #539=#(9 #(expr 9 #f)) 9)) #t #17# #540=#((#541=#(ack #(expr ack #f)) #538# #539#) #(expr #542=(ack 3 9) #f))) () #t #17# #541# #535#) #543=#(#21# #476# () () #544=#((() . #f) () () #((#545=(#546=#(#19# m #479# (#547=#(#21# #475# () (#546#) #544# #509# #546#) #548=#(#21# #549=#(#2# #550=#(#2# #477# (#551=#(#21# #550# () () #544# #516# #535#) #552=#(#2# #550# (#553=#(#21# #552# () () #544# #518# #163#) #554=#(#21# #552# () (#546#) #544# #519# #546#) #(#155# #552# () () #544# #520# 1)) (#546#) #544# #517#) #549#) #555=(#546# . #556=(#557=#(#19# n #479# (#558=#(#21# #559=#(#2# #478# (#560=#(#21# #559# () () #544# #494# #70#) #558# #(#155# #559# () () #544# #496# 1)) (#557#) #544# #493#) () (#557#) #544# #495# #557#) #561=#(#21# #562=#(#2# #549# (#563=#(#21# #562# () () #544# #526# #163#) #561# #(#155# #562# () () #544# #528# 1)) #556# #544# #525#) () (#557#) #544# #527# #557#) #564=#(#21# #565=#(#2# #477# (#566=#(#21# #565# () () #544# #501# #567=#(#19# = #f (#566# #568=#(#21# #569=#(#2# #478# (#568# #570=#(#21# #569# () (#546#) #544# #490# #546#) #(#155# #569# () () #544# #491# 0)) (#546#) #544# #488#) () () #544# #489# #567#)) () #501# #f)) #564# #(#155# #565# () () #544# #503# 0)) (#557#) #544# #500#) () (#557#) #544# #502# #557#)) () #484# #f))) #544# #515#) (#571=#(#21# #549# () () #544# #523# #535#) #548# #562#) #555# #544# #522#) () (#546#) #544# #524# #546#) #554# #570#) () #483# #f) #557#) . #f) () () #17#)) #506# #535#) #551# #571#) (#480#) #481# #f)) (#478#) #t #17# #((#(lambda #534#) #(#482# #534#) . #486#) #534#) "ack" 2 #f #545#) (#569# #559# #477#) #555# #544# #487#) (#565# #476# #550#) #555# #544# #499#) (#543# #475# #(#155# #476# () () #544# #512# 1)) (#546#) #544# #505#) (#474# #547# #(#155# #475# () () #544# #510# 1)) (#546#) #544# #507#) () () #544# #508# #163#) #563# #553# #309# #317# #331# #392# #399#) () #359# #f)) #160# #(#155# #161# () #t #147# #53# 1)) #t #147# #50#) () #t #147# #52# #159#) #572=#(#21# #22# () #t #147# #45# #159#)) () #35# #f) #573=#(#19# result #24# (#574=#(#21# #23# () #t #147# #60# #573#)) () #38# #f)) . #f) () () #156#))) #49# #149#) #575=#(#21# #145# () #t #148# #30# #576=#(#19# n #24# (#577=#(#21# #144# () #t #147# #57# #576#) #575#) () #30# #f)) #161# #144#) #t #147# #48#) (#143# #577#) #t #147# #55#) () #t #147# #56# #142#)) (#125#) #126# #f)) (#123#) #t #17# #((#(lambda #141#) #(#127# #141#) . #130#) #141#) "my-try" 1 #f #466#) (#464# #122#) #t #465# #131#) (#578=#(#21# #122# () #t #465# #134# #579=#(#19# create-y #f (#578#) (#15#) #580=#(create-y #(expr create-y #f)) #f)) #121#) #t #465# #133#) (#120# #468#) #t #465# #135#) () #t #465# #136# #119#)) (#82#) #83# #f)) (#80#) #t #17# #581=#((#(lambda #118#) #(#84# #118#) . #87#) #118#) "create-x" 1 #f #448#) (#79# #414#) (#417#) #447# #581#) (#78#) (#417#) #447# #581# #f 1 #f (#421#)) (#420# #77#) (#417# #421#) #423# #94#) (#76#) (#449#) #423# #94# #f 3 #f (#444# #433# . #424#)) (#439# #435# #75#) #582=(#449# #444# #433# #425#) #423# #94#) (#74# #428#) #582# #423# #94#) (#73#) (#449# #444# #433# #425#) #423# #94# #f 1 #f (#(#19# temp #74# () () #94# #f))) (#451# #445# #434# #72#) (#449# #444# #433# . #583=(#425#)) #423# #94#) (#71# #426# #(#155# #72# () () #423# #100# 1)) #583# #423# #97#) () () #423# #98# #70#) #560# #385#) () #355# #f)) #377# #291# #537# #66#) #t #17# #((#69# #379# #295# #540# #584=#((#585=#(go #(expr go #f)) #586=#(200000 #(expr 200000 #f))) #(expr #587=(go 200000) #f))) #(expr (+ #381# #297# #542# #587#) #f))) (#65# #(#155# #66# () #t #17# #586# 200000)) #t #17# #584#) () #t #17# #585# #64#)) (#27#) #28# #f)) (#25#) #t #17# #((#(lambda #63#) #(#29# #63#) . #32#) #63#) "go" 1 #f #157#) (#150# #24#) #t #148# #33#) (#23#) #t #148# #33# "loop" 3 #f (#576# . #158#)) (#22# #145# #574#) #t #147# #42#) (#20# #572# #(#155# #22# () #t #147# #46# 0)) #t #147# #43#) () #t #147# #44# #18#)) () #44# #f) #64# #142# #588=#(#19# vector-ref #f (#589=#(#21# #1# () () #170# #205# #588#)) () #205# #f) #463# #579# #441# #430# #412# #119# #567# #535# #335# #289# #230# #163# #70# #375#) . #f) () ((compilation-strategy block) (safe #f) (arith fixnum) (standard-bindings #t)) #f) #((#(define #(expr define #f)) #((#580# . #590=(#215#)) #(expr #591=(create-y x) #f)) . #592=(#((#(let* #(expr let* #f)) #((#593=#((#456# #470#) #(expr #594=(n #472#) #f)) #595=#((#219# #453#) #(expr #596=(result #455#) #f))) #(expr #597=(#594# #596#) #f)) #179#) #(expr #598=(let* #597# #210#) #f)))) #599=#(expr (define #591# #598#) #f)) #579#) (#13#) #t #17# #((#(lambda #599#) #(#590# #599#) . #592#) #599#) "create-y" 1 #f #458#) (#12# #460#) (#168#) #405# #593#) (#11#) (#168#) #405# #593# #f 1 #f (#406#)) (#10# #409#) (#168# #406#) #402# #595#) (#9#) (#168# #406#) #402# #595# #f 1 #f (#403#)) (#167# #7#) (#168# #403# #406#) #170# #179#) (#5#) (#177#) #170# #179# #f 3 #f (#212# #216# . #171#)) (#228# #220# #4#) #600=(#177# #216# #212# #172#) #170# #179#) (#176# #3#) #600# #170# #179#) (#431# #217# #226# #1#) (#216# . #601=(#212# . #225#)) #170# #200#) (#589# #213# #224#) #601# #170# #204#) . 2) (#226# . 1) (#217# . 0)) (#(#19# ret #t () () #f #f) . #221#))
   #2 in loop2 at /tmp/r7rs-benchmarks/TR7/compiler.scm:6406 args ((#1=#(#2=(var-tag) temp #3=#(#4=(prc-tag) #5=#(#6=(app-tag) #7=#(#8=(tst-tag) #9=#(#4# #10=#(#6# #11=#(#4# #12=#(#6# #13=#(#4# #14=#(#6# #15=#(#4# #16=#(#17=(def-tag) #f (#15#) #t #18=#(((#19=#(#2# > #f (#20=#(#21=(ref-tag) #22=#(#6# #23=#(#8# #24=#(#4# #25=#(#6# #26=#(#4# #27=#(#17# #f (#26#) #t #18# #((#(define #(expr define #f)) #((#28=#(go #(expr go #f)) . #29=(#30=#(n #(expr n #f)))) #(expr #31=(go n) #f)) . #32=(#33=#((#(let #(expr let #f)) #34=#(loop #(expr loop #f)) #((#((#35=#(repeat #(expr repeat #f)) #36=#(100 #(expr 100 #f))) #(expr #37=(repeat 100) #f)) #((#38=#(result #(expr result #f)) #39=#(0 #(expr 0 #f))) #(expr #40=(result 0) #f))) #(expr #41=(#37# #40#) #f)) #42=#((#(if #(expr if #f)) #43=#((#44=#(> #(expr > #f)) #45=#(repeat #(expr repeat #f)) #46=#(0 #(expr 0 #f))) #(expr #47=(> repeat 0) #f)) #48=#((#49=#(loop #(expr loop #f)) #50=#((#51=#(- #(expr - #f)) #52=#(repeat #(expr repeat #f)) #53=#(1 #(expr 1 #f))) #(expr #54=(- repeat 1) #f)) #55=#((#56=#(my-try #(expr my-try #f)) #57=#(n #(expr n #f))) #(expr #58=(my-try n) #f))) #(expr #59=(loop #54# #58#) #f)) #60=#(result #(expr result #f))) #(expr #61=(if #47# #59# result) #f))) #(expr #62=(let loop #41# #61#) #f)))) #63=#(expr (define #31# #62#) #f)) #64=#(#2# go #f (#65=#(#21# #66=#(#6# #67=#(#6# #f (#68=#(#21# #67# () #t #18# #69=#(+ #(expr + #f)) #70=#(#2# + #f (#68# #71=#(#21# #72=#(#6# #73=#(#6# #74=#(#4# #75=#(#6# #76=#(#8# #77=#(#4# #78=#(#6# #79=#(#4# #80=#(#6# #81=#(#4# #82=#(#17# #f (#81#) #t #18# #((#(define #(expr define #f)) #((#83=#(create-x #(expr create-x #f)) . #84=(#85=#(n #(expr n #f)))) #(expr #86=(create-x n) #f)) . #87=(#((#(define #(expr define #f)) #88=#(result #(expr result #f)) #89=#((#90=#(make-vector #(expr make-vector #f)) #91=#(n #(expr n #f))) #(expr #92=(make-vector n) #f))) #(expr #93=(define result #92#) #f)) #94=#((#(do #(expr do #f)) #((#((#95=#(i #(expr i #f)) #96=#(0 #(expr 0 #f)) #97=#((#98=#(+ #(expr + #f)) #99=#(i #(expr i #f)) #100=#(1 #(expr 1 #f))) #(expr #101=(+ i 1) #f))) #(expr #102=(i 0 #101#) #f))) #(expr #103=(#102#) #f)) #((#104=#((#105=#(>= #(expr >= #f)) #106=#(i #(expr i #f)) #107=#(n #(expr n #f))) #(expr #108=(>= i n) #f)) #109=#(result #(expr result #f))) #(expr #110=(#108# result) #f)) #111=#((#112=#(vector-set! #(expr vector-set! #f)) #113=#(result #(expr result #f)) #114=#(i #(expr i #f)) #115=#(i #(expr i #f))) #(expr #116=(vector-set! result i i) #f))) #(expr #117=(do #103# #110# #116#) #f)))) #118=#(expr (define #86# #93# #117#) #f)) #119=#(#2# create-x #f (#120=#(#21# #121=#(#6# #122=#(#6# #123=#(#6# #124=#(#4# #125=#(#17# #f (#124#) #t #18# #((#(define #(expr define #f)) #((#126=#(my-try #(expr my-try #f)) . #127=(#128=#(n #(expr n #f)))) #(expr #129=(my-try n) #f)) . #130=(#131=#((#132=#(vector-length #(expr vector-length #f)) #133=#((#134=#(create-y #(expr create-y #f)) #135=#((#136=#(create-x #(expr create-x #f)) #137=#(n #(expr n #f))) #(expr #138=(create-x n) #f))) #(expr #139=(create-y #138#) #f))) #(expr #140=(vector-length #139#) #f)))) #141=#(expr (define #129# #140#) #f)) #142=#(#2# my-try #f (#143=#(#21# #144=#(#6# #145=#(#6# #23# (#146=#(#21# #145# () #t #147=#((() . #f) () () #148=#(((#149=#(#2# loop #150=#(#4# #25# (#151=#(#6# #150# (#152=#(#21# #151# () #t #148# #33# #149#) #153=#(#21# #151# () #t #148# #30# #154=#(#2# n #26# (#153#) () #30# #f)) #(#155=(cst-tag) #151# () #t #156=#((() . #f) () () #((#157=(#154#) . #f) () () #18#)) #36# 100) #(#155# #151# () #t #156# #39# 0)) #t #148# #33#)) #t #148# #33# #f 1 #f (#149#)) (#152# #146#) () #34# #f)) . #f) () () #((#158=(#159=#(#2# repeat #24# (#160=#(#21# #161=#(#6# #145# (#162=#(#21# #161# () #t #147# #51# #163=#(#2# - #f (#162# #164=#(#21# #165=#(#6# #166=#(#6# #167=#(#4# #10# (#166#) (#168=#(#2# x #15# (#169=#(#21# #166# () (#168#) #170=#((#171=(#172=#(#2# i #9# (#173=#(#21# #174=#(#6# #175=#(#6# #3# (#176=#(#21# #175# () (#177=#(#2# loop #167# (#178=#(#21# #166# () (#177#) #170# #179=#((#(do #(expr do #f)) #((#((#180=#(i #(expr i #f)) #181=#((#182=#(- #(expr - #f)) #183=#(n #(expr n #f)) #184=#(1 #(expr 1 #f))) #(expr #185=(- n 1) #f)) #186=#((#187=#(- #(expr - #f)) #188=#(i #(expr i #f)) #189=#(1 #(expr 1 #f))) #(expr #190=(- i 1) #f))) #(expr #191=(i #185# #190#) #f))) #(expr #192=(#191#) #f)) #((#193=#((#194=#(< #(expr < #f)) #195=#(i #(expr i #f)) #196=#(0 #(expr 0 #f))) #(expr #197=(< i 0) #f)) #198=#(result #(expr result #f))) #(expr #199=(#197# result) #f)) #200=#((#201=#(vector-set! #(expr vector-set! #f)) #202=#(result #(expr result #f)) #203=#(i #(expr i #f)) #204=#((#205=#(vector-ref #(expr vector-ref #f)) #206=#(x #(expr x #f)) #207=#(i #(expr i #f))) #(expr #208=(vector-ref x i) #f))) #(expr #209=(vector-set! result i #208#) #f))) #(expr #210=(do #192# #199# #209#) #f)) #177#) #176#) () #179# #f)) #170# #179# #177#) #211=#(#21# #175# () (#212=#(#2# x #9# (#213=#(#21# #214=#(#6# #215=#(#6# #5# (#216=#(#21# #215# () () #170# #201# #217=#(#2# vector-set! #f (#216# #218=#(#21# #219=#(#6# #75# (#218# #220=#(#21# #219# () (#221=#(#2# result #77# (#220# #222=#(#21# #73# () (#221#) #223=#((#224=(#225=#(#2# i #77# (#226=#(#21# #72# () (#225#) #223# #99# #225#) #227=#(#21# #219# () #228=(#225#) #223# #115# #225#) #229=#(#21# #219# () (#225#) #223# #114# #225#) #230=#(#21# #231=#(#6# #76# (#232=#(#21# #231# () () #223# #105# #233=#(#2# >= #f (#232#) () #105# #f)) #230# #234=#(#21# #231# () #235=(#236=#(#2# n #77# (#237=#(#21# #73# () (#236#) #223# #85# #236#) #234#) () #85# #f)) #223# #107# #236#)) (#225# . #235#) #223# #104#) () (#225#) #223# #106# #225#)) () #95# #f)) . #f) () () #238=#((() . #f) () () #239=#(((#240=#(#2# result #79# (#241=#(#21# #242=#(#6# #243=#(#4# #78# (#242#) (#244=#(#2# n #81# (#245=#(#21# #242# () (#244#) #223# #85# #244#) #246=#(#21# #247=#(#6# #80# (#248=#(#21# #247# () () #239# #90# #249=#(#2# make-vector #f (#250=#(#21# #251=#(#6# #12# (#250# #252=#(#21# #251# () #253=(#254=#(#2# n #13# (#255=#(#21# #165# () (#254#) #256=#((() . #f) () () #257=#(((#258=#(#2# result #11# (#259=#(#21# #166# () (#258#) #170# #260=#(result #(expr result #f)) #258#)) () #260# #f)) . #f) () () #261=#(((#254#) . #f) () () #262=#((() . #f) () () #((#263=(#168#) . #f) () () #18#))))) #183# #254#) #252#) () #264=#(n #(expr n #f)) #f)) #261# #265=#(n #(expr n #f)) #254#)) #253# #261# #266=#((#267=#(make-vector #(expr make-vector #f)) #265#) #(expr #268=(make-vector n) #f))) () () #261# #267# #249#) #248#) () #90# #f)) #246#) #269=(#244#) #239# #89#) () #269# #239# #91# #244#)) () #85# #f) #240#) #223# #94# #f 1 #f (#270=#(#2# loop #243# (#271=#(#21# #242# () (#270#) #223# #94# #270#) #272=#(#21# #73# () (#270#) #223# #94# #270#)) () #94# #f))) (#271# #245# #241# #(#155# #242# () () #238# #96# 0)) (#270# #244# #240#) #223# #94#) () (#240#) #223# #88# #240#)) () #88# #f)) . #f) () () #((#273=(#244#) . #f) () () #18#)))) #88# #221#) #274=#(#21# #76# () (#221#) #223# #109# #221#)) () #88# #f)) #223# #113# #221#) #229# #227#) (#221# . #228#) #223# #111#) () () #223# #112# #217#)) () #112# #f)) #275=#(#21# #215# () (#276=#(#2# result #9# (#275# #277=#(#21# #175# () (#276#) #170# #260# #276#) #278=#(#21# #7# () (#276#) #170# #198# #276#)) () #260# #f)) #170# #202# #276#) #279=#(#21# #215# () (#172#) #170# #203# #172#) #214#) (#276# . #280=(#212# . #281=(#172#))) #170# #200#) (#282=#(#21# #214# () () #170# #205# #283=#(#2# vector-ref #f (#282#) () #205# #f)) #213# #284=#(#21# #214# () #281# #170# #207# #172#)) #280# #170# #204#) () (#212#) #170# #206# #212#) #211#) () #285=#(x #(expr x #f)) #f)) #170# #285# #212#) #277# #174#) (#177# #212# #276# . #286=(#172#)) #170# #179#) (#287=#(#21# #174# () () #170# #187# #163#) #173# #(#155# #174# () () #170# #189# 1)) #286# #170# #186#) () (#172#) #170# #188# #172#) #284# #279# #288=#(#21# #289=#(#6# #7# (#290=#(#21# #289# () () #170# #194# #291=#(#2# < #f (#290# #292=#(#21# #293=#(#6# #294=#(#6# #295=#(#8# #296=#(#4# #297=#(#17# #f (#296#) #t #18# #((#(define #(expr define #f)) #((#298=#(tak #(expr tak #f)) . #299=(#300=#(x #(expr x #f)) #301=#(y #(expr y #f)) #302=#(z #(expr z #f)))) #(expr #303=(tak x y z) #f)) . #304=(#305=#((#(if #(expr if #f)) #306=#((#307=#(not #(expr not #f)) #308=#((#309=#(< #(expr < #f)) #310=#(y #(expr y #f)) #311=#(x #(expr x #f))) #(expr #312=(< y x) #f))) #(expr #313=(not #312#) #f)) #314=#(z #(expr z #f)) #315=#((#316=#(tak #(expr tak #f)) #317=#((#318=#(tak #(expr tak #f)) #319=#((#320=#(- #(expr - #f)) #321=#(x #(expr x #f)) #322=#(1 #(expr 1 #f))) #(expr #323=(- x 1) #f)) #324=#(y #(expr y #f)) #325=#(z #(expr z #f))) #(expr #326=(tak #323# y z) #f)) #327=#((#328=#(tak #(expr tak #f)) #329=#((#330=#(- #(expr - #f)) #331=#(y #(expr y #f)) #332=#(1 #(expr 1 #f))) #(expr #333=(- y 1) #f)) #334=#(z #(expr z #f)) #335=#(x #(expr x #f))) #(expr #336=(tak #333# z x) #f)) #337=#((#338=#(tak #(expr tak #f)) #339=#((#340=#(- #(expr - #f)) #341=#(z #(expr z #f)) #342=#(1 #(expr 1 #f))) #(expr #343=(- z 1) #f)) #344=#(x #(expr x #f)) #345=#(y #(expr y #f))) #(expr #346=(tak #343# x y) #f))) #(expr #347=(tak #326# #336# #346#) #f))) #(expr #348=(if #313# z #347#) #f)))) #349=#(expr (define #303# #348#) #f)) #350=#(#2# tak #f (#351=#(#21# #352=#(#6# #67# (#351# #(#155# #352# () #t #18# #353=#(18 #(expr 18 #f)) 18) #(#155# #352# () #t #18# #354=#(12 #(expr 12 #f)) 12) #(#155# #352# () #t #18# #355=#(6 #(expr 6 #f)) 6)) #t #18# #356=#((#357=#(tak #(expr tak #f)) #353# #354# #355#) #(expr #358=(tak 18 12 6) #f))) () #t #18# #357# #350#) #359=#(#21# #360=#(#6# #295# (#359# #361=#(#6# #360# (#362=#(#21# #361# () () #363=#((() . #f) () () #((#364=(#365=#(#2# x #296# (#366=#(#21# #367=#(#6# #360# (#368=#(#21# #367# () () #363# #338# #350#) #369=#(#6# #367# (#370=#(#21# #369# () () #363# #340# #163#) #371=#(#21# #369# () (#372=#(#2# z #296# (#373=#(#21# #295# () (#372#) #363# #314# #372#) #371# #374=#(#21# #375=#(#6# #360# (#376=#(#21# #375# () () #363# #328# #350#) #377=#(#6# #375# (#378=#(#21# #377# () () #363# #330# #163#) #379=#(#21# #377# () (#380=#(#2# y #296# (#381=#(#21# #367# () #382=(#380#) #363# #345# #380#) #379# #383=#(#21# #361# () (#380#) #363# #324# #380#) #384=#(#21# #293# () (#380#) #363# #310# #380#)) () #301# #f)) #363# #331# #380#) #(#155# #377# () () #363# #332# 1)) (#380#) #363# #329#) #374# #385=#(#21# #375# () #386=(#365#) #363# #335# #365#)) (#380# #372# . #386#) #363# #327#) () (#372#) #363# #334# #372#) #387=#(#21# #361# () #388=(#372#) #363# #325# #372#)) () #302# #f)) #363# #341# #372#) #(#155# #369# () () #363# #342# 1)) (#372#) #363# #339#) #366# #381#) #389=(#372# #365# . #382#) #363# #337#) () (#365#) #363# #344# #365#) #385# #390=#(#21# #391=#(#6# #361# (#392=#(#21# #391# () () #363# #320# #163#) #390# #(#155# #391# () () #363# #322# 1)) (#365#) #363# #319#) () (#365#) #363# #321# #365#) #393=#(#21# #293# () #394=(#365#) #363# #311# #365#)) () #300# #f) #380# #372#) . #f) () () #18#)) #318# #350#) #391# #383# #387#) (#365# #380# . #388#) #363# #317#) #375# #367#) #389# #363# #315#) () () #363# #316# #350#) #368# #376# #362#) (#297#) #298# #f)) (#295#) #t #18# #((#(lambda #349#) #(#299# #349#) . #304#) #349#) "tak" 3 #f #364#) (#294# #373# #360#) #389# #363# #305#) (#395=#(#21# #294# () () #363# #307# #396=#(#2# not #f (#395#) () #307# #f)) #293#) #397=(#380# . #394#) #363# #306#) (#292# #384# #393#) #397# #363# #308#) () () #363# #309# #291#) #398=#(#21# #399=#(#6# #400=#(#8# #401=#(#4# #402=#(#17# #f (#401#) #t #18# #((#(define #(expr define #f)) #((#403=#(fib #(expr fib #f)) . #404=(#405=#(n #(expr n #f)))) #(expr #406=(fib n) #f)) . #407=(#408=#((#(if #(expr if #f)) #409=#((#410=#(< #(expr < #f)) #411=#(n #(expr n #f)) #412=#(2 #(expr 2 #f))) #(expr #413=(< n 2) #f)) #414=#(n #(expr n #f)) #415=#((#416=#(+ #(expr + #f)) #417=#((#418=#(fib #(expr fib #f)) #419=#((#420=#(- #(expr - #f)) #421=#(n #(expr n #f)) #422=#(1 #(expr 1 #f))) #(expr #423=(- n 1) #f))) #(expr #424=(fib #423#) #f)) #425=#((#426=#(fib #(expr fib #f)) #427=#((#428=#(- #(expr - #f)) #429=#(n #(expr n #f)) #430=#(2 #(expr 2 #f))) #(expr #431=(- n 2) #f))) #(expr #432=(fib #431#) #f))) #(expr #433=(+ #424# #432#) #f))) #(expr #434=(if #413# n #433#) #f)))) #435=#(expr (define #406# #434#) #f)) #436=#(#2# fib #f (#437=#(#21# #438=#(#6# #67# (#437# #(#155# #438# () #t #18# #439=#(20 #(expr 20 #f)) 20)) #t #18# #440=#((#441=#(fib #(expr fib #f)) #439#) #(expr #442=(fib 20) #f))) () #t #18# #441# #436#) #443=#(#21# #444=#(#6# #445=#(#6# #400# (#446=#(#21# #445# () () #447=#((() . #f) () () #((#448=(#449=#(#2# n #401# (#450=#(#21# #400# () (#449#) #447# #414# #449#) #451=#(#21# #452=#(#6# #444# (#453=#(#21# #452# () () #447# #428# #163#) #451# #(#155# #452# () () #447# #430# 2)) #454=(#449#) #447# #427#) () (#449#) #447# #429# #449#) #455=#(#21# #456=#(#6# #457=#(#6# #445# (#458=#(#21# #457# () () #447# #418# #436#) #456#) #459=(#449#) #447# #417#) (#460=#(#21# #456# () () #447# #420# #163#) #455# #(#155# #456# () () #447# #422# 1)) #459# #447# #419#) () (#449#) #447# #421# #449#) #461=#(#21# #399# () (#449#) #447# #411# #449#)) () #405# #f)) . #f) () () #18#)) #416# #70#) #457# #444#) #454# #447# #415#) (#443# #452#) #454# #447# #425#) () () #447# #426# #436#) #458#) (#402#) #403# #f)) (#400#) #t #18# #((#(lambda #435#) #(#404# #435#) . #407#) #435#) "fib" 1 #f #448#) (#399# #450# #445#) #454# #447# #408#) (#398# #461# #(#155# #399# () () #447# #412# 2)) (#449#) #447# #409#) () () #447# #410# #291#)) () #410# #f)) #288# #(#155# #289# () () #170# #196# 0)) (#172#) #170# #193#) () (#172#) #170# #195# #172#)) () #180# #f)) . #f) () () #256#) #285# #168#) #462=#(#21# #463=#(#6# #14# (#464=#(#21# #463# () () #262# #465=#(vector-length #(expr vector-length #f)) #466=#(#2# vector-length #f (#467=#(#21# #123# () #t #468=#((() . #f) () () #((#469=(#470=#(#2# n #124# (#471=#(#21# #121# () #t #468# #137# #470#)) () #128# #f)) . #f) () () #18#)) #132# #466#) #464#) () #465# #f)) #462#) #472=(#168#) #262# #473=#((#465# #474=#(x #(expr x #f))) #(expr #475=(vector-length x) #f))) () #472# #262# #474# #168#)) () #285# #f) #258# #254#) #170# #179# #f 1 #f (#177#)) (#178# #169# #259# #165#) (#177# #168# #258# . #476=(#254#)) #170# #179#) (#164# #255# #(#155# #165# () () #256# #184# 1)) #476# #256# #181#) () () #256# #182# #163#) #287# #477=#(#21# #478=#(#6# #479=#(#6# #480=#(#8# #481=#(#8# #482=#(#4# #483=#(#17# #f (#482#) #t #18# #((#(define #(expr define #f)) #((#484=#(ack #(expr ack #f)) . #485=(#486=#(m #(expr m #f)) #487=#(n #(expr n #f)))) #(expr #488=(ack m n) #f)) . #489=(#((#(cond #(expr cond #f)) #490=#((#491=#((#492=#(= #(expr = #f)) #493=#(m #(expr m #f)) #494=#(0 #(expr 0 #f))) #(expr #495=(= m 0) #f)) #496=#((#497=#(+ #(expr + #f)) #498=#(n #(expr n #f)) #499=#(1 #(expr 1 #f))) #(expr #500=(+ n 1) #f))) #(expr #501=(#495# #500#) #f)) #502=#((#503=#((#504=#(= #(expr = #f)) #505=#(n #(expr n #f)) #506=#(0 #(expr 0 #f))) #(expr #507=(= n 0) #f)) #508=#((#509=#(ack #(expr ack #f)) #510=#((#511=#(- #(expr - #f)) #512=#(m #(expr m #f)) #513=#(1 #(expr 1 #f))) #(expr #514=(- m 1) #f)) #515=#(1 #(expr 1 #f))) #(expr #516=(ack #514# 1) #f))) #(expr #517=(#507# #516#) #f)) #((#(else #(expr else #f)) #518=#((#519=#(ack #(expr ack #f)) #520=#((#521=#(- #(expr - #f)) #522=#(m #(expr m #f)) #523=#(1 #(expr 1 #f))) #(expr #524=(- m 1) #f)) #525=#((#526=#(ack #(expr ack #f)) #527=#(m #(expr m #f)) #528=#((#529=#(- #(expr - #f)) #530=#(n #(expr n #f)) #531=#(1 #(expr 1 #f))) #(expr #532=(- n 1) #f))) #(expr #533=(ack m #532#) #f))) #(expr #534=(ack #524# #533#) #f))) #(expr #535=(else #534#) #f))) #(expr #536=(cond #501# #517# #535#) #f)))) #537=#(expr (define #488# #536#) #f)) #538=#(#2# ack #f (#539=#(#21# #540=#(#6# #67# (#539# #(#155# #540# () #t #18# #541=#(3 #(expr 3 #f)) 3) #(#155# #540# () #t #18# #542=#(9 #(expr 9 #f)) 9)) #t #18# #543=#((#544=#(ack #(expr ack #f)) #541# #542#) #(expr #545=(ack 3 9) #f))) () #t #18# #544# #538#) #546=#(#21# #479# () () #547=#((() . #f) () () #((#548=(#549=#(#2# m #482# (#550=#(#21# #478# () (#549#) #547# #512# #549#) #551=#(#21# #552=#(#6# #553=#(#6# #480# (#554=#(#21# #553# () () #547# #519# #538#) #555=#(#6# #553# (#556=#(#21# #555# () () #547# #521# #163#) #557=#(#21# #555# () (#549#) #547# #522# #549#) #(#155# #555# () () #547# #523# 1)) (#549#) #547# #520#) #552#) #558=(#549# . #559=(#560=#(#2# n #482# (#561=#(#21# #562=#(#6# #481# (#563=#(#21# #562# () () #547# #497# #70#) #561# #(#155# #562# () () #547# #499# 1)) (#560#) #547# #496#) () (#560#) #547# #498# #560#) #564=#(#21# #565=#(#6# #552# (#566=#(#21# #565# () () #547# #529# #163#) #564# #(#155# #565# () () #547# #531# 1)) #559# #547# #528#) () (#560#) #547# #530# #560#) #567=#(#21# #568=#(#6# #480# (#569=#(#21# #568# () () #547# #504# #570=#(#2# = #f (#569# #571=#(#21# #572=#(#6# #481# (#571# #573=#(#21# #572# () (#549#) #547# #493# #549#) #(#155# #572# () () #547# #494# 0)) (#549#) #547# #491#) () () #547# #492# #570#)) () #504# #f)) #567# #(#155# #568# () () #547# #506# 0)) (#560#) #547# #503#) () (#560#) #547# #505# #560#)) () #487# #f))) #547# #518#) (#574=#(#21# #552# () () #547# #526# #538#) #551# #565#) #558# #547# #525#) () (#549#) #547# #527# #549#) #557# #573#) () #486# #f) #560#) . #f) () () #18#)) #509# #538#) #554# #574#) (#483#) #484# #f)) (#481#) #t #18# #((#(lambda #537#) #(#485# #537#) . #489#) #537#) "ack" 2 #f #548#) (#572# #562# #480#) #558# #547# #490#) (#568# #479# #553#) #558# #547# #502#) (#546# #478# #(#155# #479# () () #547# #515# 1)) (#549#) #547# #508#) (#477# #550# #(#155# #478# () () #547# #513# 1)) (#549#) #547# #510#) () () #547# #511# #163#) #566# #556# #370# #378# #392# #453# #460#) () #420# #f)) #160# #(#155# #161# () #t #147# #53# 1)) #t #147# #50#) () #t #147# #52# #159#) #575=#(#21# #22# () #t #147# #45# #159#)) () #35# #f) #576=#(#2# result #24# (#577=#(#21# #23# () #t #147# #60# #576#)) () #38# #f)) . #f) () () #156#))) #49# #149#) #578=#(#21# #145# () #t #148# #30# #579=#(#2# n #24# (#580=#(#21# #144# () #t #147# #57# #579#) #578#) () #30# #f)) #161# #144#) #t #147# #48#) (#143# #580#) #t #147# #55#) () #t #147# #56# #142#)) (#125#) #126# #f)) (#123#) #t #18# #((#(lambda #141#) #(#127# #141#) . #130#) #141#) "my-try" 1 #f #469#) (#467# #122#) #t #468# #131#) (#581=#(#21# #122# () #t #468# #134# #582=#(#2# create-y #f (#581#) (#16#) #583=#(create-y #(expr create-y #f)) #f)) #121#) #t #468# #133#) (#120# #471#) #t #468# #135#) () #t #468# #136# #119#)) (#82#) #83# #f)) (#80#) #t #18# #584=#((#(lambda #118#) #(#84# #118#) . #87#) #118#) "create-x" 1 #f #273#) (#79# #247#) (#244#) #239# #584#) (#78#) (#244#) #239# #584# #f 1 #f (#240#)) (#243# #77#) (#244# #240#) #223# #94#) (#76#) (#270#) #223# #94# #f 3 #f (#236# #221# . #224#)) (#231# #274# #75#) #585=(#270# #236# #221# #225#) #223# #94#) (#74# #219#) #585# #223# #94#) (#73#) (#270# #236# #221# #225#) #223# #94# #f 1 #f (#(#2# temp #74# () () #94# #f))) (#272# #237# #222# #72#) (#270# #236# #221# . #586=(#225#)) #223# #94#) (#71# #226# #(#155# #72# () () #223# #100# 1)) #586# #223# #97#) () () #223# #98# #70#) #563# #446#) () #416# #f)) #438# #352# #540# #66#) #t #18# #((#69# #440# #356# #543# #587=#((#588=#(go #(expr go #f)) #589=#(200000 #(expr 200000 #f))) #(expr #590=(go 200000) #f))) #(expr (+ #442# #358# #545# #590#) #f))) (#65# #(#155# #66# () #t #18# #589# 200000)) #t #18# #587#) () #t #18# #588# #64#)) (#27#) #28# #f)) (#25#) #t #18# #((#(lambda #63#) #(#29# #63#) . #32#) #63#) "go" 1 #f #157#) (#150# #24#) #t #148# #33#) (#23#) #t #148# #33# "loop" 3 #f (#579# . #158#)) (#22# #145# #577#) #t #147# #42#) (#20# #575# #(#155# #22# () #t #147# #46# 0)) #t #147# #43#) () #t #147# #44# #19#)) () #44# #f) #64# #142# #283# #466# #582# #233# #217# #249# #119# #570# #538# #396# #350# #291# #163# #70# #436#) . #f) () ((compilation-strategy block) (safe #f) (arith fixnum) (standard-bindings #t)) #f) #((#(define #(expr define #f)) #((#583# . #591=(#285#)) #(expr #592=(create-y x) #f)) . #593=(#((#(let* #(expr let* #f)) #((#594=#((#264# #473#) #(expr #595=(n #475#) #f)) #596=#((#260# #266#) #(expr #597=(result #268#) #f))) #(expr #598=(#595# #597#) #f)) #179#) #(expr #599=(let* #598# #210#) #f)))) #600=#(expr (define #592# #599#) #f)) #582#) (#14#) #t #18# #((#(lambda #600#) #(#591# #600#) . #593#) #600#) "create-y" 1 #f #263#) (#13# #463#) (#168#) #261# #594#) (#12#) (#168#) #261# #594# #f 1 #f (#254#)) (#11# #251#) (#168# #254#) #257# #596#) (#10#) (#168# #254#) #257# #596# #f 1 #f (#258#)) (#167# #9#) (#168# #258# #254#) #170# #179#) (#7#) (#177#) #170# #179# #f 3 #f (#212# #276# . #171#)) (#289# #278# #5#) #601=(#177# #276# #212# #172#) #170# #179#) (#3# #215#) #601# #170# #179#) (#175#) (#177# #212# #276# #172#) #170# #179# #f 1 #f (#1#)) () () #179# #f)))
   #3 in gen-let at /tmp/r7rs-benchmarks/TR7/compiler.scm:6400 args (#1=(#(#2=(var-tag) temp #3=#(#4=(prc-tag) #5=#(#6=(app-tag) #7=#(#8=(tst-tag) #9=#(#4# #10=#(#6# #11=#(#4# #12=#(#6# #13=#(#4# #14=#(#6# #15=#(#4# #16=#(#17=(def-tag) #f (#15#) #t #18=#(((#19=#(#2# > #f (#20=#(#21=(ref-tag) #22=#(#6# #23=#(#8# #24=#(#4# #25=#(#6# #26=#(#4# #27=#(#17# #f (#26#) #t #18# #((#(define #(expr define #f)) #((#28=#(go #(expr go #f)) . #29=(#30=#(n #(expr n #f)))) #(expr #31=(go n) #f)) . #32=(#33=#((#(let #(expr let #f)) #34=#(loop #(expr loop #f)) #((#((#35=#(repeat #(expr repeat #f)) #36=#(100 #(expr 100 #f))) #(expr #37=(repeat 100) #f)) #((#38=#(result #(expr result #f)) #39=#(0 #(expr 0 #f))) #(expr #40=(result 0) #f))) #(expr #41=(#37# #40#) #f)) #42=#((#(if #(expr if #f)) #43=#((#44=#(> #(expr > #f)) #45=#(repeat #(expr repeat #f)) #46=#(0 #(expr 0 #f))) #(expr #47=(> repeat 0) #f)) #48=#((#49=#(loop #(expr loop #f)) #50=#((#51=#(- #(expr - #f)) #52=#(repeat #(expr repeat #f)) #53=#(1 #(expr 1 #f))) #(expr #54=(- repeat 1) #f)) #55=#((#56=#(my-try #(expr my-try #f)) #57=#(n #(expr n #f))) #(expr #58=(my-try n) #f))) #(expr #59=(loop #54# #58#) #f)) #60=#(result #(expr result #f))) #(expr #61=(if #47# #59# result) #f))) #(expr #62=(let loop #41# #61#) #f)))) #63=#(expr (define #31# #62#) #f)) #64=#(#2# go #f (#65=#(#21# #66=#(#6# #67=#(#6# #f (#68=#(#21# #67# () #t #18# #69=#(+ #(expr + #f)) #70=#(#2# + #f (#68# #71=#(#21# #72=#(#6# #73=#(#6# #74=#(#4# #75=#(#6# #76=#(#8# #77=#(#4# #78=#(#6# #79=#(#4# #80=#(#6# #81=#(#4# #82=#(#17# #f (#81#) #t #18# #((#(define #(expr define #f)) #((#83=#(create-x #(expr create-x #f)) . #84=(#85=#(n #(expr n #f)))) #(expr #86=(create-x n) #f)) . #87=(#((#(define #(expr define #f)) #88=#(result #(expr result #f)) #89=#((#90=#(make-vector #(expr make-vector #f)) #91=#(n #(expr n #f))) #(expr #92=(make-vector n) #f))) #(expr #93=(define result #92#) #f)) #94=#((#(do #(expr do #f)) #((#((#95=#(i #(expr i #f)) #96=#(0 #(expr 0 #f)) #97=#((#98=#(+ #(expr + #f)) #99=#(i #(expr i #f)) #100=#(1 #(expr 1 #f))) #(expr #101=(+ i 1) #f))) #(expr #102=(i 0 #101#) #f))) #(expr #103=(#102#) #f)) #((#104=#((#105=#(>= #(expr >= #f)) #106=#(i #(expr i #f)) #107=#(n #(expr n #f))) #(expr #108=(>= i n) #f)) #109=#(result #(expr result #f))) #(expr #110=(#108# result) #f)) #111=#((#112=#(vector-set! #(expr vector-set! #f)) #113=#(result #(expr result #f)) #114=#(i #(expr i #f)) #115=#(i #(expr i #f))) #(expr #116=(vector-set! result i i) #f))) #(expr #117=(do #103# #110# #116#) #f)))) #118=#(expr (define #86# #93# #117#) #f)) #119=#(#2# create-x #f (#120=#(#21# #121=#(#6# #122=#(#6# #123=#(#6# #124=#(#4# #125=#(#17# #f (#124#) #t #18# #((#(define #(expr define #f)) #((#126=#(my-try #(expr my-try #f)) . #127=(#128=#(n #(expr n #f)))) #(expr #129=(my-try n) #f)) . #130=(#131=#((#132=#(vector-length #(expr vector-length #f)) #133=#((#134=#(create-y #(expr create-y #f)) #135=#((#136=#(create-x #(expr create-x #f)) #137=#(n #(expr n #f))) #(expr #138=(create-x n) #f))) #(expr #139=(create-y #138#) #f))) #(expr #140=(vector-length #139#) #f)))) #141=#(expr (define #129# #140#) #f)) #142=#(#2# my-try #f (#143=#(#21# #144=#(#6# #145=#(#6# #23# (#146=#(#21# #145# () #t #147=#((() . #f) () () #148=#(((#149=#(#2# loop #150=#(#4# #25# (#151=#(#6# #150# (#152=#(#21# #151# () #t #148# #33# #149#) #153=#(#21# #151# () #t #148# #30# #154=#(#2# n #26# (#153#) () #30# #f)) #(#155=(cst-tag) #151# () #t #156=#((() . #f) () () #((#157=(#154#) . #f) () () #18#)) #36# 100) #(#155# #151# () #t #156# #39# 0)) #t #148# #33#)) #t #148# #33# #f 1 #f (#149#)) (#152# #146#) () #34# #f)) . #f) () () #((#158=(#159=#(#2# repeat #24# (#160=#(#21# #161=#(#6# #145# (#162=#(#21# #161# () #t #147# #51# #163=#(#2# - #f (#162# #164=#(#21# #165=#(#6# #166=#(#6# #167=#(#4# #10# (#166#) (#168=#(#2# x #15# (#169=#(#21# #166# () (#168#) #170=#((#171=(#172=#(#2# i #9# (#173=#(#21# #174=#(#6# #175=#(#6# #3# (#176=#(#21# #175# () (#177=#(#2# loop #167# (#178=#(#21# #166# () (#177#) #170# #179=#((#(do #(expr do #f)) #((#((#180=#(i #(expr i #f)) #181=#((#182=#(- #(expr - #f)) #183=#(n #(expr n #f)) #184=#(1 #(expr 1 #f))) #(expr #185=(- n 1) #f)) #186=#((#187=#(- #(expr - #f)) #188=#(i #(expr i #f)) #189=#(1 #(expr 1 #f))) #(expr #190=(- i 1) #f))) #(expr #191=(i #185# #190#) #f))) #(expr #192=(#191#) #f)) #((#193=#((#194=#(< #(expr < #f)) #195=#(i #(expr i #f)) #196=#(0 #(expr 0 #f))) #(expr #197=(< i 0) #f)) #198=#(result #(expr result #f))) #(expr #199=(#197# result) #f)) #200=#((#201=#(vector-set! #(expr vector-set! #f)) #202=#(result #(expr result #f)) #203=#(i #(expr i #f)) #204=#((#205=#(vector-ref #(expr vector-ref #f)) #206=#(x #(expr x #f)) #207=#(i #(expr i #f))) #(expr #208=(vector-ref x i) #f))) #(expr #209=(vector-set! result i #208#) #f))) #(expr #210=(do #192# #199# #209#) #f)) #177#) #176#) () #179# #f)) #170# #179# #177#) #211=#(#21# #175# () (#212=#(#2# x #9# (#213=#(#21# #214=#(#6# #215=#(#6# #5# (#216=#(#21# #215# () () #170# #201# #217=#(#2# vector-set! #f (#216# #218=#(#21# #219=#(#6# #75# (#218# #220=#(#21# #219# () (#221=#(#2# result #77# (#220# #222=#(#21# #73# () (#221#) #223=#((#224=(#225=#(#2# i #77# (#226=#(#21# #72# () (#225#) #223# #99# #225#) #227=#(#21# #219# () #228=(#225#) #223# #115# #225#) #229=#(#21# #219# () (#225#) #223# #114# #225#) #230=#(#21# #231=#(#6# #76# (#232=#(#21# #231# () () #223# #105# #233=#(#2# >= #f (#232#) () #105# #f)) #230# #234=#(#21# #231# () #235=(#236=#(#2# n #77# (#237=#(#21# #73# () (#236#) #223# #85# #236#) #234#) () #85# #f)) #223# #107# #236#)) (#225# . #235#) #223# #104#) () (#225#) #223# #106# #225#)) () #95# #f)) . #f) () () #238=#((() . #f) () () #239=#(((#240=#(#2# result #79# (#241=#(#21# #242=#(#6# #243=#(#4# #78# (#242#) (#244=#(#2# n #81# (#245=#(#21# #242# () (#244#) #223# #85# #244#) #246=#(#21# #247=#(#6# #80# (#248=#(#21# #247# () () #239# #90# #249=#(#2# make-vector #f (#250=#(#21# #251=#(#6# #12# (#250# #252=#(#21# #251# () #253=(#254=#(#2# n #13# (#255=#(#21# #165# () (#254#) #256=#((() . #f) () () #257=#(((#258=#(#2# result #11# (#259=#(#21# #166# () (#258#) #170# #260=#(result #(expr result #f)) #258#)) () #260# #f)) . #f) () () #261=#(((#254#) . #f) () () #262=#((() . #f) () () #((#263=(#168#) . #f) () () #18#))))) #183# #254#) #252#) () #264=#(n #(expr n #f)) #f)) #261# #265=#(n #(expr n #f)) #254#)) #253# #261# #266=#((#267=#(make-vector #(expr make-vector #f)) #265#) #(expr #268=(make-vector n) #f))) () () #261# #267# #249#) #248#) () #90# #f)) #246#) #269=(#244#) #239# #89#) () #269# #239# #91# #244#)) () #85# #f) #240#) #223# #94# #f 1 #f (#270=#(#2# loop #243# (#271=#(#21# #242# () (#270#) #223# #94# #270#) #272=#(#21# #73# () (#270#) #223# #94# #270#)) () #94# #f))) (#271# #245# #241# #(#155# #242# () () #238# #96# 0)) (#270# #244# #240#) #223# #94#) () (#240#) #223# #88# #240#)) () #88# #f)) . #f) () () #((#273=(#244#) . #f) () () #18#)))) #88# #221#) #274=#(#21# #76# () (#221#) #223# #109# #221#)) () #88# #f)) #223# #113# #221#) #229# #227#) (#221# . #228#) #223# #111#) () () #223# #112# #217#)) () #112# #f)) #275=#(#21# #215# () (#276=#(#2# result #9# (#275# #277=#(#21# #175# () (#276#) #170# #260# #276#) #278=#(#21# #7# () (#276#) #170# #198# #276#)) () #260# #f)) #170# #202# #276#) #279=#(#21# #215# () (#172#) #170# #203# #172#) #214#) (#276# . #280=(#212# . #281=(#172#))) #170# #200#) (#282=#(#21# #214# () () #170# #205# #283=#(#2# vector-ref #f (#282#) () #205# #f)) #213# #284=#(#21# #214# () #281# #170# #207# #172#)) #280# #170# #204#) () (#212#) #170# #206# #212#) #211#) () #285=#(x #(expr x #f)) #f)) #170# #285# #212#) #277# #174#) (#177# #212# #276# . #286=(#172#)) #170# #179#) (#287=#(#21# #174# () () #170# #187# #163#) #173# #(#155# #174# () () #170# #189# 1)) #286# #170# #186#) () (#172#) #170# #188# #172#) #284# #279# #288=#(#21# #289=#(#6# #7# (#290=#(#21# #289# () () #170# #194# #291=#(#2# < #f (#290# #292=#(#21# #293=#(#6# #294=#(#6# #295=#(#8# #296=#(#4# #297=#(#17# #f (#296#) #t #18# #((#(define #(expr define #f)) #((#298=#(tak #(expr tak #f)) . #299=(#300=#(x #(expr x #f)) #301=#(y #(expr y #f)) #302=#(z #(expr z #f)))) #(expr #303=(tak x y z) #f)) . #304=(#305=#((#(if #(expr if #f)) #306=#((#307=#(not #(expr not #f)) #308=#((#309=#(< #(expr < #f)) #310=#(y #(expr y #f)) #311=#(x #(expr x #f))) #(expr #312=(< y x) #f))) #(expr #313=(not #312#) #f)) #314=#(z #(expr z #f)) #315=#((#316=#(tak #(expr tak #f)) #317=#((#318=#(tak #(expr tak #f)) #319=#((#320=#(- #(expr - #f)) #321=#(x #(expr x #f)) #322=#(1 #(expr 1 #f))) #(expr #323=(- x 1) #f)) #324=#(y #(expr y #f)) #325=#(z #(expr z #f))) #(expr #326=(tak #323# y z) #f)) #327=#((#328=#(tak #(expr tak #f)) #329=#((#330=#(- #(expr - #f)) #331=#(y #(expr y #f)) #332=#(1 #(expr 1 #f))) #(expr #333=(- y 1) #f)) #334=#(z #(expr z #f)) #335=#(x #(expr x #f))) #(expr #336=(tak #333# z x) #f)) #337=#((#338=#(tak #(expr tak #f)) #339=#((#340=#(- #(expr - #f)) #341=#(z #(expr z #f)) #342=#(1 #(expr 1 #f))) #(expr #343=(- z 1) #f)) #344=#(x #(expr x #f)) #345=#(y #(expr y #f))) #(expr #346=(tak #343# x y) #f))) #(expr #347=(tak #326# #336# #346#) #f))) #(expr #348=(if #313# z #347#) #f)))) #349=#(expr (define #303# #348#) #f)) #350=#(#2# tak #f (#351=#(#21# #352=#(#6# #67# (#351# #(#155# #352# () #t #18# #353=#(18 #(expr 18 #f)) 18) #(#155# #352# () #t #18# #354=#(12 #(expr 12 #f)) 12) #(#155# #352# () #t #18# #355=#(6 #(expr 6 #f)) 6)) #t #18# #356=#((#357=#(tak #(expr tak #f)) #353# #354# #355#) #(expr #358=(tak 18 12 6) #f))) () #t #18# #357# #350#) #359=#(#21# #360=#(#6# #295# (#359# #361=#(#6# #360# (#362=#(#21# #361# () () #363=#((() . #f) () () #((#364=(#365=#(#2# x #296# (#366=#(#21# #367=#(#6# #360# (#368=#(#21# #367# () () #363# #338# #350#) #369=#(#6# #367# (#370=#(#21# #369# () () #363# #340# #163#) #371=#(#21# #369# () (#372=#(#2# z #296# (#373=#(#21# #295# () (#372#) #363# #314# #372#) #371# #374=#(#21# #375=#(#6# #360# (#376=#(#21# #375# () () #363# #328# #350#) #377=#(#6# #375# (#378=#(#21# #377# () () #363# #330# #163#) #379=#(#21# #377# () (#380=#(#2# y #296# (#381=#(#21# #367# () #382=(#380#) #363# #345# #380#) #379# #383=#(#21# #361# () (#380#) #363# #324# #380#) #384=#(#21# #293# () (#380#) #363# #310# #380#)) () #301# #f)) #363# #331# #380#) #(#155# #377# () () #363# #332# 1)) (#380#) #363# #329#) #374# #385=#(#21# #375# () #386=(#365#) #363# #335# #365#)) (#380# #372# . #386#) #363# #327#) () (#372#) #363# #334# #372#) #387=#(#21# #361# () #388=(#372#) #363# #325# #372#)) () #302# #f)) #363# #341# #372#) #(#155# #369# () () #363# #342# 1)) (#372#) #363# #339#) #366# #381#) #389=(#372# #365# . #382#) #363# #337#) () (#365#) #363# #344# #365#) #385# #390=#(#21# #391=#(#6# #361# (#392=#(#21# #391# () () #363# #320# #163#) #390# #(#155# #391# () () #363# #322# 1)) (#365#) #363# #319#) () (#365#) #363# #321# #365#) #393=#(#21# #293# () #394=(#365#) #363# #311# #365#)) () #300# #f) #380# #372#) . #f) () () #18#)) #318# #350#) #391# #383# #387#) (#365# #380# . #388#) #363# #317#) #375# #367#) #389# #363# #315#) () () #363# #316# #350#) #368# #376# #362#) (#297#) #298# #f)) (#295#) #t #18# #((#(lambda #349#) #(#299# #349#) . #304#) #349#) "tak" 3 #f #364#) (#294# #373# #360#) #389# #363# #305#) (#395=#(#21# #294# () () #363# #307# #396=#(#2# not #f (#395#) () #307# #f)) #293#) #397=(#380# . #394#) #363# #306#) (#292# #384# #393#) #397# #363# #308#) () () #363# #309# #291#) #398=#(#21# #399=#(#6# #400=#(#8# #401=#(#4# #402=#(#17# #f (#401#) #t #18# #((#(define #(expr define #f)) #((#403=#(fib #(expr fib #f)) . #404=(#405=#(n #(expr n #f)))) #(expr #406=(fib n) #f)) . #407=(#408=#((#(if #(expr if #f)) #409=#((#410=#(< #(expr < #f)) #411=#(n #(expr n #f)) #412=#(2 #(expr 2 #f))) #(expr #413=(< n 2) #f)) #414=#(n #(expr n #f)) #415=#((#416=#(+ #(expr + #f)) #417=#((#418=#(fib #(expr fib #f)) #419=#((#420=#(- #(expr - #f)) #421=#(n #(expr n #f)) #422=#(1 #(expr 1 #f))) #(expr #423=(- n 1) #f))) #(expr #424=(fib #423#) #f)) #425=#((#426=#(fib #(expr fib #f)) #427=#((#428=#(- #(expr - #f)) #429=#(n #(expr n #f)) #430=#(2 #(expr 2 #f))) #(expr #431=(- n 2) #f))) #(expr #432=(fib #431#) #f))) #(expr #433=(+ #424# #432#) #f))) #(expr #434=(if #413# n #433#) #f)))) #435=#(expr (define #406# #434#) #f)) #436=#(#2# fib #f (#437=#(#21# #438=#(#6# #67# (#437# #(#155# #438# () #t #18# #439=#(20 #(expr 20 #f)) 20)) #t #18# #440=#((#441=#(fib #(expr fib #f)) #439#) #(expr #442=(fib 20) #f))) () #t #18# #441# #436#) #443=#(#21# #444=#(#6# #445=#(#6# #400# (#446=#(#21# #445# () () #447=#((() . #f) () () #((#448=(#449=#(#2# n #401# (#450=#(#21# #400# () (#449#) #447# #414# #449#) #451=#(#21# #452=#(#6# #444# (#453=#(#21# #452# () () #447# #428# #163#) #451# #(#155# #452# () () #447# #430# 2)) #454=(#449#) #447# #427#) () (#449#) #447# #429# #449#) #455=#(#21# #456=#(#6# #457=#(#6# #445# (#458=#(#21# #457# () () #447# #418# #436#) #456#) #459=(#449#) #447# #417#) (#460=#(#21# #456# () () #447# #420# #163#) #455# #(#155# #456# () () #447# #422# 1)) #459# #447# #419#) () (#449#) #447# #421# #449#) #461=#(#21# #399# () (#449#) #447# #411# #449#)) () #405# #f)) . #f) () () #18#)) #416# #70#) #457# #444#) #454# #447# #415#) (#443# #452#) #454# #447# #425#) () () #447# #426# #436#) #458#) (#402#) #403# #f)) (#400#) #t #18# #((#(lambda #435#) #(#404# #435#) . #407#) #435#) "fib" 1 #f #448#) (#399# #450# #445#) #454# #447# #408#) (#398# #461# #(#155# #399# () () #447# #412# 2)) (#449#) #447# #409#) () () #447# #410# #291#)) () #410# #f)) #288# #(#155# #289# () () #170# #196# 0)) (#172#) #170# #193#) () (#172#) #170# #195# #172#)) () #180# #f)) . #f) () () #256#) #285# #168#) #462=#(#21# #463=#(#6# #14# (#464=#(#21# #463# () () #262# #465=#(vector-length #(expr vector-length #f)) #466=#(#2# vector-length #f (#467=#(#21# #123# () #t #468=#((() . #f) () () #((#469=(#470=#(#2# n #124# (#471=#(#21# #121# () #t #468# #137# #470#)) () #128# #f)) . #f) () () #18#)) #132# #466#) #464#) () #465# #f)) #462#) #472=(#168#) #262# #473=#((#465# #474=#(x #(expr x #f))) #(expr #475=(vector-length x) #f))) () #472# #262# #474# #168#)) () #285# #f) #258# #254#) #170# #179# #f 1 #f (#177#)) (#178# #169# #259# #165#) (#177# #168# #258# . #476=(#254#)) #170# #179#) (#164# #255# #(#155# #165# () () #256# #184# 1)) #476# #256# #181#) () () #256# #182# #163#) #287# #477=#(#21# #478=#(#6# #479=#(#6# #480=#(#8# #481=#(#8# #482=#(#4# #483=#(#17# #f (#482#) #t #18# #((#(define #(expr define #f)) #((#484=#(ack #(expr ack #f)) . #485=(#486=#(m #(expr m #f)) #487=#(n #(expr n #f)))) #(expr #488=(ack m n) #f)) . #489=(#((#(cond #(expr cond #f)) #490=#((#491=#((#492=#(= #(expr = #f)) #493=#(m #(expr m #f)) #494=#(0 #(expr 0 #f))) #(expr #495=(= m 0) #f)) #496=#((#497=#(+ #(expr + #f)) #498=#(n #(expr n #f)) #499=#(1 #(expr 1 #f))) #(expr #500=(+ n 1) #f))) #(expr #501=(#495# #500#) #f)) #502=#((#503=#((#504=#(= #(expr = #f)) #505=#(n #(expr n #f)) #506=#(0 #(expr 0 #f))) #(expr #507=(= n 0) #f)) #508=#((#509=#(ack #(expr ack #f)) #510=#((#511=#(- #(expr - #f)) #512=#(m #(expr m #f)) #513=#(1 #(expr 1 #f))) #(expr #514=(- m 1) #f)) #515=#(1 #(expr 1 #f))) #(expr #516=(ack #514# 1) #f))) #(expr #517=(#507# #516#) #f)) #((#(else #(expr else #f)) #518=#((#519=#(ack #(expr ack #f)) #520=#((#521=#(- #(expr - #f)) #522=#(m #(expr m #f)) #523=#(1 #(expr 1 #f))) #(expr #524=(- m 1) #f)) #525=#((#526=#(ack #(expr ack #f)) #527=#(m #(expr m #f)) #528=#((#529=#(- #(expr - #f)) #530=#(n #(expr n #f)) #531=#(1 #(expr 1 #f))) #(expr #532=(- n 1) #f))) #(expr #533=(ack m #532#) #f))) #(expr #534=(ack #524# #533#) #f))) #(expr #535=(else #534#) #f))) #(expr #536=(cond #501# #517# #535#) #f)))) #537=#(expr (define #488# #536#) #f)) #538=#(#2# ack #f (#539=#(#21# #540=#(#6# #67# (#539# #(#155# #540# () #t #18# #541=#(3 #(expr 3 #f)) 3) #(#155# #540# () #t #18# #542=#(9 #(expr 9 #f)) 9)) #t #18# #543=#((#544=#(ack #(expr ack #f)) #541# #542#) #(expr #545=(ack 3 9) #f))) () #t #18# #544# #538#) #546=#(#21# #479# () () #547=#((() . #f) () () #((#548=(#549=#(#2# m #482# (#550=#(#21# #478# () (#549#) #547# #512# #549#) #551=#(#21# #552=#(#6# #553=#(#6# #480# (#554=#(#21# #553# () () #547# #519# #538#) #555=#(#6# #553# (#556=#(#21# #555# () () #547# #521# #163#) #557=#(#21# #555# () (#549#) #547# #522# #549#) #(#155# #555# () () #547# #523# 1)) (#549#) #547# #520#) #552#) #558=(#549# . #559=(#560=#(#2# n #482# (#561=#(#21# #562=#(#6# #481# (#563=#(#21# #562# () () #547# #497# #70#) #561# #(#155# #562# () () #547# #499# 1)) (#560#) #547# #496#) () (#560#) #547# #498# #560#) #564=#(#21# #565=#(#6# #552# (#566=#(#21# #565# () () #547# #529# #163#) #564# #(#155# #565# () () #547# #531# 1)) #559# #547# #528#) () (#560#) #547# #530# #560#) #567=#(#21# #568=#(#6# #480# (#569=#(#21# #568# () () #547# #504# #570=#(#2# = #f (#569# #571=#(#21# #572=#(#6# #481# (#571# #573=#(#21# #572# () (#549#) #547# #493# #549#) #(#155# #572# () () #547# #494# 0)) (#549#) #547# #491#) () () #547# #492# #570#)) () #504# #f)) #567# #(#155# #568# () () #547# #506# 0)) (#560#) #547# #503#) () (#560#) #547# #505# #560#)) () #487# #f))) #547# #518#) (#574=#(#21# #552# () () #547# #526# #538#) #551# #565#) #558# #547# #525#) () (#549#) #547# #527# #549#) #557# #573#) () #486# #f) #560#) . #f) () () #18#)) #509# #538#) #554# #574#) (#483#) #484# #f)) (#481#) #t #18# #((#(lambda #537#) #(#485# #537#) . #489#) #537#) "ack" 2 #f #548#) (#572# #562# #480#) #558# #547# #490#) (#568# #479# #553#) #558# #547# #502#) (#546# #478# #(#155# #479# () () #547# #515# 1)) (#549#) #547# #508#) (#477# #550# #(#155# #478# () () #547# #513# 1)) (#549#) #547# #510#) () () #547# #511# #163#) #566# #556# #370# #378# #392# #453# #460#) () #420# #f)) #160# #(#155# #161# () #t #147# #53# 1)) #t #147# #50#) () #t #147# #52# #159#) #575=#(#21# #22# () #t #147# #45# #159#)) () #35# #f) #576=#(#2# result #24# (#577=#(#21# #23# () #t #147# #60# #576#)) () #38# #f)) . #f) () () #156#))) #49# #149#) #578=#(#21# #145# () #t #148# #30# #579=#(#2# n #24# (#580=#(#21# #144# () #t #147# #57# #579#) #578#) () #30# #f)) #161# #144#) #t #147# #48#) (#143# #580#) #t #147# #55#) () #t #147# #56# #142#)) (#125#) #126# #f)) (#123#) #t #18# #((#(lambda #141#) #(#127# #141#) . #130#) #141#) "my-try" 1 #f #469#) (#467# #122#) #t #468# #131#) (#581=#(#21# #122# () #t #468# #134# #582=#(#2# create-y #f (#581#) (#16#) #583=#(create-y #(expr create-y #f)) #f)) #121#) #t #468# #133#) (#120# #471#) #t #468# #135#) () #t #468# #136# #119#)) (#82#) #83# #f)) (#80#) #t #18# #584=#((#(lambda #118#) #(#84# #118#) . #87#) #118#) "create-x" 1 #f #273#) (#79# #247#) (#244#) #239# #584#) (#78#) (#244#) #239# #584# #f 1 #f (#240#)) (#243# #77#) (#244# #240#) #223# #94#) (#76#) (#270#) #223# #94# #f 3 #f (#236# #221# . #224#)) (#231# #274# #75#) #585=(#270# #236# #221# #225#) #223# #94#) (#74# #219#) #585# #223# #94#) (#73#) (#270# #236# #221# #225#) #223# #94# #f 1 #f (#(#2# temp #74# () () #94# #f))) (#272# #237# #222# #72#) (#270# #236# #221# . #586=(#225#)) #223# #94#) (#71# #226# #(#155# #72# () () #223# #100# 1)) #586# #223# #97#) () () #223# #98# #70#) #563# #446#) () #416# #f)) #438# #352# #540# #66#) #t #18# #((#69# #440# #356# #543# #587=#((#588=#(go #(expr go #f)) #589=#(200000 #(expr 200000 #f))) #(expr #590=(go 200000) #f))) #(expr (+ #442# #358# #545# #590#) #f))) (#65# #(#155# #66# () #t #18# #589# 200000)) #t #18# #587#) () #t #18# #588# #64#)) (#27#) #28# #f)) (#25#) #t #18# #((#(lambda #63#) #(#29# #63#) . #32#) #63#) "go" 1 #f #157#) (#150# #24#) #t #148# #33#) (#23#) #t #148# #33# "loop" 3 #f (#579# . #158#)) (#22# #145# #577#) #t #147# #42#) (#20# #575# #(#155# #22# () #t #147# #46# 0)) #t #147# #43#) () #t #147# #44# #19#)) () #44# #f) #64# #142# #283# #466# #582# #233# #217# #249# #119# #570# #538# #396# #350# #291# #163# #70# #436#) . #f) () ((compilation-strategy block) (safe #f) (arith fixnum) (standard-bindings #t)) #f) #((#(define #(expr define #f)) #((#583# . #591=(#285#)) #(expr #592=(create-y x) #f)) . #593=(#((#(let* #(expr let* #f)) #((#594=#((#264# #473#) #(expr #595=(n #475#) #f)) #596=#((#260# #266#) #(expr #597=(result #268#) #f))) #(expr #598=(#595# #597#) #f)) #179#) #(expr #599=(let* #598# #210#) #f)))) #600=#(expr (define #592# #599#) #f)) #582#) (#14#) #t #18# #((#(lambda #600#) #(#591# #600#) . #593#) #600#) "create-y" 1 #f #263#) (#13# #463#) (#168#) #261# #594#) (#12#) (#168#) #261# #594# #f 1 #f (#254#)) (#11# #251#) (#168# #254#) #257# #596#) (#10#) (#168# #254#) #257# #596# #f 1 #f (#258#)) (#167# #9#) (#168# #258# #254#) #170# #179#) (#7#) (#177#) #170# #179# #f 3 #f (#212# #276# . #171#)) (#289# #278# #5#) #601=(#177# #276# #212# #172#) #170# #179#) (#3# . #602=(#215#)) #601# #170# #179#) (#175#) (#177# #212# #276# #172#) #170# #179# #f 1 #f #1#) () () #179# #f)) #602# #175# (#(#2# ret #t () () #f #f)) tail)
   #4 in loop at /tmp/r7rs-benchmarks/TR7/compiler.scm:5189 args ()
   #5 in do-body at /tmp/r7rs-benchmarks/TR7/compiler.scm:0 args ()
   #6 in let-constant-var at /tmp/r7rs-benchmarks/TR7/compiler.scm:5437 args (#1=#(#2=(var-tag) create-y #f (#3=#(#4=(ref-tag) #5=#(#6=(app-tag) #7=#(#6# #8=#(#9=(prc-tag) #10=#(#11=(def-tag) #f (#8#) #t #12=#(((#13=#(#2# > #f (#14=#(#4# #15=#(#6# #16=#(#17=(tst-tag) #18=#(#9# #19=#(#6# #20=#(#9# #21=#(#11# #f (#20#) #t #12# #((#(define #(expr define #f)) #((#22=#(go #(expr go #f)) . #23=(#24=#(n #(expr n #f)))) #(expr #25=(go n) #f)) . #26=(#27=#((#(let #(expr let #f)) #28=#(loop #(expr loop #f)) #((#((#29=#(repeat #(expr repeat #f)) #30=#(100 #(expr 100 #f))) #(expr #31=(repeat 100) #f)) #((#32=#(result #(expr result #f)) #33=#(0 #(expr 0 #f))) #(expr #34=(result 0) #f))) #(expr #35=(#31# #34#) #f)) #36=#((#(if #(expr if #f)) #37=#((#38=#(> #(expr > #f)) #39=#(repeat #(expr repeat #f)) #40=#(0 #(expr 0 #f))) #(expr #41=(> repeat 0) #f)) #42=#((#43=#(loop #(expr loop #f)) #44=#((#45=#(- #(expr - #f)) #46=#(repeat #(expr repeat #f)) #47=#(1 #(expr 1 #f))) #(expr #48=(- repeat 1) #f)) #49=#((#50=#(my-try #(expr my-try #f)) #51=#(n #(expr n #f))) #(expr #52=(my-try n) #f))) #(expr #53=(loop #48# #52#) #f)) #54=#(result #(expr result #f))) #(expr #55=(if #41# #53# result) #f))) #(expr #56=(let loop #35# #55#) #f)))) #57=#(expr (define #25# #56#) #f)) #58=#(#2# go #f (#59=#(#4# #60=#(#6# #61=#(#6# #f (#62=#(#4# #61# () #t #12# #63=#(+ #(expr + #f)) #64=#(#2# + #f (#62# #65=#(#4# #66=#(#6# #67=#(#6# #68=#(#9# #69=#(#6# #70=#(#17# #71=#(#9# #72=#(#6# #73=#(#9# #74=#(#6# #75=#(#9# #76=#(#11# #f (#75#) #t #12# #((#(define #(expr define #f)) #((#77=#(create-x #(expr create-x #f)) . #78=(#79=#(n #(expr n #f)))) #(expr #80=(create-x n) #f)) . #81=(#((#(define #(expr define #f)) #82=#(result #(expr result #f)) #83=#((#84=#(make-vector #(expr make-vector #f)) #85=#(n #(expr n #f))) #(expr #86=(make-vector n) #f))) #(expr #87=(define result #86#) #f)) #88=#((#(do #(expr do #f)) #((#((#89=#(i #(expr i #f)) #90=#(0 #(expr 0 #f)) #91=#((#92=#(+ #(expr + #f)) #93=#(i #(expr i #f)) #94=#(1 #(expr 1 #f))) #(expr #95=(+ i 1) #f))) #(expr #96=(i 0 #95#) #f))) #(expr #97=(#96#) #f)) #((#98=#((#99=#(>= #(expr >= #f)) #100=#(i #(expr i #f)) #101=#(n #(expr n #f))) #(expr #102=(>= i n) #f)) #103=#(result #(expr result #f))) #(expr #104=(#102# result) #f)) #105=#((#106=#(vector-set! #(expr vector-set! #f)) #107=#(result #(expr result #f)) #108=#(i #(expr i #f)) #109=#(i #(expr i #f))) #(expr #110=(vector-set! result i i) #f))) #(expr #111=(do #97# #104# #110#) #f)))) #112=#(expr (define #80# #87# #111#) #f)) #113=#(#2# create-x #f (#114=#(#4# #115=#(#6# #5# (#114# #116=#(#4# #115# () #t #117=#((() . #f) () () #((#118=(#119=#(#2# n #8# (#116#) () #120=#(n #(expr n #f)) #f)) . #f) () () #12#)) #121=#(n #(expr n #f)) #119#)) #t #117# #122=#((#123=#(create-x #(expr create-x #f)) #121#) #(expr #124=(create-x n) #f))) () #t #117# #123# #113#)) (#76#) #77# #f)) (#74#) #t #12# #125=#((#(lambda #112#) #(#78# #112#) . #81#) #112#) "create-x" 1 #f #126=(#127=#(#2# n #75# (#128=#(#4# #129=#(#6# #130=#(#9# #72# (#129#) (#127# #131=#(#2# result #73# (#132=#(#4# #129# () (#131#) #133=#((#134=(#135=#(#2# i #71# (#136=#(#4# #66# () (#135#) #133# #93# #135#) #137=#(#4# #138=#(#6# #69# (#139=#(#4# #138# () () #133# #106# #140=#(#2# vector-set! #f (#141=#(#4# #142=#(#6# #143=#(#6# #144=#(#17# #145=#(#9# #146=#(#6# #147=#(#9# #148=#(#6# #149=#(#9# #150=#(#6# #151=#(#9# #152=#(#11# #f (#151#) #t #12# #((#(define #(expr define #f)) #((#153=#(create-y #(expr create-y #f)) . #154=(#155=#(x #(expr x #f)))) #(expr #156=(create-y x) #f)) . #157=(#((#(let* #(expr let* #f)) #((#158=#((#159=#(n #(expr n #f)) #160=#((#161=#(vector-length #(expr vector-length #f)) #162=#(x #(expr x #f))) #(expr #163=(vector-length x) #f))) #(expr #164=(n #163#) #f)) #165=#((#166=#(result #(expr result #f)) #167=#((#168=#(make-vector #(expr make-vector #f)) #169=#(n #(expr n #f))) #(expr #170=(make-vector n) #f))) #(expr #171=(result #170#) #f))) #(expr #172=(#164# #171#) #f)) #173=#((#(do #(expr do #f)) #((#((#174=#(i #(expr i #f)) #175=#((#176=#(- #(expr - #f)) #177=#(n #(expr n #f)) #178=#(1 #(expr 1 #f))) #(expr #179=(- n 1) #f)) #180=#((#181=#(- #(expr - #f)) #182=#(i #(expr i #f)) #183=#(1 #(expr 1 #f))) #(expr #184=(- i 1) #f))) #(expr #185=(i #179# #184#) #f))) #(expr #186=(#185#) #f)) #((#187=#((#188=#(< #(expr < #f)) #189=#(i #(expr i #f)) #190=#(0 #(expr 0 #f))) #(expr #191=(< i 0) #f)) #192=#(result #(expr result #f))) #(expr #193=(#191# result) #f)) #194=#((#195=#(vector-set! #(expr vector-set! #f)) #196=#(result #(expr result #f)) #197=#(i #(expr i #f)) #198=#((#199=#(vector-ref #(expr vector-ref #f)) #200=#(x #(expr x #f)) #201=#(i #(expr i #f))) #(expr #202=(vector-ref x i) #f))) #(expr #203=(vector-set! result i #202#) #f))) #(expr #204=(do #186# #193# #203#) #f))) #(expr #205=(let* #172# #204#) #f)))) #206=#(expr (define #156# #205#) #f)) #1#) (#150#) #t #12# #((#(lambda #206#) #(#154# #206#) . #157#) #206#) "create-y" 1 #f #207=(#208=#(#2# x #151# (#209=#(#4# #210=#(#6# #211=#(#9# #146# (#210#) (#208# #212=#(#2# result #147# (#213=#(#4# #210# () (#212#) #214=#((#215=(#216=#(#2# i #145# (#217=#(#4# #218=#(#6# #219=#(#6# #220=#(#9# #143# (#219#) (#221=#(#2# loop #211# (#222=#(#4# #210# () (#221#) #214# #173# #221#) #223=#(#4# #219# () (#221#) #214# #173# #221#)) () #173# #f) #224=#(#2# x #145# (#225=#(#4# #226=#(#6# #142# (#227=#(#4# #226# () () #214# #199# #228=#(#2# vector-ref #f (#227#) () #199# #f)) #225# #229=#(#4# #226# () #230=(#216#) #214# #201# #216#)) #231=(#224# . #230#) #214# #198#) () (#224#) #214# #200# #224#) #232=#(#4# #219# () (#224#) #214# #155# #224#)) () #155# #f) #233=#(#2# result #145# (#234=#(#4# #142# () (#233#) #214# #196# #233#) #235=#(#4# #219# () (#233#) #214# #166# #233#) #236=#(#4# #144# () (#233#) #214# #192# #233#)) () #166# #f) #216#) #214# #173# #f 1 #f (#(#2# temp #220# () () #173# #f))) (#223# #232# #235# #218#) (#221# #224# #233# . #237=(#216#)) #214# #173#) (#238=#(#4# #218# () () #214# #181# #239=#(#2# - #f (#240=#(#4# #241=#(#6# #242=#(#6# #16# (#243=#(#4# #242# () #t #244=#((() . #f) () () #245=#(((#246=#(#2# loop #247=#(#9# #19# (#248=#(#6# #247# (#249=#(#4# #248# () #t #245# #27# #246#) #250=#(#4# #248# () #t #245# #24# #251=#(#2# n #20# (#250#) () #24# #f)) #(#252=(cst-tag) #248# () #t #253=#((() . #f) () () #((#254=(#251#) . #f) () () #12#)) #30# 100) #(#252# #248# () #t #253# #33# 0)) #t #245# #27#)) #t #245# #27# #f 1 #f (#246#)) (#249# #243#) () #28# #f)) . #f) () () #((#255=(#256=#(#2# repeat #18# (#257=#(#4# #241# () #t #244# #46# #256#) #258=#(#4# #15# () #t #244# #39# #256#)) () #29# #f) #259=#(#2# result #18# (#260=#(#4# #16# () #t #244# #54# #259#)) () #32# #f)) . #f) () () #253#))) #43# #246#) #261=#(#4# #242# () #t #245# #24# #262=#(#2# n #18# (#263=#(#4# #264=#(#6# #242# (#265=#(#4# #264# () #t #244# #50# #266=#(#2# my-try #f (#265#) (#10#) #267=#(my-try #(expr my-try #f)) #f)) #263#) #t #244# #49#) () #t #244# #51# #262#) #261#) () #24# #f)) #241# #264#) #t #244# #42#) (#240# #257# #(#252# #241# () #t #244# #47# 1)) #t #244# #44#) () #t #244# #45# #239#) #268=#(#4# #269=#(#6# #210# (#268# #270=#(#4# #269# () (#271=#(#2# n #149# (#270# #272=#(#4# #273=#(#6# #148# (#274=#(#4# #273# () () #275=#(((#271#) . #f) () () #276=#((() . #f) () () #((#207# . #f) () () #12#))) #168# #277=#(#2# make-vector #f (#274# #278=#(#4# #279=#(#6# #74# (#278# #280=#(#4# #279# () #281=(#127#) #282=#(((#131#) . #f) () () #((#126# . #f) () () #12#)) #85# #127#)) #281# #282# #83#) () () #282# #84# #277#)) () #84# #f)) #272#) #283=(#271#) #275# #167#) () #283# #275# #169# #271#)) () #159# #f)) #284=#((() . #f) () () #285=#(((#212#) . #f) () () #275#)) #177# #271#) #(#252# #269# () () #284# #178# 1)) #286=(#271#) #284# #175#) () () #284# #176# #239#) #238# #287=#(#4# #288=#(#6# #289=#(#6# #290=#(#17# #291=#(#17# #292=#(#9# #293=#(#11# #f (#292#) #t #12# #((#(define #(expr define #f)) #((#294=#(ack #(expr ack #f)) . #295=(#296=#(m #(expr m #f)) #297=#(n #(expr n #f)))) #(expr #298=(ack m n) #f)) . #299=(#((#(cond #(expr cond #f)) #300=#((#301=#((#302=#(= #(expr = #f)) #303=#(m #(expr m #f)) #304=#(0 #(expr 0 #f))) #(expr #305=(= m 0) #f)) #306=#((#307=#(+ #(expr + #f)) #308=#(n #(expr n #f)) #309=#(1 #(expr 1 #f))) #(expr #310=(+ n 1) #f))) #(expr #311=(#305# #310#) #f)) #312=#((#313=#((#314=#(= #(expr = #f)) #315=#(n #(expr n #f)) #316=#(0 #(expr 0 #f))) #(expr #317=(= n 0) #f)) #318=#((#319=#(ack #(expr ack #f)) #320=#((#321=#(- #(expr - #f)) #322=#(m #(expr m #f)) #323=#(1 #(expr 1 #f))) #(expr #324=(- m 1) #f)) #325=#(1 #(expr 1 #f))) #(expr #326=(ack #324# 1) #f))) #(expr #327=(#317# #326#) #f)) #((#(else #(expr else #f)) #328=#((#329=#(ack #(expr ack #f)) #330=#((#331=#(- #(expr - #f)) #332=#(m #(expr m #f)) #333=#(1 #(expr 1 #f))) #(expr #334=(- m 1) #f)) #335=#((#336=#(ack #(expr ack #f)) #337=#(m #(expr m #f)) #338=#((#339=#(- #(expr - #f)) #340=#(n #(expr n #f)) #341=#(1 #(expr 1 #f))) #(expr #342=(- n 1) #f))) #(expr #343=(ack m #342#) #f))) #(expr #344=(ack #334# #343#) #f))) #(expr #345=(else #344#) #f))) #(expr #346=(cond #311# #327# #345#) #f)))) #347=#(expr (define #298# #346#) #f)) #348=#(#2# ack #f (#349=#(#4# #350=#(#6# #61# (#349# #(#252# #350# () #t #12# #351=#(3 #(expr 3 #f)) 3) #(#252# #350# () #t #12# #352=#(9 #(expr 9 #f)) 9)) #t #12# #353=#((#354=#(ack #(expr ack #f)) #351# #352#) #(expr #355=(ack 3 9) #f))) () #t #12# #354# #348#) #356=#(#4# #289# () () #357=#((() . #f) () () #((#358=(#359=#(#2# m #292# (#360=#(#4# #288# () (#359#) #357# #322# #359#) #361=#(#4# #362=#(#6# #363=#(#6# #290# (#364=#(#4# #363# () () #357# #329# #348#) #365=#(#6# #363# (#366=#(#4# #365# () () #357# #331# #239#) #367=#(#4# #365# () (#359#) #357# #332# #359#) #(#252# #365# () () #357# #333# 1)) (#359#) #357# #330#) #362#) #368=(#359# . #369=(#370=#(#2# n #292# (#371=#(#4# #372=#(#6# #291# (#373=#(#4# #372# () () #357# #307# #64#) #371# #(#252# #372# () () #357# #309# 1)) (#370#) #357# #306#) () (#370#) #357# #308# #370#) #374=#(#4# #375=#(#6# #362# (#376=#(#4# #375# () () #357# #339# #239#) #374# #(#252# #375# () () #357# #341# 1)) #369# #357# #338#) () (#370#) #357# #340# #370#) #377=#(#4# #378=#(#6# #290# (#379=#(#4# #378# () () #357# #314# #380=#(#2# = #f (#379# #381=#(#4# #382=#(#6# #291# (#381# #383=#(#4# #382# () (#359#) #357# #303# #359#) #(#252# #382# () () #357# #304# 0)) (#359#) #357# #301#) () () #357# #302# #380#)) () #314# #f)) #377# #(#252# #378# () () #357# #316# 0)) (#370#) #357# #313#) () (#370#) #357# #315# #370#)) () #297# #f))) #357# #328#) (#384=#(#4# #362# () () #357# #336# #348#) #361# #375#) #368# #357# #335#) () (#359#) #357# #337# #359#) #367# #383#) () #296# #f) #370#) . #f) () () #12#)) #319# #348#) #364# #384#) (#293#) #294# #f)) (#291#) #t #12# #((#(lambda #347#) #(#295# #347#) . #299#) #347#) "ack" 2 #f #358#) (#382# #372# #290#) #368# #357# #300#) (#378# #289# #363#) #368# #357# #312#) (#356# #288# #(#252# #289# () () #357# #325# 1)) (#359#) #357# #318#) (#287# #360# #(#252# #288# () () #357# #323# 1)) (#359#) #357# #320#) () () #357# #321# #239#) #376# #366# #385=#(#4# #386=#(#6# #387=#(#6# #388=#(#6# #389=#(#17# #390=#(#9# #391=#(#11# #f (#390#) #t #12# #((#(define #(expr define #f)) #((#392=#(tak #(expr tak #f)) . #393=(#394=#(x #(expr x #f)) #395=#(y #(expr y #f)) #396=#(z #(expr z #f)))) #(expr #397=(tak x y z) #f)) . #398=(#399=#((#(if #(expr if #f)) #400=#((#401=#(not #(expr not #f)) #402=#((#403=#(< #(expr < #f)) #404=#(y #(expr y #f)) #405=#(x #(expr x #f))) #(expr #406=(< y x) #f))) #(expr #407=(not #406#) #f)) #408=#(z #(expr z #f)) #409=#((#410=#(tak #(expr tak #f)) #411=#((#412=#(tak #(expr tak #f)) #413=#((#414=#(- #(expr - #f)) #415=#(x #(expr x #f)) #416=#(1 #(expr 1 #f))) #(expr #417=(- x 1) #f)) #418=#(y #(expr y #f)) #419=#(z #(expr z #f))) #(expr #420=(tak #417# y z) #f)) #421=#((#422=#(tak #(expr tak #f)) #423=#((#424=#(- #(expr - #f)) #425=#(y #(expr y #f)) #426=#(1 #(expr 1 #f))) #(expr #427=(- y 1) #f)) #428=#(z #(expr z #f)) #429=#(x #(expr x #f))) #(expr #430=(tak #427# z x) #f)) #431=#((#432=#(tak #(expr tak #f)) #433=#((#434=#(- #(expr - #f)) #435=#(z #(expr z #f)) #436=#(1 #(expr 1 #f))) #(expr #437=(- z 1) #f)) #438=#(x #(expr x #f)) #439=#(y #(expr y #f))) #(expr #440=(tak #437# x y) #f))) #(expr #441=(tak #420# #430# #440#) #f))) #(expr #442=(if #407# z #441#) #f)))) #443=#(expr (define #397# #442#) #f)) #444=#(#2# tak #f (#445=#(#4# #446=#(#6# #61# (#445# #(#252# #446# () #t #12# #447=#(18 #(expr 18 #f)) 18) #(#252# #446# () #t #12# #448=#(12 #(expr 12 #f)) 12) #(#252# #446# () #t #12# #449=#(6 #(expr 6 #f)) 6)) #t #12# #450=#((#451=#(tak #(expr tak #f)) #447# #448# #449#) #(expr #452=(tak 18 12 6) #f))) () #t #12# #451# #444#) #453=#(#4# #388# () () #454=#((() . #f) () () #((#455=(#456=#(#2# x #390# (#457=#(#4# #387# () (#456#) #454# #438# #456#) #458=#(#4# #459=#(#6# #388# (#460=#(#4# #459# () () #454# #422# #444#) #461=#(#6# #459# (#462=#(#4# #461# () () #454# #424# #239#) #463=#(#4# #461# () (#464=#(#2# y #390# (#465=#(#4# #387# () #466=(#464#) #454# #439# #464#) #463# #467=#(#4# #468=#(#6# #388# (#469=#(#4# #468# () () #454# #412# #444#) #470=#(#6# #468# (#471=#(#4# #470# () () #454# #414# #239#) #472=#(#4# #470# () (#456#) #454# #415# #456#) #(#252# #470# () () #454# #416# 1)) (#456#) #454# #413#) #467# #473=#(#4# #468# () #474=(#475=#(#2# z #390# (#476=#(#4# #389# () (#475#) #454# #408# #475#) #477=#(#4# #386# () (#475#) #454# #435# #475#) #478=#(#4# #459# () (#475#) #454# #428# #475#) #473#) () #396# #f)) #454# #419# #475#)) (#456# #464# . #474#) #454# #411#) () (#464#) #454# #418# #464#) #479=#(#4# #480=#(#6# #481=#(#6# #389# (#482=#(#4# #481# () () #454# #401# #483=#(#2# not #f (#482#) () #401# #f)) #480#) #484=(#464# . #485=(#456#)) #454# #400#) (#486=#(#4# #480# () () #454# #403# #487=#(#2# < #f (#488=#(#4# #489=#(#6# #144# (#488# #490=#(#4# #489# () (#216#) #214# #189# #216#) #(#252# #489# () () #214# #190# 0)) (#216#) #214# #187#) () () #214# #188# #487#) #486# #491=#(#4# #492=#(#6# #493=#(#17# #494=#(#9# #495=#(#11# #f (#494#) #t #12# #((#(define #(expr define #f)) #((#496=#(fib #(expr fib #f)) . #497=(#498=#(n #(expr n #f)))) #(expr #499=(fib n) #f)) . #500=(#501=#((#(if #(expr if #f)) #502=#((#503=#(< #(expr < #f)) #504=#(n #(expr n #f)) #505=#(2 #(expr 2 #f))) #(expr #506=(< n 2) #f)) #507=#(n #(expr n #f)) #508=#((#509=#(+ #(expr + #f)) #510=#((#511=#(fib #(expr fib #f)) #512=#((#513=#(- #(expr - #f)) #514=#(n #(expr n #f)) #515=#(1 #(expr 1 #f))) #(expr #516=(- n 1) #f))) #(expr #517=(fib #516#) #f)) #518=#((#519=#(fib #(expr fib #f)) #520=#((#521=#(- #(expr - #f)) #522=#(n #(expr n #f)) #523=#(2 #(expr 2 #f))) #(expr #524=(- n 2) #f))) #(expr #525=(fib #524#) #f))) #(expr #526=(+ #517# #525#) #f))) #(expr #527=(if #506# n #526#) #f)))) #528=#(expr (define #499# #527#) #f)) #529=#(#2# fib #f (#530=#(#4# #531=#(#6# #61# (#530# #(#252# #531# () #t #12# #532=#(20 #(expr 20 #f)) 20)) #t #12# #533=#((#534=#(fib #(expr fib #f)) #532#) #(expr #535=(fib 20) #f))) () #t #12# #534# #529#) #536=#(#4# #537=#(#6# #538=#(#6# #493# (#539=#(#4# #538# () () #540=#((() . #f) () () #((#541=(#542=#(#2# n #494# (#543=#(#4# #493# () (#542#) #540# #507# #542#) #544=#(#4# #545=#(#6# #537# (#546=#(#4# #545# () () #540# #521# #239#) #544# #(#252# #545# () () #540# #523# 2)) #547=(#542#) #540# #520#) () (#542#) #540# #522# #542#) #548=#(#4# #549=#(#6# #550=#(#6# #538# (#551=#(#4# #550# () () #540# #511# #529#) #549#) #552=(#542#) #540# #510#) (#553=#(#4# #549# () () #540# #513# #239#) #548# #(#252# #549# () () #540# #515# 1)) #552# #540# #512#) () (#542#) #540# #514# #542#) #554=#(#4# #492# () (#542#) #540# #504# #542#)) () #498# #f)) . #f) () () #12#)) #509# #64#) #550# #537#) #547# #540# #508#) (#536# #545#) #547# #540# #518#) () () #540# #519# #529#) #551#) (#495#) #496# #f)) (#493#) #t #12# #((#(lambda #528#) #(#497# #528#) . #500#) #528#) "fib" 1 #f #541#) (#492# #543# #538#) #547# #540# #501#) (#491# #554# #(#252# #492# () () #540# #505# 2)) (#542#) #540# #502#) () () #540# #503# #487#)) () #503# #f)) #479# #555=#(#4# #480# () #485# #454# #405# #456#)) #484# #454# #402#) () (#464#) #454# #404# #464#)) () #395# #f)) #454# #425# #464#) #(#252# #461# () () #454# #426# 1)) (#464#) #454# #423#) #478# #458#) (#464# #475# . #556=(#456#)) #454# #421#) () #556# #454# #429# #456#) #472# #555#) () #394# #f) #464# #475#) . #f) () () #12#)) #410# #444#) #557=#(#4# #387# () () #454# #432# #444#) #460# #469#) (#391#) #392# #f)) (#389#) #t #12# #((#(lambda #443#) #(#393# #443#) . #398#) #443#) "tak" 3 #f #455#) (#481# #476# #388#) #558=(#475# #456# . #466#) #454# #399#) (#453# #468# #459# #387#) #558# #454# #409#) (#557# #386# #457# #465#) #558# #454# #431#) (#385# #477# #(#252# #386# () () #454# #436# 1)) (#475#) #454# #433#) () () #454# #434# #239#) #462# #471# #546# #553#) () #513# #f)) #217# #(#252# #218# () () #214# #183# 1)) #237# #214# #180#) () (#216#) #214# #182# #216#) #229# #559=#(#4# #142# () (#216#) #214# #197# #216#) #490#) () #174# #f)) . #f) () () #284#) #166# #212#)) () #166# #f) #271#) #214# #173# #f 1 #f (#221#)) (#222# #209# #213# #269#) (#221# #208# #212# . #286#) #214# #173#) () (#208#) #214# #155# #208#) #560=#(#4# #561=#(#6# #150# (#562=#(#4# #561# () () #276# #161# #563=#(#2# vector-length #f (#564=#(#4# #7# () #t #117# #565=#(vector-length #(expr vector-length #f)) #563#) #562#) () #161# #f)) #560#) #566=(#208#) #276# #160#) () #566# #276# #162# #208#)) () #155# #f))) (#149# #561#) (#208#) #275# #158#) (#148#) (#208#) #275# #158# #f 1 #f (#271#)) (#147# #273#) (#208# #271#) #285# #165#) (#146#) (#208# #271#) #285# #165# #f 1 #f (#212#)) (#211# #145#) (#208# #212# #271#) #214# #173#) (#144#) (#221#) #214# #173# #f 3 #f (#224# #233# . #215#)) (#489# #236# #143#) #567=(#221# #233# #224# #216#) #214# #173#) (#220# #142#) #567# #214# #173#) (#141# #234# #559# #226#) (#233# . #231#) #214# #194#) () () #214# #195# #140#) #139#) () #106# #f)) #568=#(#4# #138# () (#569=#(#2# result #71# (#568# #570=#(#4# #67# () (#569#) #133# #82# #569#) #571=#(#4# #70# () (#569#) #133# #103# #569#)) () #82# #f)) #133# #107# #569#) #572=#(#4# #138# () (#135#) #133# #108# #135#) #137#) (#569# . #573=(#135#)) #133# #105#) () #573# #133# #109# #135#) #572# #574=#(#4# #575=#(#6# #70# (#576=#(#4# #575# () () #133# #99# #577=#(#2# >= #f (#576#) () #99# #f)) #574# #578=#(#4# #575# () #579=(#580=#(#2# n #71# (#581=#(#4# #67# () (#580#) #133# #79# #580#) #578#) () #79# #f)) #133# #101# #580#)) (#135# . #579#) #133# #98#) () (#135#) #133# #100# #135#)) () #89# #f)) . #f) () () #582=#((() . #f) () () #282#)) #82# #131#)) () #82# #f)) #133# #88# #f 1 #f (#583=#(#2# loop #130# (#584=#(#4# #129# () (#583#) #133# #88# #583#) #585=#(#4# #67# () (#583#) #133# #88# #583#)) () #88# #f))) (#584# #128# #132# #(#252# #129# () () #582# #90# 0)) (#583# #127# #131#) #133# #88#) () (#127#) #133# #79# #127#) #280#) () #79# #f))) (#73# #279#) (#127#) #282# #125#) (#72#) (#127#) #282# #125# #f 1 #f (#131#)) (#130# #71#) (#127# #131#) #133# #88#) (#70#) (#583#) #133# #88# #f 3 #f (#580# #569# . #134#)) (#575# #571# #69#) #586=(#583# #580# #569# #135#) #133# #88#) (#68# #138#) #586# #133# #88#) (#67#) (#583# #580# #569# #135#) #133# #88# #f 1 #f (#(#2# temp #68# () () #88# #f))) (#585# #581# #570# #66#) (#583# #580# #569# . #587=(#135#)) #133# #88#) (#65# #136# #(#252# #66# () () #133# #94# 1)) #587# #133# #91#) () () #133# #92# #64#) #373# #539#) () #509# #f)) #531# #446# #350# #60#) #t #12# #((#63# #533# #450# #353# #588=#((#589=#(go #(expr go #f)) #590=#(200000 #(expr 200000 #f))) #(expr #591=(go 200000) #f))) #(expr (+ #535# #452# #355# #591#) #f))) (#59# #(#252# #60# () #t #12# #590# 200000)) #t #12# #588#) () #t #12# #589# #58#)) (#21#) #22# #f)) (#19#) #t #12# #((#(lambda #57#) #(#23# #57#) . #26#) #57#) "go" 1 #f #254#) (#247# #18#) #t #245# #27#) (#16#) #t #245# #27# "loop" 3 #f (#262# . #255#)) (#15# #242# #260#) #t #244# #36#) (#14# #258# #(#252# #15# () #t #244# #40# 0)) #t #244# #37#) () #t #244# #38# #13#)) () #38# #f) #58# #266# #228# #563# #1# #577# #140# #277# #113# #380# #348# #483# #444# #487# #239# #64# #529#) . #f) () ((compilation-strategy block) (safe #f) (arith fixnum) (standard-bindings #t)) #f) #((#(define #(expr define #f)) #((#267# . #592=(#120#)) #(expr #593=(my-try n) #f)) . #594=(#595=#((#565# #596=#((#597=#(create-y #(expr create-y #f)) #122#) #(expr #598=(create-y #124#) #f))) #(expr #599=(vector-length #598#) #f)))) #600=#(expr (define #593# #599#) #f)) #266#) (#7#) #t #12# #((#(lambda #600#) #(#592# #600#) . #594#) #600#) "my-try" 1 #f #118#) (#564# #5#) #t #117# #595#) (#3# #115#) #t #117# #596#) () #t #117# #597# #1#)) (#152#) #153# #f) 20001 #<LAMBDA>)
   #7 in gen-define at /tmp/r7rs-benchmarks/TR7/compiler.scm:5201 args (#1=#(#2=(var-tag) create-y #f (#3=#(#4=(ref-tag) #5=#(#6=(app-tag) #7=#(#6# #8=#(#9=(prc-tag) #10=#(#11=(def-tag) #f (#8#) #t #12=#(((#13=#(#2# > #f (#14=#(#4# #15=#(#6# #16=#(#17=(tst-tag) #18=#(#9# #19=#(#6# #20=#(#9# #21=#(#11# #f (#20#) #t #12# #((#(define #(expr define #f)) #((#22=#(go #(expr go #f)) . #23=(#24=#(n #(expr n #f)))) #(expr #25=(go n) #f)) . #26=(#27=#((#(let #(expr let #f)) #28=#(loop #(expr loop #f)) #((#((#29=#(repeat #(expr repeat #f)) #30=#(100 #(expr 100 #f))) #(expr #31=(repeat 100) #f)) #((#32=#(result #(expr result #f)) #33=#(0 #(expr 0 #f))) #(expr #34=(result 0) #f))) #(expr #35=(#31# #34#) #f)) #36=#((#(if #(expr if #f)) #37=#((#38=#(> #(expr > #f)) #39=#(repeat #(expr repeat #f)) #40=#(0 #(expr 0 #f))) #(expr #41=(> repeat 0) #f)) #42=#((#43=#(loop #(expr loop #f)) #44=#((#45=#(- #(expr - #f)) #46=#(repeat #(expr repeat #f)) #47=#(1 #(expr 1 #f))) #(expr #48=(- repeat 1) #f)) #49=#((#50=#(my-try #(expr my-try #f)) #51=#(n #(expr n #f))) #(expr #52=(my-try n) #f))) #(expr #53=(loop #48# #52#) #f)) #54=#(result #(expr result #f))) #(expr #55=(if #41# #53# result) #f))) #(expr #56=(let loop #35# #55#) #f)))) #57=#(expr (define #25# #56#) #f)) #58=#(#2# go #f (#59=#(#4# #60=#(#6# #61=#(#6# #f (#62=#(#4# #61# () #t #12# #63=#(+ #(expr + #f)) #64=#(#2# + #f (#62# #65=#(#4# #66=#(#6# #67=#(#6# #68=#(#9# #69=#(#6# #70=#(#17# #71=#(#9# #72=#(#6# #73=#(#9# #74=#(#6# #75=#(#9# #76=#(#11# #f (#75#) #t #12# #((#(define #(expr define #f)) #((#77=#(create-x #(expr create-x #f)) . #78=(#79=#(n #(expr n #f)))) #(expr #80=(create-x n) #f)) . #81=(#((#(define #(expr define #f)) #82=#(result #(expr result #f)) #83=#((#84=#(make-vector #(expr make-vector #f)) #85=#(n #(expr n #f))) #(expr #86=(make-vector n) #f))) #(expr #87=(define result #86#) #f)) #88=#((#(do #(expr do #f)) #((#((#89=#(i #(expr i #f)) #90=#(0 #(expr 0 #f)) #91=#((#92=#(+ #(expr + #f)) #93=#(i #(expr i #f)) #94=#(1 #(expr 1 #f))) #(expr #95=(+ i 1) #f))) #(expr #96=(i 0 #95#) #f))) #(expr #97=(#96#) #f)) #((#98=#((#99=#(>= #(expr >= #f)) #100=#(i #(expr i #f)) #101=#(n #(expr n #f))) #(expr #102=(>= i n) #f)) #103=#(result #(expr result #f))) #(expr #104=(#102# result) #f)) #105=#((#106=#(vector-set! #(expr vector-set! #f)) #107=#(result #(expr result #f)) #108=#(i #(expr i #f)) #109=#(i #(expr i #f))) #(expr #110=(vector-set! result i i) #f))) #(expr #111=(do #97# #104# #110#) #f)))) #112=#(expr (define #80# #87# #111#) #f)) #113=#(#2# create-x #f (#114=#(#4# #115=#(#6# #5# (#114# #116=#(#4# #115# () #t #117=#((() . #f) () () #((#118=(#119=#(#2# n #8# (#116#) () #120=#(n #(expr n #f)) #f)) . #f) () () #12#)) #121=#(n #(expr n #f)) #119#)) #t #117# #122=#((#123=#(create-x #(expr create-x #f)) #121#) #(expr #124=(create-x n) #f))) () #t #117# #123# #113#)) (#76#) #77# #f)) (#74#) #t #12# #125=#((#(lambda #112#) #(#78# #112#) . #81#) #112#) "create-x" 1 #f #126=(#127=#(#2# n #75# (#128=#(#4# #129=#(#6# #130=#(#9# #72# (#129#) (#127# #131=#(#2# result #73# (#132=#(#4# #129# () (#131#) #133=#((#134=(#135=#(#2# i #71# (#136=#(#4# #66# () (#135#) #133# #93# #135#) #137=#(#4# #138=#(#6# #69# (#139=#(#4# #138# () () #133# #106# #140=#(#2# vector-set! #f (#141=#(#4# #142=#(#6# #143=#(#6# #144=#(#17# #145=#(#9# #146=#(#6# #147=#(#9# #148=#(#6# #149=#(#9# #150=#(#6# #151=#(#9# #152=#(#11# #f (#151#) #t #12# #((#(define #(expr define #f)) #((#153=#(create-y #(expr create-y #f)) . #154=(#155=#(x #(expr x #f)))) #(expr #156=(create-y x) #f)) . #157=(#((#(let* #(expr let* #f)) #((#158=#((#159=#(n #(expr n #f)) #160=#((#161=#(vector-length #(expr vector-length #f)) #162=#(x #(expr x #f))) #(expr #163=(vector-length x) #f))) #(expr #164=(n #163#) #f)) #165=#((#166=#(result #(expr result #f)) #167=#((#168=#(make-vector #(expr make-vector #f)) #169=#(n #(expr n #f))) #(expr #170=(make-vector n) #f))) #(expr #171=(result #170#) #f))) #(expr #172=(#164# #171#) #f)) #173=#((#(do #(expr do #f)) #((#((#174=#(i #(expr i #f)) #175=#((#176=#(- #(expr - #f)) #177=#(n #(expr n #f)) #178=#(1 #(expr 1 #f))) #(expr #179=(- n 1) #f)) #180=#((#181=#(- #(expr - #f)) #182=#(i #(expr i #f)) #183=#(1 #(expr 1 #f))) #(expr #184=(- i 1) #f))) #(expr #185=(i #179# #184#) #f))) #(expr #186=(#185#) #f)) #((#187=#((#188=#(< #(expr < #f)) #189=#(i #(expr i #f)) #190=#(0 #(expr 0 #f))) #(expr #191=(< i 0) #f)) #192=#(result #(expr result #f))) #(expr #193=(#191# result) #f)) #194=#((#195=#(vector-set! #(expr vector-set! #f)) #196=#(result #(expr result #f)) #197=#(i #(expr i #f)) #198=#((#199=#(vector-ref #(expr vector-ref #f)) #200=#(x #(expr x #f)) #201=#(i #(expr i #f))) #(expr #202=(vector-ref x i) #f))) #(expr #203=(vector-set! result i #202#) #f))) #(expr #204=(do #186# #193# #203#) #f))) #(expr #205=(let* #172# #204#) #f)))) #206=#(expr (define #156# #205#) #f)) #1#) (#150#) #t #12# #((#(lambda #206#) #(#154# #206#) . #157#) #206#) "create-y" 1 #f #207=(#208=#(#2# x #151# (#209=#(#4# #210=#(#6# #211=#(#9# #146# (#210#) (#208# #212=#(#2# result #147# (#213=#(#4# #210# () (#212#) #214=#((#215=(#216=#(#2# i #145# (#217=#(#4# #218=#(#6# #219=#(#6# #220=#(#9# #143# (#219#) (#221=#(#2# loop #211# (#222=#(#4# #210# () (#221#) #214# #173# #221#) #223=#(#4# #219# () (#221#) #214# #173# #221#)) () #173# #f) #224=#(#2# x #145# (#225=#(#4# #226=#(#6# #142# (#227=#(#4# #226# () () #214# #199# #228=#(#2# vector-ref #f (#227#) () #199# #f)) #225# #229=#(#4# #226# () #230=(#216#) #214# #201# #216#)) #231=(#224# . #230#) #214# #198#) () (#224#) #214# #200# #224#) #232=#(#4# #219# () (#224#) #214# #155# #224#)) () #155# #f) #233=#(#2# result #145# (#234=#(#4# #142# () (#233#) #214# #196# #233#) #235=#(#4# #219# () (#233#) #214# #166# #233#) #236=#(#4# #144# () (#233#) #214# #192# #233#)) () #166# #f) #216#) #214# #173# #f 1 #f (#(#2# temp #220# () () #173# #f))) (#223# #232# #235# #218#) (#221# #224# #233# . #237=(#216#)) #214# #173#) (#238=#(#4# #218# () () #214# #181# #239=#(#2# - #f (#240=#(#4# #241=#(#6# #242=#(#6# #16# (#243=#(#4# #242# () #t #244=#((() . #f) () () #245=#(((#246=#(#2# loop #247=#(#9# #19# (#248=#(#6# #247# (#249=#(#4# #248# () #t #245# #27# #246#) #250=#(#4# #248# () #t #245# #24# #251=#(#2# n #20# (#250#) () #24# #f)) #(#252=(cst-tag) #248# () #t #253=#((() . #f) () () #((#254=(#251#) . #f) () () #12#)) #30# 100) #(#252# #248# () #t #253# #33# 0)) #t #245# #27#)) #t #245# #27# #f 1 #f (#246#)) (#249# #243#) () #28# #f)) . #f) () () #((#255=(#256=#(#2# repeat #18# (#257=#(#4# #241# () #t #244# #46# #256#) #258=#(#4# #15# () #t #244# #39# #256#)) () #29# #f) #259=#(#2# result #18# (#260=#(#4# #16# () #t #244# #54# #259#)) () #32# #f)) . #f) () () #253#))) #43# #246#) #261=#(#4# #242# () #t #245# #24# #262=#(#2# n #18# (#263=#(#4# #264=#(#6# #242# (#265=#(#4# #264# () #t #244# #50# #266=#(#2# my-try #f (#265#) (#10#) #267=#(my-try #(expr my-try #f)) #f)) #263#) #t #244# #49#) () #t #244# #51# #262#) #261#) () #24# #f)) #241# #264#) #t #244# #42#) (#240# #257# #(#252# #241# () #t #244# #47# 1)) #t #244# #44#) () #t #244# #45# #239#) #268=#(#4# #269=#(#6# #210# (#268# #270=#(#4# #269# () (#271=#(#2# n #149# (#270# #272=#(#4# #273=#(#6# #148# (#274=#(#4# #273# () () #275=#(((#271#) . #f) () () #276=#((() . #f) () () #((#207# . #f) () () #12#))) #168# #277=#(#2# make-vector #f (#274# #278=#(#4# #279=#(#6# #74# (#278# #280=#(#4# #279# () #281=(#127#) #282=#(((#131#) . #f) () () #((#126# . #f) () () #12#)) #85# #127#)) #281# #282# #83#) () () #282# #84# #277#)) () #84# #f)) #272#) #283=(#271#) #275# #167#) () #283# #275# #169# #271#)) () #159# #f)) #284=#((() . #f) () () #285=#(((#212#) . #f) () () #275#)) #177# #271#) #(#252# #269# () () #284# #178# 1)) #286=(#271#) #284# #175#) () () #284# #176# #239#) #238# #287=#(#4# #288=#(#6# #289=#(#6# #290=#(#17# #291=#(#17# #292=#(#9# #293=#(#11# #f (#292#) #t #12# #((#(define #(expr define #f)) #((#294=#(ack #(expr ack #f)) . #295=(#296=#(m #(expr m #f)) #297=#(n #(expr n #f)))) #(expr #298=(ack m n) #f)) . #299=(#((#(cond #(expr cond #f)) #300=#((#301=#((#302=#(= #(expr = #f)) #303=#(m #(expr m #f)) #304=#(0 #(expr 0 #f))) #(expr #305=(= m 0) #f)) #306=#((#307=#(+ #(expr + #f)) #308=#(n #(expr n #f)) #309=#(1 #(expr 1 #f))) #(expr #310=(+ n 1) #f))) #(expr #311=(#305# #310#) #f)) #312=#((#313=#((#314=#(= #(expr = #f)) #315=#(n #(expr n #f)) #316=#(0 #(expr 0 #f))) #(expr #317=(= n 0) #f)) #318=#((#319=#(ack #(expr ack #f)) #320=#((#321=#(- #(expr - #f)) #322=#(m #(expr m #f)) #323=#(1 #(expr 1 #f))) #(expr #324=(- m 1) #f)) #325=#(1 #(expr 1 #f))) #(expr #326=(ack #324# 1) #f))) #(expr #327=(#317# #326#) #f)) #((#(else #(expr else #f)) #328=#((#329=#(ack #(expr ack #f)) #330=#((#331=#(- #(expr - #f)) #332=#(m #(expr m #f)) #333=#(1 #(expr 1 #f))) #(expr #334=(- m 1) #f)) #335=#((#336=#(ack #(expr ack #f)) #337=#(m #(expr m #f)) #338=#((#339=#(- #(expr - #f)) #340=#(n #(expr n #f)) #341=#(1 #(expr 1 #f))) #(expr #342=(- n 1) #f))) #(expr #343=(ack m #342#) #f))) #(expr #344=(ack #334# #343#) #f))) #(expr #345=(else #344#) #f))) #(expr #346=(cond #311# #327# #345#) #f)))) #347=#(expr (define #298# #346#) #f)) #348=#(#2# ack #f (#349=#(#4# #350=#(#6# #61# (#349# #(#252# #350# () #t #12# #351=#(3 #(expr 3 #f)) 3) #(#252# #350# () #t #12# #352=#(9 #(expr 9 #f)) 9)) #t #12# #353=#((#354=#(ack #(expr ack #f)) #351# #352#) #(expr #355=(ack 3 9) #f))) () #t #12# #354# #348#) #356=#(#4# #289# () () #357=#((() . #f) () () #((#358=(#359=#(#2# m #292# (#360=#(#4# #288# () (#359#) #357# #322# #359#) #361=#(#4# #362=#(#6# #363=#(#6# #290# (#364=#(#4# #363# () () #357# #329# #348#) #365=#(#6# #363# (#366=#(#4# #365# () () #357# #331# #239#) #367=#(#4# #365# () (#359#) #357# #332# #359#) #(#252# #365# () () #357# #333# 1)) (#359#) #357# #330#) #362#) #368=(#359# . #369=(#370=#(#2# n #292# (#371=#(#4# #372=#(#6# #291# (#373=#(#4# #372# () () #357# #307# #64#) #371# #(#252# #372# () () #357# #309# 1)) (#370#) #357# #306#) () (#370#) #357# #308# #370#) #374=#(#4# #375=#(#6# #362# (#376=#(#4# #375# () () #357# #339# #239#) #374# #(#252# #375# () () #357# #341# 1)) #369# #357# #338#) () (#370#) #357# #340# #370#) #377=#(#4# #378=#(#6# #290# (#379=#(#4# #378# () () #357# #314# #380=#(#2# = #f (#379# #381=#(#4# #382=#(#6# #291# (#381# #383=#(#4# #382# () (#359#) #357# #303# #359#) #(#252# #382# () () #357# #304# 0)) (#359#) #357# #301#) () () #357# #302# #380#)) () #314# #f)) #377# #(#252# #378# () () #357# #316# 0)) (#370#) #357# #313#) () (#370#) #357# #315# #370#)) () #297# #f))) #357# #328#) (#384=#(#4# #362# () () #357# #336# #348#) #361# #375#) #368# #357# #335#) () (#359#) #357# #337# #359#) #367# #383#) () #296# #f) #370#) . #f) () () #12#)) #319# #348#) #364# #384#) (#293#) #294# #f)) (#291#) #t #12# #((#(lambda #347#) #(#295# #347#) . #299#) #347#) "ack" 2 #f #358#) (#382# #372# #290#) #368# #357# #300#) (#378# #289# #363#) #368# #357# #312#) (#356# #288# #(#252# #289# () () #357# #325# 1)) (#359#) #357# #318#) (#287# #360# #(#252# #288# () () #357# #323# 1)) (#359#) #357# #320#) () () #357# #321# #239#) #376# #366# #385=#(#4# #386=#(#6# #387=#(#6# #388=#(#6# #389=#(#17# #390=#(#9# #391=#(#11# #f (#390#) #t #12# #((#(define #(expr define #f)) #((#392=#(tak #(expr tak #f)) . #393=(#394=#(x #(expr x #f)) #395=#(y #(expr y #f)) #396=#(z #(expr z #f)))) #(expr #397=(tak x y z) #f)) . #398=(#399=#((#(if #(expr if #f)) #400=#((#401=#(not #(expr not #f)) #402=#((#403=#(< #(expr < #f)) #404=#(y #(expr y #f)) #405=#(x #(expr x #f))) #(expr #406=(< y x) #f))) #(expr #407=(not #406#) #f)) #408=#(z #(expr z #f)) #409=#((#410=#(tak #(expr tak #f)) #411=#((#412=#(tak #(expr tak #f)) #413=#((#414=#(- #(expr - #f)) #415=#(x #(expr x #f)) #416=#(1 #(expr 1 #f))) #(expr #417=(- x 1) #f)) #418=#(y #(expr y #f)) #419=#(z #(expr z #f))) #(expr #420=(tak #417# y z) #f)) #421=#((#422=#(tak #(expr tak #f)) #423=#((#424=#(- #(expr - #f)) #425=#(y #(expr y #f)) #426=#(1 #(expr 1 #f))) #(expr #427=(- y 1) #f)) #428=#(z #(expr z #f)) #429=#(x #(expr x #f))) #(expr #430=(tak #427# z x) #f)) #431=#((#432=#(tak #(expr tak #f)) #433=#((#434=#(- #(expr - #f)) #435=#(z #(expr z #f)) #436=#(1 #(expr 1 #f))) #(expr #437=(- z 1) #f)) #438=#(x #(expr x #f)) #439=#(y #(expr y #f))) #(expr #440=(tak #437# x y) #f))) #(expr #441=(tak #420# #430# #440#) #f))) #(expr #442=(if #407# z #441#) #f)))) #443=#(expr (define #397# #442#) #f)) #444=#(#2# tak #f (#445=#(#4# #446=#(#6# #61# (#445# #(#252# #446# () #t #12# #447=#(18 #(expr 18 #f)) 18) #(#252# #446# () #t #12# #448=#(12 #(expr 12 #f)) 12) #(#252# #446# () #t #12# #449=#(6 #(expr 6 #f)) 6)) #t #12# #450=#((#451=#(tak #(expr tak #f)) #447# #448# #449#) #(expr #452=(tak 18 12 6) #f))) () #t #12# #451# #444#) #453=#(#4# #388# () () #454=#((() . #f) () () #((#455=(#456=#(#2# x #390# (#457=#(#4# #387# () (#456#) #454# #438# #456#) #458=#(#4# #459=#(#6# #388# (#460=#(#4# #459# () () #454# #422# #444#) #461=#(#6# #459# (#462=#(#4# #461# () () #454# #424# #239#) #463=#(#4# #461# () (#464=#(#2# y #390# (#465=#(#4# #387# () #466=(#464#) #454# #439# #464#) #463# #467=#(#4# #468=#(#6# #388# (#469=#(#4# #468# () () #454# #412# #444#) #470=#(#6# #468# (#471=#(#4# #470# () () #454# #414# #239#) #472=#(#4# #470# () (#456#) #454# #415# #456#) #(#252# #470# () () #454# #416# 1)) (#456#) #454# #413#) #467# #473=#(#4# #468# () #474=(#475=#(#2# z #390# (#476=#(#4# #389# () (#475#) #454# #408# #475#) #477=#(#4# #386# () (#475#) #454# #435# #475#) #478=#(#4# #459# () (#475#) #454# #428# #475#) #473#) () #396# #f)) #454# #419# #475#)) (#456# #464# . #474#) #454# #411#) () (#464#) #454# #418# #464#) #479=#(#4# #480=#(#6# #481=#(#6# #389# (#482=#(#4# #481# () () #454# #401# #483=#(#2# not #f (#482#) () #401# #f)) #480#) #484=(#464# . #485=(#456#)) #454# #400#) (#486=#(#4# #480# () () #454# #403# #487=#(#2# < #f (#488=#(#4# #489=#(#6# #144# (#488# #490=#(#4# #489# () (#216#) #214# #189# #216#) #(#252# #489# () () #214# #190# 0)) (#216#) #214# #187#) () () #214# #188# #487#) #486# #491=#(#4# #492=#(#6# #493=#(#17# #494=#(#9# #495=#(#11# #f (#494#) #t #12# #((#(define #(expr define #f)) #((#496=#(fib #(expr fib #f)) . #497=(#498=#(n #(expr n #f)))) #(expr #499=(fib n) #f)) . #500=(#501=#((#(if #(expr if #f)) #502=#((#503=#(< #(expr < #f)) #504=#(n #(expr n #f)) #505=#(2 #(expr 2 #f))) #(expr #506=(< n 2) #f)) #507=#(n #(expr n #f)) #508=#((#509=#(+ #(expr + #f)) #510=#((#511=#(fib #(expr fib #f)) #512=#((#513=#(- #(expr - #f)) #514=#(n #(expr n #f)) #515=#(1 #(expr 1 #f))) #(expr #516=(- n 1) #f))) #(expr #517=(fib #516#) #f)) #518=#((#519=#(fib #(expr fib #f)) #520=#((#521=#(- #(expr - #f)) #522=#(n #(expr n #f)) #523=#(2 #(expr 2 #f))) #(expr #524=(- n 2) #f))) #(expr #525=(fib #524#) #f))) #(expr #526=(+ #517# #525#) #f))) #(expr #527=(if #506# n #526#) #f)))) #528=#(expr (define #499# #527#) #f)) #529=#(#2# fib #f (#530=#(#4# #531=#(#6# #61# (#530# #(#252# #531# () #t #12# #532=#(20 #(expr 20 #f)) 20)) #t #12# #533=#((#534=#(fib #(expr fib #f)) #532#) #(expr #535=(fib 20) #f))) () #t #12# #534# #529#) #536=#(#4# #537=#(#6# #538=#(#6# #493# (#539=#(#4# #538# () () #540=#((() . #f) () () #((#541=(#542=#(#2# n #494# (#543=#(#4# #493# () (#542#) #540# #507# #542#) #544=#(#4# #545=#(#6# #537# (#546=#(#4# #545# () () #540# #521# #239#) #544# #(#252# #545# () () #540# #523# 2)) #547=(#542#) #540# #520#) () (#542#) #540# #522# #542#) #548=#(#4# #549=#(#6# #550=#(#6# #538# (#551=#(#4# #550# () () #540# #511# #529#) #549#) #552=(#542#) #540# #510#) (#553=#(#4# #549# () () #540# #513# #239#) #548# #(#252# #549# () () #540# #515# 1)) #552# #540# #512#) () (#542#) #540# #514# #542#) #554=#(#4# #492# () (#542#) #540# #504# #542#)) () #498# #f)) . #f) () () #12#)) #509# #64#) #550# #537#) #547# #540# #508#) (#536# #545#) #547# #540# #518#) () () #540# #519# #529#) #551#) (#495#) #496# #f)) (#493#) #t #12# #((#(lambda #528#) #(#497# #528#) . #500#) #528#) "fib" 1 #f #541#) (#492# #543# #538#) #547# #540# #501#) (#491# #554# #(#252# #492# () () #540# #505# 2)) (#542#) #540# #502#) () () #540# #503# #487#)) () #503# #f)) #479# #555=#(#4# #480# () #485# #454# #405# #456#)) #484# #454# #402#) () (#464#) #454# #404# #464#)) () #395# #f)) #454# #425# #464#) #(#252# #461# () () #454# #426# 1)) (#464#) #454# #423#) #478# #458#) (#464# #475# . #556=(#456#)) #454# #421#) () #556# #454# #429# #456#) #472# #555#) () #394# #f) #464# #475#) . #f) () () #12#)) #410# #444#) #557=#(#4# #387# () () #454# #432# #444#) #460# #469#) (#391#) #392# #f)) (#389#) #t #12# #((#(lambda #443#) #(#393# #443#) . #398#) #443#) "tak" 3 #f #455#) (#481# #476# #388#) #558=(#475# #456# . #466#) #454# #399#) (#453# #468# #459# #387#) #558# #454# #409#) (#557# #386# #457# #465#) #558# #454# #431#) (#385# #477# #(#252# #386# () () #454# #436# 1)) (#475#) #454# #433#) () () #454# #434# #239#) #462# #471# #546# #553#) () #513# #f)) #217# #(#252# #218# () () #214# #183# 1)) #237# #214# #180#) () (#216#) #214# #182# #216#) #229# #559=#(#4# #142# () (#216#) #214# #197# #216#) #490#) () #174# #f)) . #f) () () #284#) #166# #212#)) () #166# #f) #271#) #214# #173# #f 1 #f (#221#)) (#222# #209# #213# #269#) (#221# #208# #212# . #286#) #214# #173#) () (#208#) #214# #155# #208#) #560=#(#4# #561=#(#6# #150# (#562=#(#4# #561# () () #276# #161# #563=#(#2# vector-length #f (#564=#(#4# #7# () #t #117# #565=#(vector-length #(expr vector-length #f)) #563#) #562#) () #161# #f)) #560#) #566=(#208#) #276# #160#) () #566# #276# #162# #208#)) () #155# #f))) (#149# #561#) (#208#) #275# #158#) (#148#) (#208#) #275# #158# #f 1 #f (#271#)) (#147# #273#) (#208# #271#) #285# #165#) (#146#) (#208# #271#) #285# #165# #f 1 #f (#212#)) (#211# #145#) (#208# #212# #271#) #214# #173#) (#144#) (#221#) #214# #173# #f 3 #f (#224# #233# . #215#)) (#489# #236# #143#) #567=(#221# #233# #224# #216#) #214# #173#) (#220# #142#) #567# #214# #173#) (#141# #234# #559# #226#) (#233# . #231#) #214# #194#) () () #214# #195# #140#) #139#) () #106# #f)) #568=#(#4# #138# () (#569=#(#2# result #71# (#568# #570=#(#4# #67# () (#569#) #133# #82# #569#) #571=#(#4# #70# () (#569#) #133# #103# #569#)) () #82# #f)) #133# #107# #569#) #572=#(#4# #138# () (#135#) #133# #108# #135#) #137#) (#569# . #573=(#135#)) #133# #105#) () #573# #133# #109# #135#) #572# #574=#(#4# #575=#(#6# #70# (#576=#(#4# #575# () () #133# #99# #577=#(#2# >= #f (#576#) () #99# #f)) #574# #578=#(#4# #575# () #579=(#580=#(#2# n #71# (#581=#(#4# #67# () (#580#) #133# #79# #580#) #578#) () #79# #f)) #133# #101# #580#)) (#135# . #579#) #133# #98#) () (#135#) #133# #100# #135#)) () #89# #f)) . #f) () () #582=#((() . #f) () () #282#)) #82# #131#)) () #82# #f)) #133# #88# #f 1 #f (#583=#(#2# loop #130# (#584=#(#4# #129# () (#583#) #133# #88# #583#) #585=#(#4# #67# () (#583#) #133# #88# #583#)) () #88# #f))) (#584# #128# #132# #(#252# #129# () () #582# #90# 0)) (#583# #127# #131#) #133# #88#) () (#127#) #133# #79# #127#) #280#) () #79# #f))) (#73# #279#) (#127#) #282# #125#) (#72#) (#127#) #282# #125# #f 1 #f (#131#)) (#130# #71#) (#127# #131#) #133# #88#) (#70#) (#583#) #133# #88# #f 3 #f (#580# #569# . #134#)) (#575# #571# #69#) #586=(#583# #580# #569# #135#) #133# #88#) (#68# #138#) #586# #133# #88#) (#67#) (#583# #580# #569# #135#) #133# #88# #f 1 #f (#(#2# temp #68# () () #88# #f))) (#585# #581# #570# #66#) (#583# #580# #569# . #587=(#135#)) #133# #88#) (#65# #136# #(#252# #66# () () #133# #94# 1)) #587# #133# #91#) () () #133# #92# #64#) #373# #539#) () #509# #f)) #531# #446# #350# #60#) #t #12# #((#63# #533# #450# #353# #588=#((#589=#(go #(expr go #f)) #590=#(200000 #(expr 200000 #f))) #(expr #591=(go 200000) #f))) #(expr (+ #535# #452# #355# #591#) #f))) (#59# #(#252# #60# () #t #12# #590# 200000)) #t #12# #588#) () #t #12# #589# #58#)) (#21#) #22# #f)) (#19#) #t #12# #((#(lambda #57#) #(#23# #57#) . #26#) #57#) "go" 1 #f #254#) (#247# #18#) #t #245# #27#) (#16#) #t #245# #27# "loop" 3 #f (#262# . #255#)) (#15# #242# #260#) #t #244# #36#) (#14# #258# #(#252# #15# () #t #244# #40# 0)) #t #244# #37#) () #t #244# #38# #13#)) () #38# #f) #58# #266# #228# #563# #1# #577# #140# #277# #113# #380# #348# #483# #444# #487# #239# #64# #529#) . #f) () ((compilation-strategy block) (safe #f) (arith fixnum) (standard-bindings #t)) #f) #((#(define #(expr define #f)) #((#267# . #592=(#120#)) #(expr #593=(my-try n) #f)) . #594=(#595=#((#565# #596=#((#597=#(create-y #(expr create-y #f)) #122#) #(expr #598=(create-y #124#) #f))) #(expr #599=(vector-length #598#) #f)))) #600=#(expr (define #593# #599#) #f)) #266#) (#7#) #t #12# #((#(lambda #600#) #(#592# #600#) . #594#) #600#) "my-try" 1 #f #118#) (#564# #5#) #t #117# #595#) (#3# #115#) #t #117# #596#) () #t #117# #597# #1#)) (#152#) #153# #f) #151# #f)
   #8 in loop3 at /tmp/r7rs-benchmarks/TR7/compiler.scm:5110 args ((#1=#(#2=(def-tag) #f (#3=#(#4=(prc-tag) #1# (#5=#(#6=(app-tag) #3# (#7=#(#4# #5# (#8=#(#6# #7# (#9=#(#4# #8# (#10=#(#6# #9# (#11=#(#4# #10# (#12=#(#6# #11# (#13=#(#14=(ref-tag) #12# () (#15=#(#16=(var-tag) loop #11# (#13# #17=#(#14# #18=#(#6# #19=#(#4# #20=#(#6# #21=#(#22=(tst-tag) #23=#(#4# #10# (#21#) (#15#) #24=#((#25=(#26=#(#16# i #23# (#27=#(#14# #28=#(#6# #18# (#29=#(#14# #28# () () #24# #30=#(- #(expr - #f)) #31=#(#16# - #f (#32=#(#14# #33=#(#6# #34=#(#6# #35=#(#22# #36=#(#4# #37=#(#6# #38=#(#4# #39=#(#2# #f (#38#) #t #40=#(((#41=#(#16# > #f (#42=#(#14# #43=#(#6# #35# (#42# #44=#(#14# #43# () #t #45=#((() . #f) () () #46=#(((#47=#(#16# loop #48=#(#4# #37# (#49=#(#6# #48# (#50=#(#14# #49# () #t #46# #51=#((#(let #(expr let #f)) #52=#(loop #(expr loop #f)) #((#((#53=#(repeat #(expr repeat #f)) #54=#(100 #(expr 100 #f))) #(expr #55=(repeat 100) #f)) #((#56=#(result #(expr result #f)) #57=#(0 #(expr 0 #f))) #(expr #58=(result 0) #f))) #(expr #59=(#55# #58#) #f)) #60=#((#(if #(expr if #f)) #61=#((#62=#(> #(expr > #f)) #63=#(repeat #(expr repeat #f)) #64=#(0 #(expr 0 #f))) #(expr #65=(> repeat 0) #f)) #66=#((#67=#(loop #(expr loop #f)) #68=#((#69=#(- #(expr - #f)) #70=#(repeat #(expr repeat #f)) #71=#(1 #(expr 1 #f))) #(expr #72=(- repeat 1) #f)) #73=#((#74=#(my-try #(expr my-try #f)) #75=#(n #(expr n #f))) #(expr #76=(my-try n) #f))) #(expr #77=(loop #72# #76#) #f)) #78=#(result #(expr result #f))) #(expr #79=(if #65# #77# result) #f))) #(expr #80=(let loop #59# #79#) #f)) #47#) #81=#(#14# #49# () #t #46# #82=#(n #(expr n #f)) #83=#(#16# n #38# (#81#) () #82# #f)) #(#84=(cst-tag) #49# () #t #85=#((() . #f) () () #((#86=(#83#) . #f) () () #40#)) #54# 100) #(#84# #49# () #t #85# #57# 0)) #t #46# #51#)) #t #46# #51# #f 1 #f (#47#)) (#50# #87=#(#14# #34# () #t #45# #67# #47#)) () #52# #f)) . #f) () () #((#88=(#89=#(#16# repeat #36# (#90=#(#14# #33# () #t #45# #70# #89#) #44#) () #53# #f) #91=#(#16# result #36# (#92=#(#14# #35# () #t #45# #78# #91#)) () #56# #f)) . #f) () () #85#))) #63# #89#) #(#84# #43# () #t #45# #64# 0)) #t #45# #61#) () #t #45# #62# #41#)) () #62# #f) #93=#(#16# go #f (#94=#(#14# #95=#(#6# #96=#(#6# #f (#97=#(#14# #96# () #t #40# #98=#(+ #(expr + #f)) #99=#(#16# + #f (#97# #100=#(#14# #101=#(#6# #102=#(#6# #103=#(#4# #104=#(#6# #105=#(#22# #106=#(#4# #107=#(#6# #108=#(#4# #109=#(#6# #110=#(#4# #111=#(#2# #f (#110#) #t #40# #((#(define #(expr define #f)) #((#112=#(create-x #(expr create-x #f)) . #113=(#114=#(n #(expr n #f)))) #(expr #115=(create-x n) #f)) . #116=(#((#(define #(expr define #f)) #117=#(result #(expr result #f)) #118=#((#119=#(make-vector #(expr make-vector #f)) #120=#(n #(expr n #f))) #(expr #121=(make-vector n) #f))) #(expr #122=(define result #121#) #f)) #123=#((#(do #(expr do #f)) #((#((#124=#(i #(expr i #f)) #125=#(0 #(expr 0 #f)) #126=#((#127=#(+ #(expr + #f)) #128=#(i #(expr i #f)) #129=#(1 #(expr 1 #f))) #(expr #130=(+ i 1) #f))) #(expr #131=(i 0 #130#) #f))) #(expr #132=(#131#) #f)) #((#133=#((#134=#(>= #(expr >= #f)) #135=#(i #(expr i #f)) #136=#(n #(expr n #f))) #(expr #137=(>= i n) #f)) #138=#(result #(expr result #f))) #(expr #139=(#137# result) #f)) #140=#((#141=#(vector-set! #(expr vector-set! #f)) #142=#(result #(expr result #f)) #143=#(i #(expr i #f)) #144=#(i #(expr i #f))) #(expr #145=(vector-set! result i i) #f))) #(expr #146=(do #132# #139# #145#) #f)))) #147=#(expr (define #115# #122# #146#) #f)) #148=#(#16# create-x #f (#149=#(#14# #150=#(#6# #151=#(#6# #152=#(#6# #153=#(#4# #154=#(#2# #f (#153#) #t #40# #((#(define #(expr define #f)) #((#155=#(my-try #(expr my-try #f)) . #156=(#157=#(n #(expr n #f)))) #(expr #158=(my-try n) #f)) . #159=(#160=#((#161=#(vector-length #(expr vector-length #f)) #162=#((#163=#(create-y #(expr create-y #f)) #164=#((#165=#(create-x #(expr create-x #f)) #166=#(n #(expr n #f))) #(expr #167=(create-x n) #f))) #(expr #168=(create-y #167#) #f))) #(expr #169=(vector-length #168#) #f)))) #170=#(expr (define #158# #169#) #f)) #171=#(#16# my-try #f (#172=#(#14# #173=#(#6# #34# (#172# #174=#(#14# #173# () #t #45# #75# #175=#(#16# n #36# (#174# #176=#(#14# #34# () #t #46# #82# #175#)) () #82# #f))) #t #45# #73#) () #t #45# #74# #171#)) (#154#) #155# #f)) (#152#) #t #40# #((#(lambda #170#) #(#156# #170#) . #159#) #170#) "my-try" 1 #f #177=(#178=#(#16# n #153# (#179=#(#14# #150# () #t #180=#((() . #f) () () #((#177# . #f) () () #40#)) #166# #178#)) () #157# #f))) (#181=#(#14# #152# () #t #180# #161# #182=#(#16# vector-length #f (#181# #183=#(#14# #184=#(#6# #5# (#183# #185=#(#14# #184# () #186=(#187=#(#16# x #3# (#188=#(#14# #12# () (#187#) #24# #189=#(x #(expr x #f)) #187#) #185#) () #189# #f)) #190=#((() . #f) () () #((#191=(#187#) . #f) () () #40#)) #192=#(x #(expr x #f)) #187#)) #186# #190# #193=#((#194=#(vector-length #(expr vector-length #f)) #192#) #(expr #195=(vector-length x) #f))) () () #190# #194# #182#)) () #194# #f)) #151#) #t #180# #160#) (#196=#(#14# #151# () #t #180# #163# #197=#(#16# create-y #f (#196#) (#1#) #198=#(create-y #(expr create-y #f)) #f)) #150#) #t #180# #162#) (#149# #179#) #t #180# #164#) () #t #180# #165# #148#)) (#111#) #112# #f)) (#109#) #t #40# #199=#((#(lambda #147#) #(#113# #147#) . #116#) #147#) "create-x" 1 #f #200=(#201=#(#16# n #110# (#202=#(#14# #203=#(#6# #204=#(#4# #107# (#203#) (#201# #205=#(#16# result #108# (#206=#(#14# #203# () (#205#) #207=#((#208=(#209=#(#16# i #106# (#210=#(#14# #101# () (#209#) #207# #128# #209#) #211=#(#14# #212=#(#6# #104# (#213=#(#14# #212# () () #207# #141# #214=#(#16# vector-set! #f (#215=#(#14# #216=#(#6# #20# (#215# #217=#(#14# #216# () (#218=#(#16# result #23# (#217# #219=#(#14# #18# () (#218#) #24# #220=#(result #(expr result #f)) #218#) #221=#(#14# #21# () (#218#) #24# #222=#(result #(expr result #f)) #218#)) () #220# #f)) #24# #223=#(result #(expr result #f)) #218#) #224=#(#14# #216# () (#26#) #24# #225=#(i #(expr i #f)) #26#) #226=#(#6# #216# (#227=#(#14# #226# () () #24# #228=#(vector-ref #(expr vector-ref #f)) #229=#(#16# vector-ref #f (#227#) () #228# #f)) #230=#(#14# #226# () (#231=#(#16# x #23# (#230# #232=#(#14# #18# () (#231#) #24# #189# #231#)) () #189# #f)) #24# #233=#(x #(expr x #f)) #231#) #234=#(#14# #226# () #235=(#26#) #24# #236=#(i #(expr i #f)) #26#)) #237=(#231# . #235#) #24# #238=#((#228# #233# #236#) #(expr #239=(vector-ref x i) #f)))) (#218# . #237#) #24# #240=#((#241=#(vector-set! #(expr vector-set! #f)) #223# #225# #238#) #(expr #242=(vector-set! result i #239#) #f))) () () #24# #241# #214#) #213#) () #141# #f)) #243=#(#14# #212# () (#244=#(#16# result #106# (#243# #245=#(#14# #102# () (#244#) #207# #117# #244#) #246=#(#14# #105# () (#244#) #207# #138# #244#)) () #117# #f)) #207# #142# #244#) #247=#(#14# #212# () (#209#) #207# #143# #209#) #211#) (#244# . #248=(#209#)) #207# #140#) () #248# #207# #144# #209#) #247# #249=#(#14# #250=#(#6# #105# (#251=#(#14# #250# () () #207# #134# #252=#(#16# >= #f (#251#) () #134# #f)) #249# #253=#(#14# #250# () #254=(#255=#(#16# n #106# (#256=#(#14# #102# () (#255#) #207# #114# #255#) #253#) () #114# #f)) #207# #136# #255#)) (#209# . #254#) #207# #133#) () (#209#) #207# #135# #209#)) () #124# #f)) . #f) () () #257=#((() . #f) () () #258=#(((#205#) . #f) () () #((#200# . #f) () () #40#)))) #117# #205#)) () #117# #f)) #207# #123# #f 1 #f (#259=#(#16# loop #204# (#260=#(#14# #203# () (#259#) #207# #123# #259#) #261=#(#14# #102# () (#259#) #207# #123# #259#)) () #123# #f))) (#260# #202# #206# #(#84# #203# () () #257# #125# 0)) (#259# #201# #205#) #207# #123#) () (#201#) #207# #114# #201#) #262=#(#14# #263=#(#6# #109# (#264=#(#14# #263# () () #258# #119# #265=#(#16# make-vector #f (#266=#(#14# #267=#(#6# #8# (#266# #268=#(#14# #267# () #269=(#270=#(#16# n #7# (#271=#(#14# #272=#(#6# #12# (#273=#(#14# #272# () () #274=#((() . #f) () () #275=#(((#276=#(#16# result #9# (#277=#(#14# #12# () (#276#) #24# #220# #276#)) () #220# #f)) . #f) () () #278=#(((#270#) . #f) () () #190#))) #279=#(- #(expr - #f)) #31#) #271# #(#84# #272# () () #274# #280=#(1 #(expr 1 #f)) 1)) #281=(#270#) #274# #282=#((#279# #283=#(n #(expr n #f)) #280#) #(expr #284=(- n 1) #f))) () (#270#) #274# #283# #270#) #268#) () #285=#(n #(expr n #f)) #f)) #278# #286=#(n #(expr n #f)) #270#)) #269# #278# #287=#((#288=#(make-vector #(expr make-vector #f)) #286#) #(expr #289=(make-vector n) #f))) () () #278# #288# #265#) #264#) () #119# #f)) #262#) #290=(#201#) #258# #118#) () #290# #258# #120# #201#)) () #114# #f))) (#108# #263#) (#201#) #258# #199#) (#107#) (#201#) #258# #199# #f 1 #f (#205#)) (#204# #106#) (#201# #205#) #207# #123#) (#105#) (#259#) #207# #123# #f 3 #f (#255# #244# . #208#)) (#250# #246# #104#) #291=(#259# #255# #244# #209#) #207# #123#) (#103# #212#) #291# #207# #123#) (#102#) (#259# #255# #244# #209#) #207# #123# #f 1 #f (#(#16# temp #103# () () #123# #f))) (#261# #256# #245# #101#) (#259# #255# #244# . #292=(#209#)) #207# #123#) (#100# #210# #(#84# #101# () () #207# #129# 1)) #292# #207# #126#) () () #207# #127# #99#) #293=#(#14# #294=#(#6# #295=#(#22# #296=#(#4# #297=#(#2# #f (#296#) #t #40# #((#(define #(expr define #f)) #((#298=#(ack #(expr ack #f)) . #299=(#300=#(m #(expr m #f)) #301=#(n #(expr n #f)))) #(expr #302=(ack m n) #f)) . #303=(#((#(cond #(expr cond #f)) #304=#((#305=#((#306=#(= #(expr = #f)) #307=#(m #(expr m #f)) #308=#(0 #(expr 0 #f))) #(expr #309=(= m 0) #f)) #310=#((#311=#(+ #(expr + #f)) #312=#(n #(expr n #f)) #313=#(1 #(expr 1 #f))) #(expr #314=(+ n 1) #f))) #(expr #315=(#309# #314#) #f)) #316=#((#317=#((#318=#(= #(expr = #f)) #319=#(n #(expr n #f)) #320=#(0 #(expr 0 #f))) #(expr #321=(= n 0) #f)) #322=#((#323=#(ack #(expr ack #f)) #324=#((#325=#(- #(expr - #f)) #326=#(m #(expr m #f)) #327=#(1 #(expr 1 #f))) #(expr #328=(- m 1) #f)) #329=#(1 #(expr 1 #f))) #(expr #330=(ack #328# 1) #f))) #(expr #331=(#321# #330#) #f)) #((#(else #(expr else #f)) #332=#((#333=#(ack #(expr ack #f)) #334=#((#335=#(- #(expr - #f)) #336=#(m #(expr m #f)) #337=#(1 #(expr 1 #f))) #(expr #338=(- m 1) #f)) #339=#((#340=#(ack #(expr ack #f)) #341=#(m #(expr m #f)) #342=#((#343=#(- #(expr - #f)) #344=#(n #(expr n #f)) #345=#(1 #(expr 1 #f))) #(expr #346=(- n 1) #f))) #(expr #347=(ack m #346#) #f))) #(expr #348=(ack #338# #347#) #f))) #(expr #349=(else #348#) #f))) #(expr #350=(cond #315# #331# #349#) #f)))) #351=#(expr (define #302# #350#) #f)) #352=#(#16# ack #f (#353=#(#14# #354=#(#6# #96# (#353# #(#84# #354# () #t #40# #355=#(3 #(expr 3 #f)) 3) #(#84# #354# () #t #40# #356=#(9 #(expr 9 #f)) 9)) #t #40# #357=#((#358=#(ack #(expr ack #f)) #355# #356#) #(expr #359=(ack 3 9) #f))) () #t #40# #358# #352#) #360=#(#14# #361=#(#6# #362=#(#22# #295# (#363=#(#6# #362# (#364=#(#14# #363# () () #365=#((() . #f) () () #((#366=(#367=#(#16# m #296# (#368=#(#14# #369=#(#6# #361# (#370=#(#14# #369# () () #365# #325# #31#) #368# #(#84# #369# () () #365# #327# 1)) (#367#) #365# #324#) () (#367#) #365# #326# #367#) #371=#(#14# #372=#(#6# #373=#(#6# #362# (#374=#(#14# #373# () () #365# #333# #352#) #375=#(#6# #373# (#376=#(#14# #375# () () #365# #335# #31#) #377=#(#14# #375# () (#367#) #365# #336# #367#) #(#84# #375# () () #365# #337# 1)) (#367#) #365# #334#) #372#) #378=(#367# . #379=(#380=#(#16# n #296# (#381=#(#14# #294# () (#380#) #365# #312# #380#) #382=#(#14# #383=#(#6# #372# (#384=#(#14# #383# () () #365# #343# #31#) #382# #(#84# #383# () () #365# #345# 1)) #379# #365# #342#) () (#380#) #365# #344# #380#) #385=#(#14# #363# () (#380#) #365# #319# #380#)) () #301# #f))) #365# #332#) (#386=#(#14# #372# () () #365# #340# #352#) #371# #383#) #378# #365# #339#) () (#367#) #365# #341# #367#) #377# #387=#(#14# #388=#(#6# #295# (#389=#(#14# #388# () () #365# #306# #390=#(#16# = #f (#364# #389#) () #318# #f)) #387# #(#84# #388# () () #365# #308# 0)) (#367#) #365# #305#) () (#367#) #365# #307# #367#)) () #300# #f) #380#) . #f) () () #40#)) #318# #390#) #385# #(#84# #363# () () #365# #320# 0)) (#380#) #365# #317#) #361# #373#) #378# #365# #316#) (#360# #369# #(#84# #361# () () #365# #329# 1)) (#367#) #365# #322#) () () #365# #323# #352#) #374# #386#) (#297#) #298# #f)) (#295#) #t #40# #((#(lambda #351#) #(#299# #351#) . #303#) #351#) "ack" 2 #f #366#) (#388# #294# #362#) #378# #365# #304#) (#293# #381# #(#84# #294# () () #365# #313# 1)) (#380#) #365# #310#) () () #365# #311# #99#) #391=#(#14# #392=#(#6# #393=#(#22# #394=#(#4# #395=#(#2# #f (#394#) #t #40# #((#(define #(expr define #f)) #((#396=#(fib #(expr fib #f)) . #397=(#398=#(n #(expr n #f)))) #(expr #399=(fib n) #f)) . #400=(#401=#((#(if #(expr if #f)) #402=#((#403=#(< #(expr < #f)) #404=#(n #(expr n #f)) #405=#(2 #(expr 2 #f))) #(expr #406=(< n 2) #f)) #407=#(n #(expr n #f)) #408=#((#409=#(+ #(expr + #f)) #410=#((#411=#(fib #(expr fib #f)) #412=#((#413=#(- #(expr - #f)) #414=#(n #(expr n #f)) #415=#(1 #(expr 1 #f))) #(expr #416=(- n 1) #f))) #(expr #417=(fib #416#) #f)) #418=#((#419=#(fib #(expr fib #f)) #420=#((#421=#(- #(expr - #f)) #422=#(n #(expr n #f)) #423=#(2 #(expr 2 #f))) #(expr #424=(- n 2) #f))) #(expr #425=(fib #424#) #f))) #(expr #426=(+ #417# #425#) #f))) #(expr #427=(if #406# n #426#) #f)))) #428=#(expr (define #399# #427#) #f)) #429=#(#16# fib #f (#430=#(#14# #431=#(#6# #96# (#430# #(#84# #431# () #t #40# #432=#(20 #(expr 20 #f)) 20)) #t #40# #433=#((#434=#(fib #(expr fib #f)) #432#) #(expr #435=(fib 20) #f))) () #t #40# #434# #429#) #436=#(#14# #437=#(#6# #392# (#436# #438=#(#6# #437# (#439=#(#14# #438# () () #440=#((() . #f) () () #((#441=(#442=#(#16# n #394# (#443=#(#14# #393# () (#442#) #440# #407# #442#) #444=#(#14# #438# () (#442#) #440# #422# #442#) #445=#(#14# #446=#(#6# #447=#(#6# #392# (#448=#(#14# #447# () () #440# #411# #429#) #446#) #449=(#442#) #440# #410#) (#450=#(#14# #446# () () #440# #413# #31#) #445# #(#84# #446# () () #440# #415# 1)) #449# #440# #412#) () (#442#) #440# #414# #442#) #451=#(#14# #452=#(#6# #393# (#453=#(#14# #452# () () #440# #403# #454=#(#16# < #f (#455=#(#14# #456=#(#6# #21# (#455# #457=#(#14# #456# () (#26#) #24# #458=#(i #(expr i #f)) #26#) #(#84# #456# () () #24# #459=#(0 #(expr 0 #f)) 0)) (#26#) #24# #460=#((#461=#(< #(expr < #f)) #458# #459#) #(expr #462=(< i 0) #f))) () () #24# #461# #454#) #463=#(#14# #464=#(#6# #465=#(#6# #466=#(#22# #467=#(#4# #468=#(#2# #f (#467#) #t #40# #((#(define #(expr define #f)) #((#469=#(tak #(expr tak #f)) . #470=(#471=#(x #(expr x #f)) #472=#(y #(expr y #f)) #473=#(z #(expr z #f)))) #(expr #474=(tak x y z) #f)) . #475=(#476=#((#(if #(expr if #f)) #477=#((#478=#(not #(expr not #f)) #479=#((#480=#(< #(expr < #f)) #481=#(y #(expr y #f)) #482=#(x #(expr x #f))) #(expr #483=(< y x) #f))) #(expr #484=(not #483#) #f)) #485=#(z #(expr z #f)) #486=#((#487=#(tak #(expr tak #f)) #488=#((#489=#(tak #(expr tak #f)) #490=#((#491=#(- #(expr - #f)) #492=#(x #(expr x #f)) #493=#(1 #(expr 1 #f))) #(expr #494=(- x 1) #f)) #495=#(y #(expr y #f)) #496=#(z #(expr z #f))) #(expr #497=(tak #494# y z) #f)) #498=#((#499=#(tak #(expr tak #f)) #500=#((#501=#(- #(expr - #f)) #502=#(y #(expr y #f)) #503=#(1 #(expr 1 #f))) #(expr #504=(- y 1) #f)) #505=#(z #(expr z #f)) #506=#(x #(expr x #f))) #(expr #507=(tak #504# z x) #f)) #508=#((#509=#(tak #(expr tak #f)) #510=#((#511=#(- #(expr - #f)) #512=#(z #(expr z #f)) #513=#(1 #(expr 1 #f))) #(expr #514=(- z 1) #f)) #515=#(x #(expr x #f)) #516=#(y #(expr y #f))) #(expr #517=(tak #514# x y) #f))) #(expr #518=(tak #497# #507# #517#) #f))) #(expr #519=(if #484# z #518#) #f)))) #520=#(expr (define #474# #519#) #f)) #521=#(#16# tak #f (#522=#(#14# #523=#(#6# #96# (#522# #(#84# #523# () #t #40# #524=#(18 #(expr 18 #f)) 18) #(#84# #523# () #t #40# #525=#(12 #(expr 12 #f)) 12) #(#84# #523# () #t #40# #526=#(6 #(expr 6 #f)) 6)) #t #40# #527=#((#528=#(tak #(expr tak #f)) #524# #525# #526#) #(expr #529=(tak 18 12 6) #f))) () #t #40# #528# #521#) #530=#(#14# #531=#(#6# #466# (#530# #532=#(#6# #531# (#533=#(#14# #532# () () #534=#((() . #f) () () #((#535=(#536=#(#16# x #467# (#537=#(#14# #538=#(#6# #531# (#539=#(#14# #538# () () #534# #509# #521#) #540=#(#6# #538# (#541=#(#14# #540# () () #534# #511# #31#) #542=#(#14# #540# () (#543=#(#16# z #467# (#544=#(#14# #466# () (#543#) #534# #485# #543#) #542# #545=#(#14# #546=#(#6# #531# (#547=#(#14# #546# () () #534# #499# #521#) #548=#(#6# #546# (#549=#(#14# #548# () () #534# #501# #31#) #550=#(#14# #548# () (#551=#(#16# y #467# (#552=#(#14# #538# () #553=(#551#) #534# #516# #551#) #550# #554=#(#14# #532# () (#551#) #534# #495# #551#) #555=#(#14# #464# () (#551#) #534# #481# #551#)) () #472# #f)) #534# #502# #551#) #(#84# #548# () () #534# #503# 1)) (#551#) #534# #500#) #545# #556=#(#14# #546# () #557=(#536#) #534# #506# #536#)) (#551# #543# . #557#) #534# #498#) () (#543#) #534# #505# #543#) #558=#(#14# #532# () #559=(#543#) #534# #496# #543#)) () #473# #f)) #534# #512# #543#) #(#84# #540# () () #534# #513# 1)) (#543#) #534# #510#) #537# #552#) #560=(#543# #536# . #553#) #534# #508#) () (#536#) #534# #515# #536#) #556# #561=#(#14# #562=#(#6# #532# (#563=#(#14# #562# () () #534# #491# #31#) #561# #(#84# #562# () () #534# #493# 1)) (#536#) #534# #490#) () (#536#) #534# #492# #536#) #564=#(#14# #464# () #565=(#536#) #534# #482# #536#)) () #471# #f) #551# #543#) . #f) () () #40#)) #489# #521#) #562# #554# #558#) (#536# #551# . #559#) #534# #488#) #546# #538#) #560# #534# #486#) () () #534# #487# #521#) #539# #547# #533#) (#468#) #469# #f)) (#466#) #t #40# #((#(lambda #520#) #(#470# #520#) . #475#) #520#) "tak" 3 #f #535#) (#465# #544# #531#) #560# #534# #476#) (#566=#(#14# #465# () () #534# #478# #567=#(#16# not #f (#566#) () #478# #f)) #464#) #568=(#551# . #565#) #534# #477#) (#463# #555# #564#) #568# #534# #479#) () () #534# #480# #454#) #453#) () #403# #f)) #451# #(#84# #452# () () #440# #405# 2)) (#442#) #440# #402#) () (#442#) #440# #404# #442#)) () #398# #f)) . #f) () () #40#)) #421# #31#) #444# #(#84# #438# () () #440# #423# 2)) #569=(#442#) #440# #420#)) #569# #440# #418#) () () #440# #419# #429#) #448#) (#395#) #396# #f)) (#393#) #t #40# #((#(lambda #428#) #(#397# #428#) . #400#) #428#) "fib" 1 #f #441#) (#452# #443# #392#) #569# #440# #401#) (#391# #447# #437#) #569# #440# #408#) () () #440# #409# #99#)) () #409# #f)) #431# #523# #354# #95#) #t #40# #((#98# #433# #527# #357# #570=#((#571=#(go #(expr go #f)) #572=#(200000 #(expr 200000 #f))) #(expr #573=(go 200000) #f))) #(expr (+ #435# #529# #359# #573#) #f))) (#94# #(#84# #95# () #t #40# #572# 200000)) #t #40# #570#) () #t #40# #571# #93#)) (#39#) #574=#(go #(expr go #f)) #f) #171# #229# #182# #197# #252# #214# #265# #148# #390# #352# #567# #521# #454# #31# #99# #429#) . #f) () ((compilation-strategy block) (safe #f) (arith fixnum) (standard-bindings #t)) #f) #((#(define #(expr define #f)) #((#574# . #575=(#82#)) #(expr #576=(go n) #f)) . #577=(#51#)) #578=#(expr (define #576# #80#) #f)) #93#) (#37#) #t #40# #((#(lambda #578#) #(#575# #578#) . #577#) #578#) "go" 1 #f #86#) (#48# #36#) #t #46# #51#) (#35#) #t #46# #51# "loop" 3 #f (#175# . #88#)) (#43# #34# #92#) #t #45# #60#) (#87# #176# #33# #173#) #t #45# #66#) (#32# #90# #(#84# #33# () #t #45# #71# 1)) #t #45# #68#) () #t #45# #69# #31#) #273# #29# #370# #384# #376# #541# #549# #563# #439# #450#) () #413# #f)) #27# #(#84# #28# () () #24# #579=#(1 #(expr 1 #f)) 1)) #580=(#26#) #24# #581=#((#30# #582=#(i #(expr i #f)) #579#) #(expr #583=(- i 1) #f))) () (#26#) #24# #582# #26#) #234# #224# #457#) () #584=#(i #(expr i #f)) #f)) . #f) () () #274#) #585=#((#(do #(expr do #f)) #((#((#584# #282# #581#) #(expr #586=(i #284# #583#) #f))) #(expr #587=(#586#) #f)) #((#460# #222#) #(expr #588=(#462# result) #f)) #240#) #(expr #589=(do #587# #588# #242#) #f)) #f 3 #f (#231# #218# . #25#)) (#456# #221# #20#) #590=(#15# #218# #231# #26#) #24# #585#) (#19# #216#) #590# #24# #585#) (#18#) (#15# #231# #218# #26#) #24# #585# #f 1 #f (#(#16# temp #19# () () #585# #f))) (#17# #232# #219# #28#) (#15# #231# #218# . #580#) #24# #585#) () (#15#) #24# #585# #15#)) () #585# #f)) #24# #585# #15#) #188# #277# #272#) (#15# #187# #276# . #281#) #24# #585#)) (#187# #276# #270#) #24# #585# #f 1 #f (#15#)) #23#) (#187# #276# #270#) #24# #585#)) (#187# #270#) #275# #591=#((#220# #287#) #(expr #592=(result #289#) #f)) #f 1 #f (#276#)) #267#) (#187# #270#) #275# #591#)) (#187#) #278# #593=#((#285# #193#) #(expr #594=(n #195#) #f)) #f 1 #f (#270#)) #184#) (#187#) #278# #593#)) #t #40# #((#(lambda #595=#(expr (define #596=(create-y x) #597=(let* #598=(#594# #592#) #589#)) #f)) #(#599=(#189#) #595#) . #600=(#((#(let* #(expr let* #f)) #((#593# #591#) #(expr #598# #f)) #585#) #(expr #597# #f)))) #595#) "create-y" 1 #f #191#)) #t #40# #((#(define #(expr define #f)) #((#198# . #599#) #(expr #596# #f)) . #600#) #595#) #197#) #154# #39# #96#))
   #9 in compile-parsed-program at /tmp/r7rs-benchmarks/TR7/compiler.scm:5099 args ("program" (#1=#(#2=(def-tag) #f (#3=#(#4=(prc-tag) #1# (#5=#(#6=(tst-tag) #3# (#7=#(#8=(app-tag) #5# (#9=#(#10=(ref-tag) #7# () () #11=#((() . #f) () () #((#12=(#13=#(#14=(var-tag) n #3# (#15=#(#10# #5# () (#13#) #11# #16=#(n #(expr n #f)) #13#) #17=#(#10# #18=#(#8# #19=#(#8# #20=#(#8# #5# (#21=#(#10# #20# () () #11# #22=#(+ #(expr + #f)) #23=#(#14# + #f (#24=#(#10# #25=#(#8# #f (#24# #26=#(#8# #25# (#27=#(#10# #26# () #t #28=#(((#29=#(#14# > #f (#30=#(#10# #31=#(#8# #32=#(#6# #33=#(#4# #34=#(#8# #35=#(#4# #36=#(#2# #f (#35#) #t #28# #((#(define #(expr define #f)) #((#37=#(go #(expr go #f)) . #38=(#39=#(n #(expr n #f)))) #(expr #40=(go n) #f)) . #41=(#42=#((#(let #(expr let #f)) #43=#(loop #(expr loop #f)) #((#((#44=#(repeat #(expr repeat #f)) #45=#(100 #(expr 100 #f))) #(expr #46=(repeat 100) #f)) #((#47=#(result #(expr result #f)) #48=#(0 #(expr 0 #f))) #(expr #49=(result 0) #f))) #(expr #50=(#46# #49#) #f)) #51=#((#(if #(expr if #f)) #52=#((#53=#(> #(expr > #f)) #54=#(repeat #(expr repeat #f)) #55=#(0 #(expr 0 #f))) #(expr #56=(> repeat 0) #f)) #57=#((#58=#(loop #(expr loop #f)) #59=#((#60=#(- #(expr - #f)) #61=#(repeat #(expr repeat #f)) #62=#(1 #(expr 1 #f))) #(expr #63=(- repeat 1) #f)) #64=#((#65=#(my-try #(expr my-try #f)) #66=#(n #(expr n #f))) #(expr #67=(my-try n) #f))) #(expr #68=(loop #63# #67#) #f)) #69=#(result #(expr result #f))) #(expr #70=(if #56# #68# result) #f))) #(expr #71=(let loop #50# #70#) #f)))) #72=#(expr (define #40# #71#) #f)) #73=#(#14# go #f (#74=#(#10# #75=#(#8# #25# (#74# #(#76=(cst-tag) #75# () #t #28# #77=#(200000 #(expr 200000 #f)) 200000)) #t #28# #78=#((#79=#(go #(expr go #f)) #77#) #(expr #80=(go 200000) #f))) () #t #28# #79# #73#)) (#36#) #37# #f)) (#34#) #t #28# #((#(lambda #72#) #(#38# #72#) . #41#) #72#) "go" 1 #f #81=(#82=#(#14# n #35# (#83=#(#10# #84=#(#8# #85=#(#4# #34# (#84#) #t #86=#(((#87=#(#14# loop #85# (#88=#(#10# #84# () #t #86# #42# #87#) #89=#(#10# #90=#(#8# #32# (#89# #91=#(#10# #90# () #t #86# #39# #92=#(#14# n #33# (#93=#(#10# #94=#(#8# #90# (#95=#(#10# #94# () #t #96=#((() . #f) () () #86#) #65# #97=#(#14# my-try #f (#95#) (#98=#(#2# #f (#99=#(#4# #98# (#100=#(#8# #99# (#101=#(#10# #100# () #t #102=#((() . #f) () () #((#103=(#104=#(#14# n #99# (#105=#(#10# #106=#(#8# #107=#(#8# #100# (#108=#(#10# #107# () #t #102# #109=#(create-y #(expr create-y #f)) #110=#(#14# create-y #f (#108#) (#111=#(#2# #f (#112=#(#4# #111# (#113=#(#8# #112# (#114=#(#4# #113# (#115=#(#8# #114# (#116=#(#4# #115# (#117=#(#8# #116# (#118=#(#4# #117# (#119=#(#8# #118# (#120=#(#10# #119# () (#121=#(#14# loop #118# (#120# #122=#(#10# #123=#(#8# #124=#(#4# #125=#(#8# #126=#(#6# #127=#(#4# #117# (#126#) (#121#) #128=#((#129=(#130=#(#14# i #127# (#131=#(#10# #132=#(#8# #123# (#133=#(#10# #132# () () #128# #134=#(- #(expr - #f)) #135=#(#14# - #f (#136=#(#10# #137=#(#8# #90# (#136# #138=#(#10# #137# () #t #96# #61# #139=#(#14# repeat #33# (#138# #140=#(#10# #31# () #t #96# #54# #139#)) () #44# #f)) #(#76# #137# () #t #96# #62# 1)) #t #96# #59#) () #t #96# #60# #135#) #141=#(#10# #142=#(#8# #119# (#141# #143=#(#10# #142# () (#144=#(#14# n #114# (#143# #145=#(#10# #146=#(#8# #115# (#147=#(#10# #146# () () #148=#(((#144#) . #f) () () #149=#((() . #f) () () #((#150=(#151=#(#14# x #112# (#152=#(#10# #119# () (#151#) #128# #153=#(x #(expr x #f)) #151#) #154=#(#10# #155=#(#8# #113# (#156=#(#10# #155# () () #149# #157=#(vector-length #(expr vector-length #f)) #158=#(#14# vector-length #f (#101# #156#) () #157# #f)) #154#) #159=(#151#) #149# #160=#((#157# #161=#(x #(expr x #f))) #(expr #162=(vector-length x) #f))) () #159# #149# #161# #151#)) () #153# #f)) . #f) () () #28#))) #163=#(make-vector #(expr make-vector #f)) #164=#(#14# make-vector #f (#147# #165=#(#10# #166=#(#8# #167=#(#8# #168=#(#4# #169=#(#2# #f (#168#) #t #28# #((#(define #(expr define #f)) #((#170=#(create-x #(expr create-x #f)) . #171=(#172=#(n #(expr n #f)))) #(expr #173=(create-x n) #f)) . #174=(#((#(define #(expr define #f)) #175=#(result #(expr result #f)) #176=#((#177=#(make-vector #(expr make-vector #f)) #178=#(n #(expr n #f))) #(expr #179=(make-vector n) #f))) #(expr #180=(define result #179#) #f)) #181=#((#(do #(expr do #f)) #((#((#182=#(i #(expr i #f)) #183=#(0 #(expr 0 #f)) #184=#((#185=#(+ #(expr + #f)) #186=#(i #(expr i #f)) #187=#(1 #(expr 1 #f))) #(expr #188=(+ i 1) #f))) #(expr #189=(i 0 #188#) #f))) #(expr #190=(#189#) #f)) #((#191=#((#192=#(>= #(expr >= #f)) #193=#(i #(expr i #f)) #194=#(n #(expr n #f))) #(expr #195=(>= i n) #f)) #196=#(result #(expr result #f))) #(expr #197=(#195# result) #f)) #198=#((#199=#(vector-set! #(expr vector-set! #f)) #200=#(result #(expr result #f)) #201=#(i #(expr i #f)) #202=#(i #(expr i #f))) #(expr #203=(vector-set! result i i) #f))) #(expr #204=(do #190# #197# #203#) #f)))) #205=#(expr (define #173# #180# #204#) #f)) #206=#(#14# create-x #f (#207=#(#10# #106# () #t #102# #208=#(create-x #(expr create-x #f)) #206#)) (#169#) #170# #f)) (#167#) #t #28# #209=#((#(lambda #205#) #(#171# #205#) . #174#) #205#) "create-x" 1 #f #210=(#211=#(#14# n #168# (#212=#(#10# #213=#(#8# #214=#(#4# #215=#(#8# #216=#(#4# #167# (#215#) (#211#) #217=#(((#218=#(#14# result #216# (#219=#(#10# #213# () (#218#) #220=#((#221=(#222=#(#14# i #223=#(#4# #215# (#224=#(#6# #223# (#225=#(#8# #224# (#226=#(#10# #225# () () #220# #192# #227=#(#14# >= #f (#226#) () #192# #f)) #228=#(#10# #225# () (#222#) #220# #193# #222#) #229=#(#10# #225# () #230=(#231=#(#14# n #223# (#232=#(#10# #233=#(#8# #234=#(#4# #235=#(#8# #224# (#234# #236=#(#8# #235# (#237=#(#10# #236# () () #220# #199# #238=#(#14# vector-set! #f (#239=#(#10# #240=#(#8# #125# (#239# #241=#(#10# #240# () (#242=#(#14# result #127# (#241# #243=#(#10# #123# () (#242#) #128# #244=#(result #(expr result #f)) #242#) #245=#(#10# #126# () (#242#) #128# #246=#(result #(expr result #f)) #242#)) () #244# #f)) #128# #247=#(result #(expr result #f)) #242#) #248=#(#10# #240# () (#130#) #128# #249=#(i #(expr i #f)) #130#) #250=#(#8# #240# (#251=#(#10# #250# () () #128# #252=#(vector-ref #(expr vector-ref #f)) #253=#(#14# vector-ref #f (#251#) () #252# #f)) #254=#(#10# #250# () (#255=#(#14# x #127# (#254# #256=#(#10# #123# () (#255#) #128# #153# #255#)) () #153# #f)) #128# #257=#(x #(expr x #f)) #255#) #258=#(#10# #250# () #259=(#130#) #128# #260=#(i #(expr i #f)) #130#)) #261=(#255# . #259#) #128# #262=#((#252# #257# #260#) #(expr #263=(vector-ref x i) #f)))) (#242# . #261#) #128# #264=#((#265=#(vector-set! #(expr vector-set! #f)) #247# #249# #262#) #(expr #266=(vector-set! result i #263#) #f))) () () #128# #265# #238#) #237#) () #199# #f)) #267=#(#10# #236# () (#268=#(#14# result #223# (#267# #269=#(#10# #233# () (#268#) #220# #175# #268#) #270=#(#10# #224# () (#268#) #220# #196# #268#)) () #175# #f)) #220# #200# #268#) #271=#(#10# #236# () (#222#) #220# #201# #222#) #272=#(#10# #236# () #273=(#222#) #220# #202# #222#)) (#268# . #273#) #220# #198#)) #274=(#275=#(#14# loop #214# (#276=#(#10# #213# () (#275#) #220# #181# #275#) #277=#(#10# #233# () (#275#) #220# #181# #275#)) () #181# #f) #231# #268# #222#) #220# #181#) (#233#) (#275# #231# #268# #222#) #220# #181# #f 1 #f (#(#14# temp #234# () () #181# #f))) (#277# #232# #269# #278=#(#8# #233# (#279=#(#10# #278# () () #220# #185# #23#) #280=#(#10# #278# () (#222#) #220# #186# #222#) #(#76# #278# () () #220# #187# 1)) #281=(#222#) #220# #184#)) (#275# #231# #268# . #281#) #220# #181#) () (#231#) #220# #172# #231#) #229#) () #172# #f)) #220# #194# #231#)) (#222# . #230#) #220# #191#) #270# #235#) #274# #220# #181#)) (#275#) #220# #181# #f 3 #f (#231# #268# . #221#)) (#280# #272# #271# #228#) () #182# #f)) . #f) () () #282=#((() . #f) () () #217#)) #175# #218#)) () #175# #f)) . #f) () () #((#210# . #f) () () #28#)) #209# #f 1 #f (#218#)) (#214# #223#) (#211# #218#) #220# #181#) (#213#) (#211# #218#) #220# #181# #f 1 #f (#275#)) (#276# #212# #219# #(#76# #213# () () #282# #183# 0)) (#275# #211# #218#) #220# #181#) () (#211#) #220# #172# #211#) #283=#(#10# #166# () #284=(#211#) #217# #178# #211#)) () #172# #f))) (#216# #166#) (#211#) #217# #209#) (#165# #283#) #284# #217# #176#) () () #217# #177# #164#)) () #177# #f)) #145#) #285=(#144#) #148# #286=#((#163# #287=#(n #(expr n #f))) #(expr #288=(make-vector n) #f))) () #285# #148# #287# #144#)) () #289=#(n #(expr n #f)) #f)) #290=#((() . #f) () () #291=#(((#292=#(#14# result #116# (#293=#(#10# #119# () (#292#) #128# #244# #292#)) () #244# #f)) . #f) () () #148#)) #294=#(n #(expr n #f)) #144#) #(#76# #142# () () #290# #295=#(1 #(expr 1 #f)) 1)) #296=(#144#) #290# #297=#((#298=#(- #(expr - #f)) #294# #295#) #(expr #299=(- n 1) #f))) () () #290# #298# #135#) #133# #300=#(#10# #301=#(#8# #302=#(#8# #303=#(#6# #304=#(#6# #305=#(#4# #306=#(#2# #f (#305#) #t #28# #((#(define #(expr define #f)) #((#307=#(ack #(expr ack #f)) . #308=(#309=#(m #(expr m #f)) #310=#(n #(expr n #f)))) #(expr #311=(ack m n) #f)) . #312=(#((#(cond #(expr cond #f)) #313=#((#314=#((#315=#(= #(expr = #f)) #316=#(m #(expr m #f)) #317=#(0 #(expr 0 #f))) #(expr #318=(= m 0) #f)) #319=#((#320=#(+ #(expr + #f)) #321=#(n #(expr n #f)) #322=#(1 #(expr 1 #f))) #(expr #323=(+ n 1) #f))) #(expr #324=(#318# #323#) #f)) #325=#((#326=#((#327=#(= #(expr = #f)) #328=#(n #(expr n #f)) #329=#(0 #(expr 0 #f))) #(expr #330=(= n 0) #f)) #331=#((#332=#(ack #(expr ack #f)) #333=#((#334=#(- #(expr - #f)) #335=#(m #(expr m #f)) #336=#(1 #(expr 1 #f))) #(expr #337=(- m 1) #f)) #338=#(1 #(expr 1 #f))) #(expr #339=(ack #337# 1) #f))) #(expr #340=(#330# #339#) #f)) #((#(else #(expr else #f)) #341=#((#342=#(ack #(expr ack #f)) #343=#((#344=#(- #(expr - #f)) #345=#(m #(expr m #f)) #346=#(1 #(expr 1 #f))) #(expr #347=(- m 1) #f)) #348=#((#349=#(ack #(expr ack #f)) #350=#(m #(expr m #f)) #351=#((#352=#(- #(expr - #f)) #353=#(n #(expr n #f)) #354=#(1 #(expr 1 #f))) #(expr #355=(- n 1) #f))) #(expr #356=(ack m #355#) #f))) #(expr #357=(ack #347# #356#) #f))) #(expr #358=(else #357#) #f))) #(expr #359=(cond #324# #340# #358#) #f)))) #360=#(expr (define #311# #359#) #f)) #361=#(#14# ack #f (#362=#(#10# #363=#(#8# #25# (#362# #(#76# #363# () #t #28# #364=#(3 #(expr 3 #f)) 3) #(#76# #363# () #t #28# #365=#(9 #(expr 9 #f)) 9)) #t #28# #366=#((#367=#(ack #(expr ack #f)) #364# #365#) #(expr #368=(ack 3 9) #f))) () #t #28# #367# #361#) #369=#(#10# #302# () () #370=#((() . #f) () () #((#371=(#372=#(#14# m #305# (#373=#(#10# #301# () (#372#) #370# #335# #372#) #374=#(#10# #375=#(#8# #376=#(#8# #303# (#377=#(#10# #376# () () #370# #342# #361#) #378=#(#8# #376# (#379=#(#10# #378# () () #370# #344# #135#) #380=#(#10# #378# () (#372#) #370# #345# #372#) #(#76# #378# () () #370# #346# 1)) (#372#) #370# #343#) #375#) #381=(#372# . #382=(#383=#(#14# n #305# (#384=#(#10# #385=#(#8# #304# (#386=#(#10# #385# () () #370# #320# #23#) #384# #(#76# #385# () () #370# #322# 1)) (#383#) #370# #319#) () (#383#) #370# #321# #383#) #387=#(#10# #388=#(#8# #375# (#389=#(#10# #388# () () #370# #352# #135#) #387# #(#76# #388# () () #370# #354# 1)) #382# #370# #351#) () (#383#) #370# #353# #383#) #390=#(#10# #391=#(#8# #303# (#392=#(#10# #391# () () #370# #327# #393=#(#14# = #f (#392# #394=#(#10# #395=#(#8# #304# (#394# #396=#(#10# #395# () (#372#) #370# #316# #372#) #(#76# #395# () () #370# #317# 0)) (#372#) #370# #314#) () () #370# #315# #393#)) () #327# #f)) #390# #(#76# #391# () () #370# #329# 0)) (#383#) #370# #326#) () (#383#) #370# #328# #383#)) () #310# #f))) #370# #341#) (#397=#(#10# #375# () () #370# #349# #361#) #374# #388#) #381# #370# #348#) () (#372#) #370# #350# #372#) #380# #396#) () #309# #f) #383#) . #f) () () #28#)) #332# #361#) #377# #397#) (#306#) #307# #f)) (#304#) #t #28# #((#(lambda #360#) #(#308# #360#) . #312#) #360#) "ack" 2 #f #371#) (#395# #385# #303#) #381# #370# #313#) (#391# #302# #376#) #381# #370# #325#) (#369# #301# #(#76# #302# () () #370# #338# 1)) (#372#) #370# #331#) (#300# #373# #(#76# #301# () () #370# #336# 1)) (#372#) #370# #333#) () () #370# #334# #135#) #389# #379# #398=#(#10# #399=#(#8# #400=#(#8# #401=#(#8# #402=#(#6# #403=#(#4# #404=#(#2# #f (#403#) #t #28# #((#(define #(expr define #f)) #((#405=#(tak #(expr tak #f)) . #406=(#407=#(x #(expr x #f)) #408=#(y #(expr y #f)) #409=#(z #(expr z #f)))) #(expr #410=(tak x y z) #f)) . #411=(#412=#((#(if #(expr if #f)) #413=#((#414=#(not #(expr not #f)) #415=#((#416=#(< #(expr < #f)) #417=#(y #(expr y #f)) #418=#(x #(expr x #f))) #(expr #419=(< y x) #f))) #(expr #420=(not #419#) #f)) #421=#(z #(expr z #f)) #422=#((#423=#(tak #(expr tak #f)) #424=#((#425=#(tak #(expr tak #f)) #426=#((#427=#(- #(expr - #f)) #428=#(x #(expr x #f)) #429=#(1 #(expr 1 #f))) #(expr #430=(- x 1) #f)) #431=#(y #(expr y #f)) #432=#(z #(expr z #f))) #(expr #433=(tak #430# y z) #f)) #434=#((#435=#(tak #(expr tak #f)) #436=#((#437=#(- #(expr - #f)) #438=#(y #(expr y #f)) #439=#(1 #(expr 1 #f))) #(expr #440=(- y 1) #f)) #441=#(z #(expr z #f)) #442=#(x #(expr x #f))) #(expr #443=(tak #440# z x) #f)) #444=#((#445=#(tak #(expr tak #f)) #446=#((#447=#(- #(expr - #f)) #448=#(z #(expr z #f)) #449=#(1 #(expr 1 #f))) #(expr #450=(- z 1) #f)) #451=#(x #(expr x #f)) #452=#(y #(expr y #f))) #(expr #453=(tak #450# x y) #f))) #(expr #454=(tak #433# #443# #453#) #f))) #(expr #455=(if #420# z #454#) #f)))) #456=#(expr (define #410# #455#) #f)) #457=#(#14# tak #f (#458=#(#10# #459=#(#8# #25# (#458# #(#76# #459# () #t #28# #460=#(18 #(expr 18 #f)) 18) #(#76# #459# () #t #28# #461=#(12 #(expr 12 #f)) 12) #(#76# #459# () #t #28# #462=#(6 #(expr 6 #f)) 6)) #t #28# #463=#((#464=#(tak #(expr tak #f)) #460# #461# #462#) #(expr #465=(tak 18 12 6) #f))) () #t #28# #464# #457#) #466=#(#10# #401# () () #467=#((() . #f) () () #((#468=(#469=#(#14# x #403# (#470=#(#10# #400# () (#469#) #467# #451# #469#) #471=#(#10# #472=#(#8# #401# (#473=#(#10# #472# () () #467# #435# #457#) #474=#(#8# #472# (#475=#(#10# #474# () () #467# #437# #135#) #476=#(#10# #474# () (#477=#(#14# y #403# (#478=#(#10# #400# () #479=(#477#) #467# #452# #477#) #476# #480=#(#10# #481=#(#8# #401# (#482=#(#10# #481# () () #467# #425# #457#) #483=#(#8# #481# (#484=#(#10# #483# () () #467# #427# #135#) #485=#(#10# #483# () (#469#) #467# #428# #469#) #(#76# #483# () () #467# #429# 1)) (#469#) #467# #426#) #480# #486=#(#10# #481# () #487=(#488=#(#14# z #403# (#489=#(#10# #402# () (#488#) #467# #421# #488#) #490=#(#10# #399# () (#488#) #467# #448# #488#) #491=#(#10# #472# () (#488#) #467# #441# #488#) #486#) () #409# #f)) #467# #432# #488#)) (#469# #477# . #487#) #467# #424#) () (#477#) #467# #431# #477#) #492=#(#10# #493=#(#8# #494=#(#8# #402# (#495=#(#10# #494# () () #467# #414# #496=#(#14# not #f (#495#) () #414# #f)) #493#) #497=(#477# . #498=(#469#)) #467# #413#) (#499=#(#10# #493# () () #467# #416# #500=#(#14# < #f (#501=#(#10# #502=#(#8# #126# (#501# #503=#(#10# #502# () (#130#) #128# #504=#(i #(expr i #f)) #130#) #(#76# #502# () () #128# #505=#(0 #(expr 0 #f)) 0)) (#130#) #128# #506=#((#507=#(< #(expr < #f)) #504# #505#) #(expr #508=(< i 0) #f))) () () #128# #507# #500#) #499# #9#) () #509=#(< #(expr < #f)) #f)) #492# #510=#(#10# #493# () #498# #467# #418# #469#)) #497# #467# #415#) () (#477#) #467# #417# #477#)) () #408# #f)) #467# #438# #477#) #(#76# #474# () () #467# #439# 1)) (#477#) #467# #436#) #491# #471#) (#477# #488# . #511=(#469#)) #467# #434#) () #511# #467# #442# #469#) #485# #510#) () #407# #f) #477# #488#) . #f) () () #28#)) #423# #457#) #512=#(#10# #400# () () #467# #445# #457#) #473# #482#) (#404#) #405# #f)) (#402#) #t #28# #((#(lambda #456#) #(#406# #456#) . #411#) #456#) "tak" 3 #f #468#) (#494# #489# #401#) #513=(#488# #469# . #479#) #467# #412#) (#466# #481# #472# #400#) #513# #467# #422#) (#512# #399# #470# #478#) #513# #467# #444#) (#398# #490# #(#76# #399# () () #467# #449# 1)) (#488#) #467# #446#) () () #467# #447# #135#) #475# #484# #514=#(#10# #18# () () #11# #515=#(- #(expr - #f)) #135#) #516=#(#10# #517=#(#8# #518=#(#8# #20# (#519=#(#10# #518# () () #11# #520=#(fib #(expr fib #f)) #521=#(#14# fib #f (#27# #522=#(#10# #19# () () #11# #523=#(fib #(expr fib #f)) #521#) #519#) (#1#) #524=#(fib #(expr fib #f)) #f)) #517#) #525=(#13#) #11# #526=#((#520# #527=#((#528=#(- #(expr - #f)) #529=#(n #(expr n #f)) #530=#(1 #(expr 1 #f))) #(expr #531=(- n 1) #f))) #(expr #532=(fib #531#) #f))) (#516# #533=#(#10# #517# () (#13#) #11# #529# #13#) #(#76# #517# () () #11# #530# 1)) #525# #11# #527#) () () #11# #528# #135#)) () #528# #f)) #131# #(#76# #132# () () #128# #534=#(1 #(expr 1 #f)) 1)) #535=(#130#) #128# #536=#((#134# #537=#(i #(expr i #f)) #534#) #(expr #538=(- i 1) #f))) () (#130#) #128# #537# #130#) #258# #248# #503#) () #539=#(i #(expr i #f)) #f)) . #f) () () #290#) #540=#((#(do #(expr do #f)) #((#((#539# #297# #536#) #(expr #541=(i #299# #538#) #f))) #(expr #542=(#541#) #f)) #((#506# #246#) #(expr #543=(#508# result) #f)) #264#) #(expr #544=(do #542# #543# #266#) #f)) #f 3 #f (#255# #242# . #129#)) (#502# #245# #125#) #545=(#121# #242# #255# #130#) #128# #540#) (#124# #240#) #545# #128# #540#) (#123#) (#121# #255# #242# #130#) #128# #540# #f 1 #f (#(#14# temp #124# () () #540# #f))) (#122# #256# #243# #132#) (#121# #255# #242# . #535#) #128# #540#) () (#121#) #128# #540# #121#)) () #540# #f)) #128# #540# #121#) #152# #293# #142#) (#121# #151# #292# . #296#) #128# #540#)) (#151# #292# #144#) #128# #540# #f 1 #f (#121#)) #127#) (#151# #292# #144#) #128# #540#)) (#151# #144#) #291# #546=#((#244# #286#) #(expr #547=(result #288#) #f)) #f 1 #f (#292#)) #146#) (#151# #144#) #291# #546#)) (#151#) #148# #548=#((#289# #160#) #(expr #549=(n #162#) #f)) #f 1 #f (#144#)) #155#) (#151#) #148# #548#)) #t #28# #((#(lambda #550=#(expr (define #551=(create-y x) #552=(let* #553=(#549# #547#) #544#)) #f)) #(#554=(#153#) #550#) . #555=(#((#(let* #(expr let* #f)) #((#548# #546#) #(expr #553# #f)) #540#) #(expr #552# #f)))) #550#) "create-y" 1 #f #150#)) #t #28# #((#(define #(expr define #f)) #((#556=#(create-y #(expr create-y #f)) . #554#) #(expr #551# #f)) . #555#) #550#) #110#)) #556# #f)) #106#) #t #102# #557=#((#109# #558=#((#208# #559=#(n #(expr n #f))) #(expr #560=(create-x n) #f))) #(expr #561=(create-y #560#) #f))) (#207# #105#) #t #102# #558#) () #t #102# #559# #104#)) () #562=#(n #(expr n #f)) #f)) . #f) () () #28#)) #563=#(vector-length #(expr vector-length #f)) #158#) #107#) #t #102# #564=#((#563# #557#) #(expr #565=(vector-length #561#) #f)))) #t #28# #((#(lambda #566=#(expr (define #567=(my-try n) #565#) #f)) #(#568=(#562#) #566#) . #569=(#564#)) #566#) "my-try" 1 #f #103#)) #t #28# #((#(define #(expr define #f)) #((#570=#(my-try #(expr my-try #f)) . #568#) #(expr #567# #f)) . #569#) #566#) #97#)) #570# #f)) #93#) #t #96# #64#) () #t #96# #66# #92#) #91#) () #39# #f)) #137# #94#) #t #96# #57#) () #t #96# #58# #87#)) () #43# #f)) . #f) () () #((#571=(#139# #572=#(#14# result #33# (#573=#(#10# #32# () #t #96# #69# #572#)) () #47# #f)) . #f) () () #574=#((() . #f) () () #((#81# . #f) () () #28#)))) #42# #f 1 #f (#87#)) (#88# #83# #(#76# #84# () #t #574# #45# 100) #(#76# #84# () #t #574# #48# 0)) #t #86# #42#) () #t #86# #39# #82#)) () #39# #f))) (#85# #33#) #t #86# #42#) (#32#) #t #86# #42# "loop" 3 #f (#92# . #571#)) (#31# #90# #573#) #t #96# #51#) (#30# #140# #(#76# #31# () #t #96# #55# 0)) #t #96# #52#) () #t #96# #53# #29#)) () #53# #f) #73# #97# #253# #158# #110# #227# #238# #164# #206# #393# #361# #496# #457# #500# #135# #23# #521#) . #f) () ((compilation-strategy block) (safe #f) (arith fixnum) (standard-bindings #t)) #f) #575=#(fib #(expr fib #f)) #521#) #(#76# #26# () #t #28# #576=#(20 #(expr 20 #f)) 20)) #t #28# #577=#((#575# #576#) #(expr #578=(fib 20) #f))) #459# #363# #75#) #t #28# #((#579=#(+ #(expr + #f)) #577# #463# #366# #78#) #(expr (+ #578# #465# #368# #80#) #f))) () #t #28# #579# #23#) #279# #386# #21#) () #22# #f)) #518# #19#) #580=(#13#) #11# #581=#((#22# #526# #582=#((#523# #583=#((#515# #584=#(n #(expr n #f)) #585=#(2 #(expr 2 #f))) #(expr #586=(- n 2) #f))) #(expr #587=(fib #586#) #f))) #(expr #588=(+ #532# #587#) #f))) (#522# #18#) #580# #11# #582#) (#514# #17# #(#76# #18# () () #11# #585# 2)) #580# #11# #583#) () (#13#) #11# #584# #13#) #533# #589=#(#10# #7# () (#13#) #11# #590=#(n #(expr n #f)) #13#)) () #591=#(n #(expr n #f)) #f)) . #f) () () #28#)) #509# #500#) #589# #(#76# #7# () () #11# #592=#(2 #(expr 2 #f)) 2)) (#13#) #11# #593=#((#509# #590# #592#) #(expr #594=(< n 2) #f))) #15# #20#) #580# #11# #595=#((#(if #(expr if #f)) #593# #16# #581#) #(expr #596=(if #594# n #588#) #f)))) #t #28# #((#(lambda #597=#(expr (define #598=(fib n) #596#) #f)) #(#599=(#591#) #597#) . #600=(#595#)) #597#) "fib" 1 #f #12#)) #t #28# #((#(define #(expr define #f)) #((#524# . #599#) #(expr #598# #f)) . #600#) #597#) #521#) #404# #306# #169# #111# #98# #36# #25#) #28# #(() () ()) #f)
   #10 at /tmp/r7rs-benchmarks/TR7/compiler.scm:4821 args (((#1=#(#2=(def-tag) #f (#3=#(#4=(prc-tag) #1# (#5=#(#6=(tst-tag) #3# (#7=#(#8=(app-tag) #5# (#9=#(#10=(ref-tag) #7# () () #11=#((() . #f) () () #((#12=(#13=#(#14=(var-tag) n #3# (#15=#(#10# #5# () (#13#) #11# #16=#(n #(expr n #f)) #13#) #17=#(#10# #18=#(#8# #19=#(#8# #20=#(#8# #5# (#21=#(#10# #20# () () #11# #22=#(+ #(expr + #f)) #23=#(#14# + #f (#24=#(#10# #25=#(#8# #f (#24# #26=#(#8# #25# (#27=#(#10# #26# () #t #28=#(((#29=#(#14# > #f (#30=#(#10# #31=#(#8# #32=#(#6# #33=#(#4# #34=#(#8# #35=#(#4# #36=#(#2# #f (#35#) #t #28# #((#(define #(expr define #f)) #((#37=#(go #(expr go #f)) . #38=(#39=#(n #(expr n #f)))) #(expr #40=(go n) #f)) . #41=(#42=#((#(let #(expr let #f)) #43=#(loop #(expr loop #f)) #((#((#44=#(repeat #(expr repeat #f)) #45=#(100 #(expr 100 #f))) #(expr #46=(repeat 100) #f)) #((#47=#(result #(expr result #f)) #48=#(0 #(expr 0 #f))) #(expr #49=(result 0) #f))) #(expr #50=(#46# #49#) #f)) #51=#((#(if #(expr if #f)) #52=#((#53=#(> #(expr > #f)) #54=#(repeat #(expr repeat #f)) #55=#(0 #(expr 0 #f))) #(expr #56=(> repeat 0) #f)) #57=#((#58=#(loop #(expr loop #f)) #59=#((#60=#(- #(expr - #f)) #61=#(repeat #(expr repeat #f)) #62=#(1 #(expr 1 #f))) #(expr #63=(- repeat 1) #f)) #64=#((#65=#(my-try #(expr my-try #f)) #66=#(n #(expr n #f))) #(expr #67=(my-try n) #f))) #(expr #68=(loop #63# #67#) #f)) #69=#(result #(expr result #f))) #(expr #70=(if #56# #68# result) #f))) #(expr #71=(let loop #50# #70#) #f)))) #72=#(expr (define #40# #71#) #f)) #73=#(#14# go #f (#74=#(#10# #75=#(#8# #25# (#74# #(#76=(cst-tag) #75# () #t #28# #77=#(200000 #(expr 200000 #f)) 200000)) #t #28# #78=#((#79=#(go #(expr go #f)) #77#) #(expr #80=(go 200000) #f))) () #t #28# #79# #73#)) (#36#) #37# #f)) (#34#) #t #28# #((#(lambda #72#) #(#38# #72#) . #41#) #72#) "go" 1 #f #81=(#82=#(#14# n #35# (#83=#(#10# #84=#(#8# #85=#(#4# #34# (#84#) #t #86=#(((#87=#(#14# loop #85# (#88=#(#10# #84# () #t #86# #42# #87#) #89=#(#10# #90=#(#8# #32# (#89# #91=#(#10# #90# () #t #86# #39# #92=#(#14# n #33# (#93=#(#10# #94=#(#8# #90# (#95=#(#10# #94# () #t #96=#((() . #f) () () #86#) #65# #97=#(#14# my-try #f (#95#) (#98=#(#2# #f (#99=#(#4# #98# (#100=#(#8# #99# (#101=#(#10# #100# () #t #102=#((() . #f) () () #((#103=(#104=#(#14# n #99# (#105=#(#10# #106=#(#8# #107=#(#8# #100# (#108=#(#10# #107# () #t #102# #109=#(create-y #(expr create-y #f)) #110=#(#14# create-y #f (#108#) (#111=#(#2# #f (#112=#(#4# #111# (#113=#(#8# #112# (#114=#(#4# #113# (#115=#(#8# #114# (#116=#(#4# #115# (#117=#(#8# #116# (#118=#(#4# #117# (#119=#(#8# #118# (#120=#(#10# #119# () (#121=#(#14# loop #118# (#120# #122=#(#10# #123=#(#8# #124=#(#4# #125=#(#8# #126=#(#6# #127=#(#4# #117# (#126#) (#121#) #128=#((#129=(#130=#(#14# i #127# (#131=#(#10# #132=#(#8# #123# (#133=#(#10# #132# () () #128# #134=#(- #(expr - #f)) #135=#(#14# - #f (#136=#(#10# #137=#(#8# #90# (#136# #138=#(#10# #137# () #t #96# #61# #139=#(#14# repeat #33# (#138# #140=#(#10# #31# () #t #96# #54# #139#)) () #44# #f)) #(#76# #137# () #t #96# #62# 1)) #t #96# #59#) () #t #96# #60# #135#) #141=#(#10# #142=#(#8# #119# (#141# #143=#(#10# #142# () (#144=#(#14# n #114# (#143# #145=#(#10# #146=#(#8# #115# (#147=#(#10# #146# () () #148=#(((#144#) . #f) () () #149=#((() . #f) () () #((#150=(#151=#(#14# x #112# (#152=#(#10# #119# () (#151#) #128# #153=#(x #(expr x #f)) #151#) #154=#(#10# #155=#(#8# #113# (#156=#(#10# #155# () () #149# #157=#(vector-length #(expr vector-length #f)) #158=#(#14# vector-length #f (#101# #156#) () #157# #f)) #154#) #159=(#151#) #149# #160=#((#157# #161=#(x #(expr x #f))) #(expr #162=(vector-length x) #f))) () #159# #149# #161# #151#)) () #153# #f)) . #f) () () #28#))) #163=#(make-vector #(expr make-vector #f)) #164=#(#14# make-vector #f (#147# #165=#(#10# #166=#(#8# #167=#(#8# #168=#(#4# #169=#(#2# #f (#168#) #t #28# #((#(define #(expr define #f)) #((#170=#(create-x #(expr create-x #f)) . #171=(#172=#(n #(expr n #f)))) #(expr #173=(create-x n) #f)) . #174=(#((#(define #(expr define #f)) #175=#(result #(expr result #f)) #176=#((#177=#(make-vector #(expr make-vector #f)) #178=#(n #(expr n #f))) #(expr #179=(make-vector n) #f))) #(expr #180=(define result #179#) #f)) #181=#((#(do #(expr do #f)) #((#((#182=#(i #(expr i #f)) #183=#(0 #(expr 0 #f)) #184=#((#185=#(+ #(expr + #f)) #186=#(i #(expr i #f)) #187=#(1 #(expr 1 #f))) #(expr #188=(+ i 1) #f))) #(expr #189=(i 0 #188#) #f))) #(expr #190=(#189#) #f)) #((#191=#((#192=#(>= #(expr >= #f)) #193=#(i #(expr i #f)) #194=#(n #(expr n #f))) #(expr #195=(>= i n) #f)) #196=#(result #(expr result #f))) #(expr #197=(#195# result) #f)) #198=#((#199=#(vector-set! #(expr vector-set! #f)) #200=#(result #(expr result #f)) #201=#(i #(expr i #f)) #202=#(i #(expr i #f))) #(expr #203=(vector-set! result i i) #f))) #(expr #204=(do #190# #197# #203#) #f)))) #205=#(expr (define #173# #180# #204#) #f)) #206=#(#14# create-x #f (#207=#(#10# #106# () #t #102# #208=#(create-x #(expr create-x #f)) #206#)) (#169#) #170# #f)) (#167#) #t #28# #209=#((#(lambda #205#) #(#171# #205#) . #174#) #205#) "create-x" 1 #f #210=(#211=#(#14# n #168# (#212=#(#10# #213=#(#8# #214=#(#4# #215=#(#8# #216=#(#4# #167# (#215#) (#211#) #217=#(((#218=#(#14# result #216# (#219=#(#10# #213# () (#218#) #220=#((#221=(#222=#(#14# i #223=#(#4# #215# (#224=#(#6# #223# (#225=#(#8# #224# (#226=#(#10# #225# () () #220# #192# #227=#(#14# >= #f (#226#) () #192# #f)) #228=#(#10# #225# () (#222#) #220# #193# #222#) #229=#(#10# #225# () #230=(#231=#(#14# n #223# (#232=#(#10# #233=#(#8# #234=#(#4# #235=#(#8# #224# (#234# #236=#(#8# #235# (#237=#(#10# #236# () () #220# #199# #238=#(#14# vector-set! #f (#239=#(#10# #240=#(#8# #125# (#239# #241=#(#10# #240# () (#242=#(#14# result #127# (#241# #243=#(#10# #123# () (#242#) #128# #244=#(result #(expr result #f)) #242#) #245=#(#10# #126# () (#242#) #128# #246=#(result #(expr result #f)) #242#)) () #244# #f)) #128# #247=#(result #(expr result #f)) #242#) #248=#(#10# #240# () (#130#) #128# #249=#(i #(expr i #f)) #130#) #250=#(#8# #240# (#251=#(#10# #250# () () #128# #252=#(vector-ref #(expr vector-ref #f)) #253=#(#14# vector-ref #f (#251#) () #252# #f)) #254=#(#10# #250# () (#255=#(#14# x #127# (#254# #256=#(#10# #123# () (#255#) #128# #153# #255#)) () #153# #f)) #128# #257=#(x #(expr x #f)) #255#) #258=#(#10# #250# () #259=(#130#) #128# #260=#(i #(expr i #f)) #130#)) #261=(#255# . #259#) #128# #262=#((#252# #257# #260#) #(expr #263=(vector-ref x i) #f)))) (#242# . #261#) #128# #264=#((#265=#(vector-set! #(expr vector-set! #f)) #247# #249# #262#) #(expr #266=(vector-set! result i #263#) #f))) () () #128# #265# #238#) #237#) () #199# #f)) #267=#(#10# #236# () (#268=#(#14# result #223# (#267# #269=#(#10# #233# () (#268#) #220# #175# #268#) #270=#(#10# #224# () (#268#) #220# #196# #268#)) () #175# #f)) #220# #200# #268#) #271=#(#10# #236# () (#222#) #220# #201# #222#) #272=#(#10# #236# () #273=(#222#) #220# #202# #222#)) (#268# . #273#) #220# #198#)) #274=(#275=#(#14# loop #214# (#276=#(#10# #213# () (#275#) #220# #181# #275#) #277=#(#10# #233# () (#275#) #220# #181# #275#)) () #181# #f) #231# #268# #222#) #220# #181#) (#233#) (#275# #231# #268# #222#) #220# #181# #f 1 #f (#(#14# temp #234# () () #181# #f))) (#277# #232# #269# #278=#(#8# #233# (#279=#(#10# #278# () () #220# #185# #23#) #280=#(#10# #278# () (#222#) #220# #186# #222#) #(#76# #278# () () #220# #187# 1)) #281=(#222#) #220# #184#)) (#275# #231# #268# . #281#) #220# #181#) () (#231#) #220# #172# #231#) #229#) () #172# #f)) #220# #194# #231#)) (#222# . #230#) #220# #191#) #270# #235#) #274# #220# #181#)) (#275#) #220# #181# #f 3 #f (#231# #268# . #221#)) (#280# #272# #271# #228#) () #182# #f)) . #f) () () #282=#((() . #f) () () #217#)) #175# #218#)) () #175# #f)) . #f) () () #((#210# . #f) () () #28#)) #209# #f 1 #f (#218#)) (#214# #223#) (#211# #218#) #220# #181#) (#213#) (#211# #218#) #220# #181# #f 1 #f (#275#)) (#276# #212# #219# #(#76# #213# () () #282# #183# 0)) (#275# #211# #218#) #220# #181#) () (#211#) #220# #172# #211#) #283=#(#10# #166# () #284=(#211#) #217# #178# #211#)) () #172# #f))) (#216# #166#) (#211#) #217# #209#) (#165# #283#) #284# #217# #176#) () () #217# #177# #164#)) () #177# #f)) #145#) #285=(#144#) #148# #286=#((#163# #287=#(n #(expr n #f))) #(expr #288=(make-vector n) #f))) () #285# #148# #287# #144#)) () #289=#(n #(expr n #f)) #f)) #290=#((() . #f) () () #291=#(((#292=#(#14# result #116# (#293=#(#10# #119# () (#292#) #128# #244# #292#)) () #244# #f)) . #f) () () #148#)) #294=#(n #(expr n #f)) #144#) #(#76# #142# () () #290# #295=#(1 #(expr 1 #f)) 1)) #296=(#144#) #290# #297=#((#298=#(- #(expr - #f)) #294# #295#) #(expr #299=(- n 1) #f))) () () #290# #298# #135#) #133# #300=#(#10# #301=#(#8# #302=#(#8# #303=#(#6# #304=#(#6# #305=#(#4# #306=#(#2# #f (#305#) #t #28# #((#(define #(expr define #f)) #((#307=#(ack #(expr ack #f)) . #308=(#309=#(m #(expr m #f)) #310=#(n #(expr n #f)))) #(expr #311=(ack m n) #f)) . #312=(#((#(cond #(expr cond #f)) #313=#((#314=#((#315=#(= #(expr = #f)) #316=#(m #(expr m #f)) #317=#(0 #(expr 0 #f))) #(expr #318=(= m 0) #f)) #319=#((#320=#(+ #(expr + #f)) #321=#(n #(expr n #f)) #322=#(1 #(expr 1 #f))) #(expr #323=(+ n 1) #f))) #(expr #324=(#318# #323#) #f)) #325=#((#326=#((#327=#(= #(expr = #f)) #328=#(n #(expr n #f)) #329=#(0 #(expr 0 #f))) #(expr #330=(= n 0) #f)) #331=#((#332=#(ack #(expr ack #f)) #333=#((#334=#(- #(expr - #f)) #335=#(m #(expr m #f)) #336=#(1 #(expr 1 #f))) #(expr #337=(- m 1) #f)) #338=#(1 #(expr 1 #f))) #(expr #339=(ack #337# 1) #f))) #(expr #340=(#330# #339#) #f)) #((#(else #(expr else #f)) #341=#((#342=#(ack #(expr ack #f)) #343=#((#344=#(- #(expr - #f)) #345=#(m #(expr m #f)) #346=#(1 #(expr 1 #f))) #(expr #347=(- m 1) #f)) #348=#((#349=#(ack #(expr ack #f)) #350=#(m #(expr m #f)) #351=#((#352=#(- #(expr - #f)) #353=#(n #(expr n #f)) #354=#(1 #(expr 1 #f))) #(expr #355=(- n 1) #f))) #(expr #356=(ack m #355#) #f))) #(expr #357=(ack #347# #356#) #f))) #(expr #358=(else #357#) #f))) #(expr #359=(cond #324# #340# #358#) #f)))) #360=#(expr (define #311# #359#) #f)) #361=#(#14# ack #f (#362=#(#10# #363=#(#8# #25# (#362# #(#76# #363# () #t #28# #364=#(3 #(expr 3 #f)) 3) #(#76# #363# () #t #28# #365=#(9 #(expr 9 #f)) 9)) #t #28# #366=#((#367=#(ack #(expr ack #f)) #364# #365#) #(expr #368=(ack 3 9) #f))) () #t #28# #367# #361#) #369=#(#10# #302# () () #370=#((() . #f) () () #((#371=(#372=#(#14# m #305# (#373=#(#10# #301# () (#372#) #370# #335# #372#) #374=#(#10# #375=#(#8# #376=#(#8# #303# (#377=#(#10# #376# () () #370# #342# #361#) #378=#(#8# #376# (#379=#(#10# #378# () () #370# #344# #135#) #380=#(#10# #378# () (#372#) #370# #345# #372#) #(#76# #378# () () #370# #346# 1)) (#372#) #370# #343#) #375#) #381=(#372# . #382=(#383=#(#14# n #305# (#384=#(#10# #385=#(#8# #304# (#386=#(#10# #385# () () #370# #320# #23#) #384# #(#76# #385# () () #370# #322# 1)) (#383#) #370# #319#) () (#383#) #370# #321# #383#) #387=#(#10# #388=#(#8# #375# (#389=#(#10# #388# () () #370# #352# #135#) #387# #(#76# #388# () () #370# #354# 1)) #382# #370# #351#) () (#383#) #370# #353# #383#) #390=#(#10# #391=#(#8# #303# (#392=#(#10# #391# () () #370# #327# #393=#(#14# = #f (#392# #394=#(#10# #395=#(#8# #304# (#394# #396=#(#10# #395# () (#372#) #370# #316# #372#) #(#76# #395# () () #370# #317# 0)) (#372#) #370# #314#) () () #370# #315# #393#)) () #327# #f)) #390# #(#76# #391# () () #370# #329# 0)) (#383#) #370# #326#) () (#383#) #370# #328# #383#)) () #310# #f))) #370# #341#) (#397=#(#10# #375# () () #370# #349# #361#) #374# #388#) #381# #370# #348#) () (#372#) #370# #350# #372#) #380# #396#) () #309# #f) #383#) . #f) () () #28#)) #332# #361#) #377# #397#) (#306#) #307# #f)) (#304#) #t #28# #((#(lambda #360#) #(#308# #360#) . #312#) #360#) "ack" 2 #f #371#) (#395# #385# #303#) #381# #370# #313#) (#391# #302# #376#) #381# #370# #325#) (#369# #301# #(#76# #302# () () #370# #338# 1)) (#372#) #370# #331#) (#300# #373# #(#76# #301# () () #370# #336# 1)) (#372#) #370# #333#) () () #370# #334# #135#) #389# #379# #398=#(#10# #399=#(#8# #400=#(#8# #401=#(#8# #402=#(#6# #403=#(#4# #404=#(#2# #f (#403#) #t #28# #((#(define #(expr define #f)) #((#405=#(tak #(expr tak #f)) . #406=(#407=#(x #(expr x #f)) #408=#(y #(expr y #f)) #409=#(z #(expr z #f)))) #(expr #410=(tak x y z) #f)) . #411=(#412=#((#(if #(expr if #f)) #413=#((#414=#(not #(expr not #f)) #415=#((#416=#(< #(expr < #f)) #417=#(y #(expr y #f)) #418=#(x #(expr x #f))) #(expr #419=(< y x) #f))) #(expr #420=(not #419#) #f)) #421=#(z #(expr z #f)) #422=#((#423=#(tak #(expr tak #f)) #424=#((#425=#(tak #(expr tak #f)) #426=#((#427=#(- #(expr - #f)) #428=#(x #(expr x #f)) #429=#(1 #(expr 1 #f))) #(expr #430=(- x 1) #f)) #431=#(y #(expr y #f)) #432=#(z #(expr z #f))) #(expr #433=(tak #430# y z) #f)) #434=#((#435=#(tak #(expr tak #f)) #436=#((#437=#(- #(expr - #f)) #438=#(y #(expr y #f)) #439=#(1 #(expr 1 #f))) #(expr #440=(- y 1) #f)) #441=#(z #(expr z #f)) #442=#(x #(expr x #f))) #(expr #443=(tak #440# z x) #f)) #444=#((#445=#(tak #(expr tak #f)) #446=#((#447=#(- #(expr - #f)) #448=#(z #(expr z #f)) #449=#(1 #(expr 1 #f))) #(expr #450=(- z 1) #f)) #451=#(x #(expr x #f)) #452=#(y #(expr y #f))) #(expr #453=(tak #450# x y) #f))) #(expr #454=(tak #433# #443# #453#) #f))) #(expr #455=(if #420# z #454#) #f)))) #456=#(expr (define #410# #455#) #f)) #457=#(#14# tak #f (#458=#(#10# #459=#(#8# #25# (#458# #(#76# #459# () #t #28# #460=#(18 #(expr 18 #f)) 18) #(#76# #459# () #t #28# #461=#(12 #(expr 12 #f)) 12) #(#76# #459# () #t #28# #462=#(6 #(expr 6 #f)) 6)) #t #28# #463=#((#464=#(tak #(expr tak #f)) #460# #461# #462#) #(expr #465=(tak 18 12 6) #f))) () #t #28# #464# #457#) #466=#(#10# #401# () () #467=#((() . #f) () () #((#468=(#469=#(#14# x #403# (#470=#(#10# #400# () (#469#) #467# #451# #469#) #471=#(#10# #472=#(#8# #401# (#473=#(#10# #472# () () #467# #435# #457#) #474=#(#8# #472# (#475=#(#10# #474# () () #467# #437# #135#) #476=#(#10# #474# () (#477=#(#14# y #403# (#478=#(#10# #400# () #479=(#477#) #467# #452# #477#) #476# #480=#(#10# #481=#(#8# #401# (#482=#(#10# #481# () () #467# #425# #457#) #483=#(#8# #481# (#484=#(#10# #483# () () #467# #427# #135#) #485=#(#10# #483# () (#469#) #467# #428# #469#) #(#76# #483# () () #467# #429# 1)) (#469#) #467# #426#) #480# #486=#(#10# #481# () #487=(#488=#(#14# z #403# (#489=#(#10# #402# () (#488#) #467# #421# #488#) #490=#(#10# #399# () (#488#) #467# #448# #488#) #491=#(#10# #472# () (#488#) #467# #441# #488#) #486#) () #409# #f)) #467# #432# #488#)) (#469# #477# . #487#) #467# #424#) () (#477#) #467# #431# #477#) #492=#(#10# #493=#(#8# #494=#(#8# #402# (#495=#(#10# #494# () () #467# #414# #496=#(#14# not #f (#495#) () #414# #f)) #493#) #497=(#477# . #498=(#469#)) #467# #413#) (#499=#(#10# #493# () () #467# #416# #500=#(#14# < #f (#501=#(#10# #502=#(#8# #126# (#501# #503=#(#10# #502# () (#130#) #128# #504=#(i #(expr i #f)) #130#) #(#76# #502# () () #128# #505=#(0 #(expr 0 #f)) 0)) (#130#) #128# #506=#((#507=#(< #(expr < #f)) #504# #505#) #(expr #508=(< i 0) #f))) () () #128# #507# #500#) #499# #9#) () #509=#(< #(expr < #f)) #f)) #492# #510=#(#10# #493# () #498# #467# #418# #469#)) #497# #467# #415#) () (#477#) #467# #417# #477#)) () #408# #f)) #467# #438# #477#) #(#76# #474# () () #467# #439# 1)) (#477#) #467# #436#) #491# #471#) (#477# #488# . #511=(#469#)) #467# #434#) () #511# #467# #442# #469#) #485# #510#) () #407# #f) #477# #488#) . #f) () () #28#)) #423# #457#) #512=#(#10# #400# () () #467# #445# #457#) #473# #482#) (#404#) #405# #f)) (#402#) #t #28# #((#(lambda #456#) #(#406# #456#) . #411#) #456#) "tak" 3 #f #468#) (#494# #489# #401#) #513=(#488# #469# . #479#) #467# #412#) (#466# #481# #472# #400#) #513# #467# #422#) (#512# #399# #470# #478#) #513# #467# #444#) (#398# #490# #(#76# #399# () () #467# #449# 1)) (#488#) #467# #446#) () () #467# #447# #135#) #475# #484# #514=#(#10# #18# () () #11# #515=#(- #(expr - #f)) #135#) #516=#(#10# #517=#(#8# #518=#(#8# #20# (#519=#(#10# #518# () () #11# #520=#(fib #(expr fib #f)) #521=#(#14# fib #f (#27# #522=#(#10# #19# () () #11# #523=#(fib #(expr fib #f)) #521#) #519#) (#1#) #524=#(fib #(expr fib #f)) #f)) #517#) #525=(#13#) #11# #526=#((#520# #527=#((#528=#(- #(expr - #f)) #529=#(n #(expr n #f)) #530=#(1 #(expr 1 #f))) #(expr #531=(- n 1) #f))) #(expr #532=(fib #531#) #f))) (#516# #533=#(#10# #517# () (#13#) #11# #529# #13#) #(#76# #517# () () #11# #530# 1)) #525# #11# #527#) () () #11# #528# #135#)) () #528# #f)) #131# #(#76# #132# () () #128# #534=#(1 #(expr 1 #f)) 1)) #535=(#130#) #128# #536=#((#134# #537=#(i #(expr i #f)) #534#) #(expr #538=(- i 1) #f))) () (#130#) #128# #537# #130#) #258# #248# #503#) () #539=#(i #(expr i #f)) #f)) . #f) () () #290#) #540=#((#(do #(expr do #f)) #((#((#539# #297# #536#) #(expr #541=(i #299# #538#) #f))) #(expr #542=(#541#) #f)) #((#506# #246#) #(expr #543=(#508# result) #f)) #264#) #(expr #544=(do #542# #543# #266#) #f)) #f 3 #f (#255# #242# . #129#)) (#502# #245# #125#) #545=(#121# #242# #255# #130#) #128# #540#) (#124# #240#) #545# #128# #540#) (#123#) (#121# #255# #242# #130#) #128# #540# #f 1 #f (#(#14# temp #124# () () #540# #f))) (#122# #256# #243# #132#) (#121# #255# #242# . #535#) #128# #540#) () (#121#) #128# #540# #121#)) () #540# #f)) #128# #540# #121#) #152# #293# #142#) (#121# #151# #292# . #296#) #128# #540#)) (#151# #292# #144#) #128# #540# #f 1 #f (#121#)) #127#) (#151# #292# #144#) #128# #540#)) (#151# #144#) #291# #546=#((#244# #286#) #(expr #547=(result #288#) #f)) #f 1 #f (#292#)) #146#) (#151# #144#) #291# #546#)) (#151#) #148# #548=#((#289# #160#) #(expr #549=(n #162#) #f)) #f 1 #f (#144#)) #155#) (#151#) #148# #548#)) #t #28# #((#(lambda #550=#(expr (define #551=(create-y x) #552=(let* #553=(#549# #547#) #544#)) #f)) #(#554=(#153#) #550#) . #555=(#((#(let* #(expr let* #f)) #((#548# #546#) #(expr #553# #f)) #540#) #(expr #552# #f)))) #550#) "create-y" 1 #f #150#)) #t #28# #((#(define #(expr define #f)) #((#556=#(create-y #(expr create-y #f)) . #554#) #(expr #551# #f)) . #555#) #550#) #110#)) #556# #f)) #106#) #t #102# #557=#((#109# #558=#((#208# #559=#(n #(expr n #f))) #(expr #560=(create-x n) #f))) #(expr #561=(create-y #560#) #f))) (#207# #105#) #t #102# #558#) () #t #102# #559# #104#)) () #562=#(n #(expr n #f)) #f)) . #f) () () #28#)) #563=#(vector-length #(expr vector-length #f)) #158#) #107#) #t #102# #564=#((#563# #557#) #(expr #565=(vector-length #561#) #f)))) #t #28# #((#(lambda #566=#(expr (define #567=(my-try n) #565#) #f)) #(#568=(#562#) #566#) . #569=(#564#)) #566#) "my-try" 1 #f #103#)) #t #28# #((#(define #(expr define #f)) #((#570=#(my-try #(expr my-try #f)) . #568#) #(expr #567# #f)) . #569#) #566#) #97#)) #570# #f)) #93#) #t #96# #64#) () #t #96# #66# #92#) #91#) () #39# #f)) #137# #94#) #t #96# #57#) () #t #96# #58# #87#)) () #43# #f)) . #f) () () #((#571=(#139# #572=#(#14# result #33# (#573=#(#10# #32# () #t #96# #69# #572#)) () #47# #f)) . #f) () () #574=#((() . #f) () () #((#81# . #f) () () #28#)))) #42# #f 1 #f (#87#)) (#88# #83# #(#76# #84# () #t #574# #45# 100) #(#76# #84# () #t #574# #48# 0)) #t #86# #42#) () #t #86# #39# #82#)) () #39# #f))) (#85# #33#) #t #86# #42#) (#32#) #t #86# #42# "loop" 3 #f (#92# . #571#)) (#31# #90# #573#) #t #96# #51#) (#30# #140# #(#76# #31# () #t #96# #55# 0)) #t #96# #52#) () #t #96# #53# #29#)) () #53# #f) #73# #97# #253# #158# #110# #227# #238# #164# #206# #393# #361# #496# #457# #500# #135# #23# #521#) . #f) () ((compilation-strategy block) (safe #f) (arith fixnum) (standard-bindings #t)) #f) #575=#(fib #(expr fib #f)) #521#) #(#76# #26# () #t #28# #576=#(20 #(expr 20 #f)) 20)) #t #28# #577=#((#575# #576#) #(expr #578=(fib 20) #f))) #459# #363# #75#) #t #28# #579=#((#580=#(+ #(expr + #f)) #577# #463# #366# #78#) #(expr (+ #578# #465# #368# #80#) #f))) () #t #28# #580# #23#) #279# #386# #21#) () #22# #f)) #518# #19#) #581=(#13#) #11# #582=#((#22# #526# #583=#((#523# #584=#((#515# #585=#(n #(expr n #f)) #586=#(2 #(expr 2 #f))) #(expr #587=(- n 2) #f))) #(expr #588=(fib #587#) #f))) #(expr #589=(+ #532# #588#) #f))) (#522# #18#) #581# #11# #583#) (#514# #17# #(#76# #18# () () #11# #586# 2)) #581# #11# #584#) () (#13#) #11# #585# #13#) #533# #590=#(#10# #7# () (#13#) #11# #591=#(n #(expr n #f)) #13#)) () #592=#(n #(expr n #f)) #f)) . #f) () () #28#)) #509# #500#) #590# #(#76# #7# () () #11# #593=#(2 #(expr 2 #f)) 2)) (#13#) #11# #594=#((#509# #591# #593#) #(expr #595=(< n 2) #f))) #15# #20#) #581# #11# #596=#((#(if #(expr if #f)) #594# #16# #582#) #(expr #597=(if #595# n #589#) #f)))) #t #28# #((#(lambda #598=#(expr (define #599=(fib n) #597#) #f)) #(#600=(#592#) #598#) . #601=(#596#)) #598#) "fib" 1 #f #12#)) #t #28# #((#(define #(expr define #f)) #((#524# . #600#) #(expr #599# #f)) . #601#) #598#) #521#) . #28#) (#404# . #28#) (#306# . #28#) (#169# . #28#) (#111# . #28#) (#98# . #28#) (#36# . #28#) (#602=#(#8# #f (#(#10# #602# () #t #28# #580# #23#) #603=#(#8# #602# (#(#10# #603# () #t #28# #575# #521#) #(#76# #603# () #t #28# #576# 20)) #t #28# #577#) #604=#(#8# #602# (#(#10# #604# () #t #28# #464# #457#) #(#76# #604# () #t #28# #460# 18) #(#76# #604# () #t #28# #461# 12) #(#76# #604# () #t #28# #462# 6)) #t #28# #463#) #605=#(#8# #602# (#(#10# #605# () #t #28# #367# #361#) #(#76# #605# () #t #28# #364# 3) #(#76# #605# () #t #28# #365# 9)) #t #28# #366#) #606=#(#8# #602# (#(#10# #606# () #t #28# #79# #73#) #(#76# #606# () #t #28# #77# 200000)) #t #28# #78#)) #t #28# #579#) . #28#)) #28# #(() () ()))
   #11 in compiler-body at /tmp/r7rs-benchmarks/TR7/compiler.scm:4800 args ()
   #12 in compile-program at /tmp/r7rs-benchmarks/TR7/compiler.scm:4839 args ((begin (declare (standard-bindings) (fixnum) (not safe) (block)) (define (fib n) (if (< n 2) n (+ (fib (- n 1)) (fib (- n 2))))) (define (tak x y z) (if (not (< y x)) z (tak (tak (- x 1) y z) (tak (- y 1) z x) (tak (- z 1) x y)))) (define (ack m n) (cond ((= m 0) (+ n 1)) ((= n 0) (ack (- m 1) 1)) (else (ack (- m 1) (ack m (- n 1)))))) (define (create-x n) (define result (make-vector n)) (do ((i 0 (+ i 1))) ((>= i n) result) (vector-set! result i i))) (define (create-y x) (let* ((n (vector-length x)) (result (make-vector n))) (do ((i (- n 1) (- i 1))) ((< i 0) result) (vector-set! result i (vector-ref x i))))) (define (my-try n) (vector-length (create-y (create-x n)))) (define (go n) (let loop ((repeat 100) (result 0)) (if (> repeat 0) (loop (- repeat 1) (my-try n)) result))) (+ (fib 20) (tak 18 12 6) (ack 3 9) (go 200000))) m68000 (asm) "program" "program" #f)
   #13 in ce at /tmp/r7rs-benchmarks/TR7/compiler.scm:4782 args ((begin (declare (standard-bindings) (fixnum) (not safe) (block)) (define (fib n) (if (< n 2) n (+ (fib (- n 1)) (fib (- n 2))))) (define (tak x y z) (if (not (< y x)) z (tak (tak (- x 1) y z) (tak (- y 1) z x) (tak (- z 1) x y)))) (define (ack m n) (cond ((= m 0) (+ n 1)) ((= n 0) (ack (- m 1) 1)) (else (ack (- m 1) (ack m (- n 1)))))) (define (create-x n) (define result (make-vector n)) (do ((i 0 (+ i 1))) ((>= i n) result) (vector-set! result i i))) (define (create-y x) (let* ((n (vector-length x)) (result (make-vector n))) (do ((i (- n 1) (- i 1))) ((< i 0) result) (vector-set! result i (vector-ref x i))))) (define (my-try n) (vector-length (create-y (create-x n)))) (define (go n) (let loop ((repeat 100) (result 0)) (if (> repeat 0) (loop (- repeat 1) (my-try n)) result))) (+ (fib 20) (tak 18 12 6) (ack 3 9) (go 200000))) m68000 (asm))
   #14 at /tmp/r7rs-benchmarks/TR7/compiler.scm:0 args ()
   #15 in loop at /tmp/r7rs-benchmarks/TR7/compiler.scm:11238 args (0 #f)

real	0m0.598s
user	0m0.558s
sys	0m0.040s

Testing conform under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/conform.scm /tmp/r7rs-benchmarks/TR7/conform.scm
Running...
Running conform:500
Elapsed time: 72.146 seconds (72.146) for conform:500
+!CSVLINE!+tr7-unknown,conform:500,72.146

real	1m12.166s
user	1m11.917s
sys	0m0.160s

Testing dynamic under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/dynamic.scm /tmp/r7rs-benchmarks/TR7/dynamic.scm
Running...
Running dynamic:500
Elapsed time: 18.11 seconds (18.11) for dynamic:500
+!CSVLINE!+tr7-unknown,dynamic:500,18.11

real	0m18.132s
user	0m17.919s
sys	0m0.163s

Testing earley under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/earley.scm /tmp/r7rs-benchmarks/TR7/earley.scm
Running...
Running earley:1
./bench: line 496: 386372 Killed                  ${TR7I} "$1" < "$2"

real	5m0.659s
user	4m59.845s
sys	0m0.130s
+!CSVLINE!+tr7,earley,ULIMITKILLED

Testing graphs under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/graphs.scm /tmp/r7rs-benchmarks/TR7/graphs.scm
Running...
Running graphs:7:3
Elapsed time: 153.049 seconds (153.049) for graphs:7:3
+!CSVLINE!+tr7-unknown,graphs:7:3,153.049

real	2m33.076s
user	2m32.643s
sys	0m0.150s

Testing lattice under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/lattice.scm /tmp/r7rs-benchmarks/TR7/lattice.scm
Running...
Running lattice:44:10
Elapsed time: 122.569 seconds (122.568) for lattice:44:10
+!CSVLINE!+tr7-unknown,lattice:44:10,122.569

real	2m2.588s
user	2m2.279s
sys	0m0.166s

Testing matrix under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/matrix.scm /tmp/r7rs-benchmarks/TR7/matrix.scm
Running...
Running matrix:5:5:2500
Elapsed time: 37.75 seconds (37.75) for matrix:5:5:2500
+!CSVLINE!+tr7-unknown,matrix:5:5:2500,37.75

real	0m37.770s
user	0m37.579s
sys	0m0.143s

Testing maze under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/maze.scm /tmp/r7rs-benchmarks/TR7/maze.scm
Running...
Running maze:20:7:10000
Elapsed time: 29.656 seconds (29.656) for maze:20:7:10000
+!CSVLINE!+tr7-unknown,maze:20:7:10000,29.656

real	0m29.676s
user	0m29.509s
sys	0m0.137s

Testing mazefun under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/mazefun.scm /tmp/r7rs-benchmarks/TR7/mazefun.scm
Running...
Running mazefun:11:11:10000
Elapsed time: 63.929 seconds (63.929) for mazefun:11:11:10000
+!CSVLINE!+tr7-unknown,mazefun:11:11:10000,63.929

real	1m3.956s
user	1m3.740s
sys	0m0.144s

Testing nqueens under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/nqueens.scm /tmp/r7rs-benchmarks/TR7/nqueens.scm
Running...
Running nqueens:13:10
Elapsed time: 185.741 seconds (185.74) for nqueens:13:10
+!CSVLINE!+tr7-unknown,nqueens:13:10,185.741

real	3m5.760s
user	3m5.501s
sys	0m0.097s

Testing paraffins under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/paraffins.scm /tmp/r7rs-benchmarks/TR7/paraffins.scm
Running...
Running paraffins:23:10
Elapsed time: 10.288 seconds (10.289) for paraffins:23:10
+!CSVLINE!+tr7-unknown,paraffins:23:10,10.288

real	0m10.314s
user	0m10.148s
sys	0m0.153s

Testing parsing under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/parsing.scm /tmp/r7rs-benchmarks/TR7/parsing.scm
Running...
Running parsing:2500
./bench: line 496: 387293 Killed                  ${TR7I} "$1" < "$2"

real	5m0.184s
user	4m59.853s
sys	0m0.137s
+!CSVLINE!+tr7,parsing,ULIMITKILLED

Testing peval under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/peval.scm /tmp/r7rs-benchmarks/TR7/peval.scm
Running...
Running peval:2000
Elapsed time: 50.894 seconds (50.893) for peval:2000
+!CSVLINE!+tr7-unknown,peval:2000,50.894

real	0m50.921s
user	0m50.746s
sys	0m0.123s

Testing primes under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/primes.scm /tmp/r7rs-benchmarks/TR7/primes.scm
Running...
Running primes:1000:10000
Elapsed time: 22.53 seconds (22.529) for primes:1000:10000
+!CSVLINE!+tr7-unknown,primes:1000:10000,22.53

real	0m22.547s
user	0m22.377s
sys	0m0.146s

Testing quicksort under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/quicksort.scm /tmp/r7rs-benchmarks/TR7/quicksort.scm
Running...
Running quicksort:10000:2500
Elapsed time: 88.367 seconds (88.36799999999999) for quicksort:10000:2500
+!CSVLINE!+tr7-unknown,quicksort:10000:2500,88.367

real	1m28.398s
user	1m28.139s
sys	0m0.146s

Testing scheme under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/scheme.scm /tmp/r7rs-benchmarks/TR7/scheme.scm
Running...
Running scheme:100000
Elapsed time: 54.614 seconds (54.614) for scheme:100000
+!CSVLINE!+tr7-unknown,scheme:100000,54.614

real	0m54.633s
user	0m54.422s
sys	0m0.126s

Testing slatex under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/slatex.scm /tmp/r7rs-benchmarks/TR7/slatex.scm
Running...
Running slatex:500
Elapsed time: 9.869999999999999 seconds (9.869999999999999) for slatex:500
+!CSVLINE!+tr7-unknown,slatex:500,9.869999999999999

real	0m9.907s
user	0m8.043s
sys	0m1.811s

Testing chudnovsky under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/chudnovsky.scm /tmp/r7rs-benchmarks/TR7/chudnovsky.scm
Running...
Running chudnovsky:50:500:50:1000
Error: when calling quotient, argument 1 must be integer: (+nan.0 -159329786140322780)
   #0 in pi at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:41 args (500)
   #1 in pies at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:46 args (500 500 50)
   #2 in pies at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:47 args (450 500 50)
   #3 in pies at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:47 args (400 500 50)
   #4 in pies at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:47 args (350 500 50)
   #5 in pies at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:47 args (300 500 50)
   #6 in pies at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:47 args (250 500 50)
   #7 in pies at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:47 args (200 500 50)
   #8 in pies at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:47 args (150 500 50)
   #9 in pies at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:47 args (100 500 50)
   #10 in pies at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:47 args (50 500 50)
   #11 in loop at /tmp/r7rs-benchmarks/TR7/chudnovsky.scm:106 args (0 #f)

real	0m0.018s
user	0m0.010s
sys	0m0.007s

Testing nboyer under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/nboyer.scm /tmp/r7rs-benchmarks/TR7/nboyer.scm
Running...
Running nboyer:5:1
Elapsed time: 44.558 seconds (44.559) for nboyer:5:1
+!CSVLINE!+tr7-unknown,nboyer:5:1,44.558

real	0m44.580s
user	0m44.396s
sys	0m0.107s

Testing sboyer under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/sboyer.scm /tmp/r7rs-benchmarks/TR7/sboyer.scm
Running...
Running sboyer:5:1
Elapsed time: 45.499 seconds (45.499) for sboyer:5:1
+!CSVLINE!+tr7-unknown,sboyer:5:1,45.499

real	0m45.520s
user	0m45.323s
sys	0m0.140s

Testing gcbench under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/gcbench.scm /tmp/r7rs-benchmarks/TR7/gcbench.scm
Running...
The garbage collector should touch about 128 megabytes of heap storage.
The use of more or less memory will skew the results.
Running gcbench:20:1
Garbage Collector Test
 Stretching memory with a binary tree of depth 20
 Total memory available= ???????? bytes  Free memory= ???????? bytes
GCBench: Main
 Creating a long-lived binary tree of depth 18
 Creating a long-lived array of 2097148 inexact reals
 Total memory available= ???????? bytes  Free memory= ???????? bytes
Creating 135300 trees of depth 4
GCBench: Top down construction
GCBench: Bottom up construction
Creating 33026 trees of depth 6
GCBench: Top down construction
GCBench: Bottom up construction
Creating 8208 trees of depth 8
GCBench: Top down construction
GCBench: Bottom up construction
Creating 2048 trees of depth 10
GCBench: Top down construction
GCBench: Bottom up construction
Creating 512 trees of depth 12
GCBench: Top down construction
GCBench: Bottom up construction
Creating 128 trees of depth 14
GCBench: Top down construction
GCBench: Bottom up construction
Creating 32 trees of depth 16
GCBench: Top down construction
GCBench: Bottom up construction
Creating 8 trees of depth 18
GCBench: Top down construction
GCBench: Bottom up construction
 Total memory available= ???????? bytes  Free memory= ???????? bytes
Elapsed time: 16.372 seconds (16.373) for gcbench:20:1
+!CSVLINE!+tr7-unknown,gcbench:20:1,16.372

real	0m16.393s
user	0m16.197s
sys	0m0.166s

Testing mperm under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/mperm.scm /tmp/r7rs-benchmarks/TR7/mperm.scm
Running...
Running mperm:20:10:2:1
Elapsed time: 166.392 seconds (166.392) for mperm:20:10:2:1
+!CSVLINE!+tr7-unknown,mperm:20:10:2:1,166.392

real	2m50.623s
user	2m50.136s
sys	0m0.146s

Testing equal under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/equal.scm /tmp/r7rs-benchmarks/TR7/equal.scm
Running...
Running equal:100:100:8:1000:2000:5000
./bench: line 496: 388138 Killed                  ${TR7I} "$1" < "$2"

real	5m0.111s
user	4m59.966s
sys	0m0.007s
+!CSVLINE!+tr7,equal,ULIMITKILLED

Testing bv2string under TR7
Including prelude /home/nex/src/r7rs-benchmarks/src/TR7-prelude.scm
Compiling...
tr7_comp /tmp/r7rs-benchmarks/TR7/bv2string.scm /tmp/r7rs-benchmarks/TR7/bv2string.scm
Running...
Running bv2string:1000:1000:100
Elapsed time: 14.513 seconds (14.513) for bv2string:1000:1000:100
+!CSVLINE!+tr7-unknown,bv2string:1000:1000:100,14.513

real	0m14.551s
user	0m14.303s
sys	0m0.236s
